// Generated by dart2js, the Dart to JavaScript compiler version: 0.6.5.0_r25017.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
$$._HTMLElement = {"": "Element;"};

$$.AnchorElement = {"": "_HTMLElement;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.AnimationEvent = {"": "Event;"};

$$.AreaElement = {"": "_HTMLElement;"};

$$.AudioElement = {"": "MediaElement;"};

$$.AutocompleteErrorEvent = {"": "Event;"};

$$.BRElement = {"": "_HTMLElement;"};

$$.BaseElement = {"": "_HTMLElement;"};

$$.BeforeLoadEvent = {"": "Event;"};

$$.Blob = {"": "Interceptor;"};

$$.BodyElement = {"": "_HTMLElement;"};

$$.ButtonElement = {"": "_HTMLElement;"};

$$.CDataSection = {"": "Text;"};

$$.CanvasElement = {"": "_HTMLElement;height},width}",
  getContext$2: function(receiver, contextId, attrs) {
    return receiver.getContext(contextId);
  },
  getContext$1: function($receiver, contextId) {
    return this.getContext$2($receiver, contextId, null);
  }
};

$$.CanvasRenderingContext = {"": "Interceptor;"};

$$.CanvasRenderingContext2D = {"": "CanvasRenderingContext;",
  lineWidth$1: function($receiver, arg0) {
    return this.lineWidth.call$1(arg0);
  }
};

$$.CharacterData = {"": "Node0;length="};

$$.CloseEvent = {"": "Event;"};

$$.Comment = {"": "CharacterData;"};

$$.CompositionEvent = {"": "UIEvent;"};

$$.ContentElement = {"": "_HTMLElement;"};

$$.CssFontFaceLoadEvent = {"": "Event;"};

$$.CustomElementConstructor = {"": "Interceptor;"};

$$.CustomEvent = {"": "Event;"};

$$.DListElement = {"": "_HTMLElement;"};

$$.DataListElement = {"": "_HTMLElement;"};

$$.DetailsElement = {"": "_HTMLElement;"};

$$.DeviceMotionEvent = {"": "Event;"};

$$.DeviceOrientationEvent = {"": "Event;"};

$$.DialogElement = {"": "_HTMLElement;"};

$$.DivElement = {"": "_HTMLElement;"};

$$.Document = {"": "Node0;",
  get$onContextMenu: function(receiver) {
    return $.EventStreamProvider_contextmenu.forTarget$1(receiver);
  },
  get$onKeyDown: function(receiver) {
    return $.EventStreamProvider_keydown.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.EventStreamProvider_mousedown.forTarget$1(receiver);
  },
  get$onMouseMove: function(receiver) {
    return $.EventStreamProvider_mousemove.forTarget$1(receiver);
  },
  get$onMouseUp: function(receiver) {
    return $.EventStreamProvider_mouseup.forTarget$1(receiver);
  }
};

$$.DocumentFragment = {"": "Node0;"};

$$.DocumentType = {"": "Node0;"};

$$.DomError = {"": "Interceptor;"};

$$.DomException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.Element = {"": "Node0;",
  get$client: function(receiver) {
    return $.Rect$(receiver.clientLeft, receiver.clientTop, receiver.clientWidth, receiver.clientHeight);
  },
  get$localName: function(receiver) {
    return receiver.localName;
  },
  toString$0: function(receiver) {
    return this.get$localName(receiver);
  },
  get$onDoubleClick: function(receiver) {
    return $.EventStreamProvider_dblclick.forTarget$1(receiver);
  },
  get$onDragStart: function(receiver) {
    return $.EventStreamProvider_dragstart.forTarget$1(receiver);
  }
};

$$.EmbedElement = {"": "_HTMLElement;height},width}"};

$$.ErrorEvent = {"": "Event;"};

$$.Event = {"": "Interceptor;",
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  }
};

$$.EventException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.EventTarget = {"": "Interceptor;"};

$$.FieldSetElement = {"": "_HTMLElement;"};

$$.File = {"": "Blob;"};

$$.FileError = {"": "Interceptor;"};

$$.FileException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.FocusEvent = {"": "UIEvent;"};

$$.FormElement = {"": "_HTMLElement;length="};

$$.HRElement = {"": "_HTMLElement;"};

$$.HashChangeEvent = {"": "Event;"};

$$.HeadElement = {"": "_HTMLElement;"};

$$.HeadingElement = {"": "_HTMLElement;"};

$$.HtmlCollection = {"": "Interceptor_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Node0]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.HtmlDocument = {"": "Document;"};

$$.HtmlElement = {"": "_HTMLElement;"};

$$.HtmlFormControlsCollection = {"": "HtmlCollection;"};

$$.HtmlOptionsCollection = {"": "HtmlCollection;"};

$$.HttpRequest = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  open$5$async$password$user: function(receiver, method, url, async, password, user) {
    return receiver.open(method, url, async, user, password);
  },
  open$2: function($receiver, method, url) {
    return $receiver.open(method, url);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onLoadEnd: function(receiver) {
    return $.EventStreamProvider_loadend.forTarget$1(receiver);
  }
};

$$.HttpRequestProgressEvent = {"": "ProgressEvent;"};

$$.IFrameElement = {"": "_HTMLElement;height},width}"};

$$.ImageElement = {"": "_HTMLElement;height},width},x=,y="};

$$.InputElement = {"": "_HTMLElement;height},width}"};

$$.KeyboardEvent = {"": "UIEvent;",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  }
};

$$.KeygenElement = {"": "_HTMLElement;"};

$$.LIElement = {"": "_HTMLElement;"};

$$.LabelElement = {"": "_HTMLElement;"};

$$.LegendElement = {"": "_HTMLElement;"};

$$.LinkElement = {"": "_HTMLElement;"};

$$.MapElement = {"": "_HTMLElement;"};

$$.MediaElement = {"": "_HTMLElement;currentTime=,ended=",
  play$0: function(receiver) {
    return receiver.play();
  }
};

$$.MediaError = {"": "Interceptor;"};

$$.MediaKeyError = {"": "Interceptor;"};

$$.MediaKeyEvent = {"": "Event;"};

$$.MediaKeyMessageEvent = {"": "Event;"};

$$.MediaKeyNeededEvent = {"": "Event;"};

$$.MediaStreamEvent = {"": "Event;"};

$$.MediaStreamTrackEvent = {"": "Event;"};

$$.MenuElement = {"": "_HTMLElement;"};

$$.MessageEvent = {"": "Event;"};

$$.MetaElement = {"": "_HTMLElement;"};

$$.MeterElement = {"": "_HTMLElement;"};

$$.MidiConnectionEvent = {"": "Event;"};

$$.MidiMessageEvent = {"": "Event;"};

$$.ModElement = {"": "_HTMLElement;"};

$$.MouseEvent = {"": "UIEvent;button=",
  get$client: function(receiver) {
    return $.Point$(receiver.clientX, receiver.clientY);
  }
};

$$.MutationEvent = {"": "Event;"};

$$.Navigator = {"": "Interceptor;"};

$$.NavigatorUserMediaError = {"": "Interceptor;"};

$$.Node0 = {"": "EventTarget;",
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? $.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.NodeList = {"": "Interceptor_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Node0]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Notation = {"": "Node0;"};

$$.OListElement = {"": "_HTMLElement;"};

$$.ObjectElement = {"": "_HTMLElement;height},width}"};

$$.OptGroupElement = {"": "_HTMLElement;"};

$$.OptionElement = {"": "_HTMLElement;"};

$$.OutputElement = {"": "_HTMLElement;"};

$$.OverflowEvent = {"": "Event;"};

$$.PageTransitionEvent = {"": "Event;"};

$$.ParagraphElement = {"": "_HTMLElement;"};

$$.ParamElement = {"": "_HTMLElement;"};

$$.PopStateEvent = {"": "Event;"};

$$.PositionError = {"": "Interceptor;"};

$$.PreElement = {"": "_HTMLElement;"};

$$.ProcessingInstruction = {"": "Node0;"};

$$.ProgressElement = {"": "_HTMLElement;"};

$$.ProgressEvent = {"": "Event;"};

$$.QuoteElement = {"": "_HTMLElement;"};

$$.ResourceProgressEvent = {"": "ProgressEvent;"};

$$.RtcDataChannelEvent = {"": "Event;"};

$$.RtcDtmfToneChangeEvent = {"": "Event;"};

$$.RtcIceCandidateEvent = {"": "Event;"};

$$.ScriptElement = {"": "_HTMLElement;"};

$$.SecurityPolicyViolationEvent = {"": "Event;"};

$$.SelectElement = {"": "_HTMLElement;length="};

$$.ShadowElement = {"": "_HTMLElement;"};

$$.ShadowRoot = {"": "DocumentFragment;"};

$$.SourceElement = {"": "_HTMLElement;"};

$$.SpanElement = {"": "_HTMLElement;"};

$$.SpeechInputEvent = {"": "Event;"};

$$.SpeechRecognitionError = {"": "Event;"};

$$.SpeechRecognitionEvent = {"": "Event;"};

$$.SpeechSynthesisEvent = {"": "Event;"};

$$.StorageEvent = {"": "Event;"};

$$.StyleElement = {"": "_HTMLElement;"};

$$.TableCaptionElement = {"": "_HTMLElement;"};

$$.TableCellElement = {"": "_HTMLElement;"};

$$.TableColElement = {"": "_HTMLElement;"};

$$.TableElement = {"": "_HTMLElement;"};

$$.TableRowElement = {"": "_HTMLElement;"};

$$.TableSectionElement = {"": "_HTMLElement;"};

$$.TemplateElement = {"": "_HTMLElement;"};

$$.Text = {"": "CharacterData;"};

$$.TextAreaElement = {"": "_HTMLElement;"};

$$.TextEvent = {"": "UIEvent;"};

$$.TitleElement = {"": "_HTMLElement;"};

$$.TouchEvent = {"": "UIEvent;"};

$$.TrackElement = {"": "_HTMLElement;"};

$$.TrackEvent = {"": "Event;"};

$$.TransitionEvent = {"": "Event;"};

$$.UIEvent = {"": "Event;which="};

$$.UListElement = {"": "_HTMLElement;"};

$$.UnknownElement = {"": "_HTMLElement;"};

$$.VideoElement = {"": "MediaElement;height},width}"};

$$.WheelEvent = {"": "MouseEvent;"};

$$.Window = {"": "EventTarget;",
  requestAnimationFrame$1: function(receiver, callback) {
    this._ensureRequestAnimationFrame$0(receiver);
    return this._requestAnimationFrame$1(receiver, callback);
  },
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.XPathException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$._Attr = {"": "Node0;"};

$$._Entity = {"": "Node0;"};

$$.VersionChangeEvent = {"": "Event;"};

$$.AElement = {"": "StyledElement;"};

$$.AltGlyphElement = {"": "TextPositioningElement;"};

$$.AnimateElement = {"": "AnimationElement;"};

$$.AnimateMotionElement = {"": "AnimationElement;"};

$$.AnimateTransformElement = {"": "AnimationElement;"};

$$.AnimatedLength = {"": "Interceptor;"};

$$.AnimatedLengthList = {"": "Interceptor;"};

$$.AnimatedNumber = {"": "Interceptor;"};

$$.AnimatedNumberList = {"": "Interceptor;"};

$$.AnimationElement = {"": "SvgElement;"};

$$.CircleElement = {"": "StyledElement;"};

$$.ClipPathElement = {"": "StyledElement;"};

$$.DefsElement = {"": "StyledElement;"};

$$.DescElement = {"": "StyledElement;"};

$$.EllipseElement = {"": "StyledElement;"};

$$.FEBlendElement = {"": "StyledElement;x=,y="};

$$.FEColorMatrixElement = {"": "StyledElement;x=,y="};

$$.FEComponentTransferElement = {"": "StyledElement;x=,y="};

$$.FECompositeElement = {"": "StyledElement;x=,y="};

$$.FEConvolveMatrixElement = {"": "StyledElement;x=,y="};

$$.FEDiffuseLightingElement = {"": "StyledElement;x=,y="};

$$.FEDisplacementMapElement = {"": "StyledElement;x=,y="};

$$.FEDistantLightElement = {"": "SvgElement;"};

$$.FEFloodElement = {"": "StyledElement;x=,y="};

$$.FEFuncAElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncBElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncGElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncRElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEGaussianBlurElement = {"": "StyledElement;x=,y="};

$$.FEImageElement = {"": "StyledElement;x=,y="};

$$.FEMergeElement = {"": "StyledElement;x=,y="};

$$.FEMergeNodeElement = {"": "SvgElement;"};

$$.FEMorphologyElement = {"": "StyledElement;x=,y="};

$$.FEOffsetElement = {"": "StyledElement;x=,y="};

$$.FEPointLightElement = {"": "SvgElement;x=,y="};

$$.FESpecularLightingElement = {"": "StyledElement;x=,y="};

$$.FESpotLightElement = {"": "SvgElement;x=,y="};

$$.FETileElement = {"": "StyledElement;x=,y="};

$$.FETurbulenceElement = {"": "StyledElement;x=,y="};

$$.FilterElement = {"": "StyledElement;x=,y="};

$$.ForeignObjectElement = {"": "StyledElement;x=,y="};

$$.GElement = {"": "StyledElement;"};

$$.ImageElement0 = {"": "StyledElement;x=,y="};

$$.LineElement = {"": "StyledElement;"};

$$.LinearGradientElement = {"": "_GradientElement;"};

$$.MarkerElement = {"": "StyledElement;"};

$$.MaskElement = {"": "StyledElement;x=,y="};

$$.MetadataElement = {"": "SvgElement;"};

$$.PathElement = {"": "StyledElement;"};

$$.PatternElement = {"": "StyledElement;x=,y="};

$$.PolygonElement = {"": "StyledElement;"};

$$.PolylineElement = {"": "StyledElement;"};

$$.RadialGradientElement = {"": "_GradientElement;"};

$$.Rect0 = {"": "Interceptor;x=,y="};

$$.RectElement = {"": "StyledElement;x=,y="};

$$.ScriptElement0 = {"": "SvgElement;"};

$$.SetElement = {"": "AnimationElement;"};

$$.StopElement = {"": "StyledElement;"};

$$.StyleElement0 = {"": "SvgElement;"};

$$.StyledElement = {"": "SvgElement;"};

$$.SvgDocument = {"": "Document;"};

$$.SvgElement = {"": "Element;"};

$$.SvgException = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.SvgSvgElement = {"": "StyledElement;x=,y="};

$$.SwitchElement = {"": "StyledElement;"};

$$.SymbolElement = {"": "StyledElement;"};

$$.TSpanElement = {"": "TextPositioningElement;"};

$$.TextContentElement = {"": "StyledElement;"};

$$.TextElement = {"": "TextPositioningElement;"};

$$.TextPathElement = {"": "TextContentElement;"};

$$.TextPositioningElement = {"": "TextContentElement;x=,y="};

$$.TitleElement0 = {"": "StyledElement;"};

$$.UseElement = {"": "StyledElement;x=,y="};

$$.ViewElement = {"": "SvgElement;"};

$$.ZoomEvent = {"": "UIEvent;"};

$$._GradientElement = {"": "StyledElement;"};

$$._SVGComponentTransferFunctionElement = {"": "SvgElement;"};

$$.AudioProcessingEvent = {"": "Event;"};

$$.OfflineAudioCompletionEvent = {"": "Event;"};

$$.Buffer = {"": "Interceptor;"};

$$.ContextEvent = {"": "Event;"};

$$.Program = {"": "Interceptor;"};

$$.RenderingContext = {"": "CanvasRenderingContext;",
  activeTexture$1: function(receiver, texture) {
    return receiver.activeTexture(texture);
  },
  attachShader$2: function(receiver, program, shader) {
    return receiver.attachShader(program, shader);
  },
  bindBuffer$2: function(receiver, target, buffer) {
    return receiver.bindBuffer(target, buffer);
  },
  bindTexture$2: function(receiver, target, texture) {
    return receiver.bindTexture(target, texture);
  },
  blendFunc$2: function(receiver, sfactor, dfactor) {
    return receiver.blendFunc(sfactor, dfactor);
  },
  bufferDataTyped$3: function(receiver, target, data, usage) {
    return receiver.bufferData(target, data, usage);
  },
  clear$1: function(receiver, mask) {
    return receiver.clear(mask);
  },
  clearColor$4: function(receiver, red, green, blue, alpha) {
    return receiver.clearColor(red, green, blue, alpha);
  },
  compileShader$1: function(receiver, shader) {
    return receiver.compileShader(shader);
  },
  createBuffer$0: function(receiver) {
    return receiver.createBuffer();
  },
  createProgram$0: function(receiver) {
    return receiver.createProgram();
  },
  createShader$1: function(receiver, type) {
    return receiver.createShader(type);
  },
  disableVertexAttribArray$1: function(receiver, index) {
    return receiver.disableVertexAttribArray(index);
  },
  drawElements$4: function(receiver, mode, count, type, offset) {
    return receiver.drawElements(mode, count, type, offset);
  },
  enable$1: function(receiver, cap) {
    return receiver.enable(cap);
  },
  enableVertexAttribArray$1: function(receiver, index) {
    return receiver.enableVertexAttribArray(index);
  },
  getAttribLocation$2: function(receiver, program, $name) {
    return receiver.getAttribLocation(program, $name);
  },
  getProgramInfoLog$1: function(receiver, program) {
    return receiver.getProgramInfoLog(program);
  },
  getProgramParameter$2: function(receiver, program, pname) {
    return receiver.getProgramParameter(program, pname);
  },
  getShaderParameter$2: function(receiver, shader, pname) {
    return receiver.getShaderParameter(shader, pname);
  },
  getUniformLocation$2: function(receiver, program, $name) {
    return receiver.getUniformLocation(program, $name);
  },
  lineWidth$1: function(receiver, width) {
    return receiver.lineWidth(width);
  },
  linkProgram$1: function(receiver, program) {
    return receiver.linkProgram(program);
  },
  shaderSource$2: function(receiver, shader, string) {
    return receiver.shaderSource(shader, string);
  },
  uniform1f$2: function(receiver, $location, x) {
    return receiver.uniform1f($location, x);
  },
  uniform1i$2: function(receiver, $location, x) {
    return receiver.uniform1i($location, x);
  },
  uniformMatrix4fv$3: function(receiver, $location, transpose, array) {
    return receiver.uniformMatrix4fv($location, transpose, array);
  },
  useProgram$1: function(receiver, program) {
    return receiver.useProgram(program);
  },
  vertexAttribPointer$6: function(receiver, indx, size, type, normalized, stride, offset) {
    return receiver.vertexAttribPointer(indx, size, type, normalized, stride, offset);
  },
  viewport$4: function(receiver, x, y, width, height) {
    return receiver.viewport(x, y, width, height);
  }
};

$$.Shader = {"": "Interceptor;"};

$$.Texture = {"": "Interceptor;"};

$$.UniformLocation = {"": "Interceptor;"};

$$.SqlError = {"": "Interceptor;"};

$$.SqlException = {"": "Interceptor;"};

$$.ByteBuffer = {"": "Interceptor;"};

$$.TypedData = {"": "Interceptor;",
  _invalidIndex$2: function(receiver, index, $length) {
    var t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, $length))
      throw $.wrapException($.RangeError$range(index, 0, $length));
    else
      throw $.wrapException($.ArgumentError$("Invalid list index " + $.S(index)));
  }
};

$$.Float32List = {"": "TypedData_ListMixin_FixedLengthListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint16List = {"": "TypedData_ListMixin_FixedLengthListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint8ClampedList = {"": "Uint8List;",
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout1(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout1: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout1(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout1: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  }
};

$$.Uint8List = {"": "TypedData_ListMixin_FixedLengthListMixin1;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

// Bound closures
$$.BoundClosure$1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](p0);
  }
};

$$.BoundClosure$0 = {"": "BoundClosure;_self,_target,_receiver",
  call$0: function() {
    return this._self[this._target]();
  }
};

$$.Bound_run_RaysWebGL = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](p0);
  },
  call$0: function() {
    return this.call$1(null);
  }
};

$$.Closure$_processWorkerMessage = {"": "Closure;call$2,$name"};

$$.Closure$_throwFormatException = {"": "Closure;call$1,$name"};

$$.Closure$wrapException = {"": "Closure;call$1,$name"};

$$.Closure$toStringWrapper = {"": "Closure;call$0,$name"};

$$.Closure$invokeClosure = {"": "Closure;call$5,$name"};

$$.Closure$typeNameInChrome = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInSafari = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInOpera = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInFirefox = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInIE = {"": "Closure;call$1,$name"};

$$.Closure$constructorNameFallback = {"": "Closure;call$1,$name"};

$$.Closure$_asyncRunCallback = {"": "Closure;call$0,$name"};

$$.Closure$main = {"": "Closure;call$0,$name"};

(function (reflectionData) {
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = {};
  if (!init.mangledGlobalNames) init.mangledGlobalNames = {};
  init.getterPrefix = "get$";
  init.setterPrefix = "set$";
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var descriptor = data[3];
    var classes = [];
    var functions = [];
    for (var property in descriptor) {
      if (!hasOwnProperty.call(descriptor, property)) continue;
      var element = descriptor[property];
      var firstChar = property.substring(0, 1);
      var previousProperty;
      if (firstChar == "+") {
        mangledGlobalNames[previousProperty] = property.substring(1);
      } else if (firstChar == "@") {
        property = property.substring(1);
        $[property]["@"] = element;
      } else if (typeof element === "function") {
        $[previousProperty = property] = element;
        functions.push(property);
      } else {
        previousProperty = property;
        var newDesc = {};
        var previousProp;
        for (var prop in element) {
          if (!hasOwnProperty.call(element, prop)) continue;
          firstChar = prop.substring(0, 1);
          if (firstChar == "+") {
            mangledNames[previousProp] = prop.substring(1);
          } else if (firstChar == "@" && prop != "@") {
            newDesc[prop.substring(1)]["@"] =element[prop];
          } else {
            newDesc[previousProp = prop] = element[prop];
          }
        }
        $$[property] = newDesc;
        classes.push(property);
      }
    }
    libraries.push([name, uri, classes, functions, metadata]);
  }
})([
["_interceptors", "dart:_interceptors", , {
Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return $.Primitives_objectToString(receiver);
  }
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JSUnknown: {"": "Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JSArray: {"": "List/Interceptor;",
  checkMutable$1: function(receiver, reason) {
    if (!!receiver.immutable$list)
      throw $.wrapException($.UnsupportedError$(reason));
  },
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("add"));
    receiver.push(value);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.ListIterator$(collection); t1.moveNext$0();)
      this.add$1(receiver, t1._liblib$_current);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  sublist$2: function(receiver, start, end) {
    var t1;
    if (start == null)
      $.throwExpression($.ArgumentError$(null));
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw $.wrapException(new $.ArgumentError(start));
    if (start < 0 || start > receiver.length) {
      t1 = receiver.length;
      throw $.wrapException(new $.RangeError("value " + $.S(start) + " not in range 0.." + t1));
    }
    if (typeof end !== "number" || Math.floor(end) !== end)
      throw $.wrapException(new $.ArgumentError(end));
    if (end < start || end > receiver.length) {
      t1 = receiver.length;
      throw $.wrapException(new $.RangeError("value " + $.S(end) + " not in range " + $.S(start) + ".." + t1));
    }
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException($.StateError$("No elements"));
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    this.checkMutable$1(receiver, "set range");
    $.IterableMixinWorkaround_setRangeList(receiver, start, end, iterable, skipCount);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      $.throwExpression($.UnsupportedError$("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    receiver[index] = value;
  },
  $isList: true,
  $asList: null,
  $isList: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true, $asJSArray: function () { return [null]; }, $asList: function () { return [null]; }},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      throw $.wrapException($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      throw $.wrapException($.UnsupportedError$("Infinity"));
    truncated = this.truncateToDouble$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceilToDouble$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floorToDouble$0: function(receiver) {
    return Math.floor(receiver);
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  truncateToDouble$0: function(receiver) {
    return receiver < 0 ? this.ceilToDouble$0(receiver) : this.floorToDouble$0(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver - other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return this.toInt$0(receiver / other);
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.wrapException($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver > other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver >= other;
  },
  $isnum: true
},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    if (index >= receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver.charCodeAt(index);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    return receiver.split(pattern);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    $.checkNum(startIndex);
    endIndex = receiver.length;
    $.checkNum(endIndex);
    if (startIndex < 0)
      throw $.wrapException($.RangeError$value(startIndex));
    if (endIndex == null)
      throw $.iae(endIndex);
    if (startIndex > endIndex)
      throw $.wrapException($.RangeError$value(startIndex));
    if (endIndex > receiver.length)
      throw $.wrapException($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  trim$0: function(receiver) {
    var endIndex, startIndex, codeUnit, endIndex0, endIndex1;
    for (endIndex = receiver.length, startIndex = 0; startIndex < endIndex;) {
      if (startIndex >= endIndex)
        $.throwExpression(new $.RangeError("value " + startIndex));
      codeUnit = receiver.charCodeAt(startIndex);
      if (codeUnit === 32 || codeUnit === 13 || $.JSString__isWhitespace(codeUnit))
        ++startIndex;
      else
        break;
    }
    if (startIndex === endIndex)
      return "";
    for (endIndex0 = endIndex; true; endIndex0 = endIndex1) {
      endIndex1 = endIndex0 - 1;
      if (endIndex1 < 0)
        $.throwExpression(new $.RangeError("value " + endIndex1));
      if (endIndex1 >= endIndex)
        $.throwExpression(new $.RangeError("value " + endIndex1));
      codeUnit = receiver.charCodeAt(endIndex1);
      if (codeUnit === 32 || codeUnit === 13 || $.JSString__isWhitespace(codeUnit))
        ;
      else
        break;
    }
    if (startIndex === 0 && endIndex0 === endIndex)
      return receiver;
    return receiver.substring(startIndex, endIndex0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver[index];
  },
  $isString: true
},

getInterceptor: function(object) {
  return $.getInterceptor(object);
},

getDispatchProperty: function(object) {
  return object[$.dispatchPropertyName];
},

setDispatchProperty: function(object, value) {
  Object.defineProperty(object, $.dispatchPropertyName, {value: value, enumerable: false, writable: true, configurable: true});
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

dispatchRecordInterceptor: function(record) {
  return record.i;
},

dispatchRecordProto: function(record) {
  return record.p;
},

dispatchRecordExtension: function(record) {
  return record.e;
},

dispatchRecordIndexability: function(record) {
  return record.x;
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto;
  record = $.getDispatchProperty(object);
  if (record != null) {
    proto = $.dispatchRecordProto(record);
    if (false === proto)
      return $.dispatchRecordInterceptor(record);
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return $.dispatchRecordInterceptor(record);
    if ($.dispatchRecordExtension(record) === objectProto)
      return proto(object, record);
  }
  record = $.lookupDispatchRecord(object);
  if (record == null)
    return $.C_JSUnknown;
  $.setDispatchProperty(Object.getPrototypeOf(object), record);
  return $.getNativeInterceptor(object);
},

initializeDispatchProperty: function(setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  if (typeof rootProperty !== "string")
    return $.initializeDispatchProperty$bailout(1, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor);
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    if (i > 0)
      property = rootProperty + "_" + i;
    else
      property = rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, $.makeDispatchRecord(jsObjectInterceptor, objectProto, null, null));
      return;
    }
  }
},

initializeDispatchProperty$bailout: function(state0, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    property = i > 0 ? rootProperty + "_" + i : rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, $.makeDispatchRecord(jsObjectInterceptor, objectProto, null, null));
      return;
    }
  }
},

JSString__isWhitespace: function(codeUnit) {
  if (codeUnit < 256)
    switch (codeUnit) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 133:
      case 160:
        return true;
      default:
        return false;
    }
  switch (codeUnit) {
    case 5760:
    case 6158:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8232:
    case 8233:
    case 8239:
    case 8287:
    case 12288:
    case 65279:
      return true;
    default:
      return false;
  }
}}],
["_isolate_helper", "dart:_isolate_helper", , {
CloseToken: {"": "Object;", $isCloseToken: true},

JsIsolateSink: {"": "EventSink;_isClosed,_port<",
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$isIsolateSink && $.$eq(this._port, other.get$_port());
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      if (t2 != null) {
        $.get$IsolateNatives_thisScript();
        t2 = true;
      } else
        t2 = false;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  _Manager$1: function(entry) {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
},

_IsolateContext: {"": "Object;id,ports,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $._globalState().currentContext;
    $._globalState().currentContext = this;
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $._globalState().currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1;
    if (this.ports.containsKey$1(portId))
      throw $.wrapException($.Exception_Exception("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $._globalState().isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    t1 = this.ports;
    if (t1.get$isEmpty(t1)) {
      t1 = $._globalState().isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate();
  }
},

_EventLoop: {"": "Object;events,activeTimerCount",
  enqueue$3: function(isolate, fn, msg) {
    this.events.addLast$1($._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty(t1))
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($._globalState().rootContext != null)
      if ($._globalState().isolates.containsKey$1($._globalState().rootContext.id))
        if ($._globalState().fromCommandLine === true) {
          var t1 = $._globalState().rootContext.ports;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
      else
        t1 = false;
    else
      t1 = false;
    if (t1)
      throw $.wrapException($.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true) {
        t2 = t1.isolates;
        t2 = t2.get$isEmpty(t2) && t1.topEventLoop.activeTimerCount === 0;
      } else
        t2 = false;
      if (t2) {
        t1 = t1.mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "close"])));
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($._globalState().isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        t1 = $._globalState().mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_run(this);
  }
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
},

_MainManagerStub: {"": "Object;",
  postMessage$1: function(_, msg) {
    self.postMessage(msg);
  }
},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
},

_BaseSendPort: {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_NativeJsSendPort) && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_WorkerSendPort) && true)
      throw $.wrapException($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(this, message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_closure(completer, port));
    return completer.future;
  },
  $isSendPort: true
},

_BaseSendPort_call_closure: {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1 = this.port_1;
    t1.close$0(t1);
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!$.getInterceptor(value).$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(t1, value);
  }
},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_closure(this, message, replyTo));
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $._globalState().isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = $._globalState().currentContext != null && $._globalState().currentContext.id !== t2.get$_isolateId();
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $._globalState().topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__closure(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t2 = this.box_0;
      t1.get$_receivePort()._callback$2(t2.msg_0, t2.reply_1);
    }
  }
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_closure(this, message, replyTo));
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_WorkerSendPort)
      t1 = $.$eq(this._workerId, other._workerId) && $.$eq(this._isolateId, other._isolateId) && $.$eq(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = this._workerId;
    if (typeof t1 !== "number")
      throw t1.$shl();
    t2 = this._isolateId;
    if (typeof t2 !== "number")
      throw t2.$shl();
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($._globalState().isWorker === true) {
      t1 = $._globalState().mainManager;
      t1.postMessage$1(t1, workerMessage);
    } else {
      t2 = $._globalState().managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  }
},

ReceivePortImpl: {"": "Object;_id<,_callback<",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function(_) {
    this._callback = null;
    $._globalState().currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $._globalState().currentContext.id);
  },
  ReceivePortImpl$0: function() {
    var t1 = $._globalState().currentContext;
    t1.register$2(t1, this._id, this);
  }
},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_closure(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1.$indexSet(t1, map, true);
    t1 = map.get$values(map);
    t1.forEach$1(t1, new $._PendingSendPortFinder_visitMap_closure(this));
  },
  visitSendPort$1: function(port) {
  },
  visitIsolateSink$1: function(sink) {
    this.visitSendPort$1(sink._port);
  },
  visitCloseToken$1: function(token) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
},

_PendingSendPortFinder_visitList_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_PendingSendPortFinder_visitMap_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $._globalState().currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitWorkerSendPort$1: function(port) {
    return ["sendport", port._workerId, port._isolateId, port._receivePortId];
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitIsolateSink$1: function(sink) {
    var isClosed, result;
    isClosed = sink._isClosed;
    result = $.JsIsolateSink$fromPort(this.visitSendPort$1(sink._port));
    result._isClosed = isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $._globalState().currentManagerId)) {
      t1 = $._globalState().isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, isClosed, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    isClosed = t1.$index(list, 2);
    result = $.JsIsolateSink$fromPort(port);
    result._isClosed = isClosed;
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return $.C_CloseToken;
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List(null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    if ($._MessageTraverser_isPrimitive(x))
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!$.getInterceptor(x).$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isCloseToken)
      return this.visitCloseToken$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.wrapException("Message serialization: Illegal value " + $.S(x) + " passed");
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.isJsIndexable(list, list[$.dispatchPropertyName])))
      return this.visitList$1$bailout1(1, list);
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len);
    t1 = this._visited;
    t1.$indexSet(t1, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      copy[i] = this._dispatch$1(list[i]);
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list) {
    var t1, copy, len, t2, i, t3;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = $.List_List(len);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    if (typeof len !== "number")
      throw $.iae(len);
    t2 = copy.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      copy[i] = t3;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.Map_Map();
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    map.forEach$1(map, new $._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    $.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  }
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id, keys;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = map.get$keys();
    keys = this._serializeList$1(t1.toList$0(t1));
    t1 = map.get$values(map);
    return ["map", id, keys, this._serializeList$1(t1.toList$0(t1))];
  },
  _serializeList$1: function(list) {
    var len, result, i;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.isJsIndexable(list, list[$.dispatchPropertyName])))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      result[i] = this._dispatch$1(list[i]);
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list) {
    var t1, len, result, t2, i, t3;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = $.List_List(len);
    if (typeof len !== "number")
      throw $.iae(len);
    t2 = result.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      result[i] = t3;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if ($._Deserializer_isPrimitive(x))
      return x;
    this._deserialized = $.HashMap$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = $.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !$.isJsIndexable(dartList, dartList[$.dispatchPropertyName]))
      return this._deserializeList$1$bailout(1, dartList, id);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t1, len, i;
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = $.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw $.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = $.Map_Map();
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !$.isJsIndexable(keys, keys[$.dispatchPropertyName])))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !$.isJsIndexable(values, values[$.dispatchPropertyName])))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values) {
    switch (state0) {
      case 0:
        result = $.Map_Map();
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        var id, t2, len, i;
        state0 = 0;
        t1 = $.getInterceptor$asx(keys);
        len = t1.get$length(keys);
        if (typeof len !== "number")
          throw $.iae(len);
        t2 = $.getInterceptor$asx(values);
        i = 0;
        for (; i < len; ++i)
          result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.wrapException("Unexpected serialized object");
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle?",
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if (milliseconds === 0)
      t1 = !$.hasTimer() || $._globalState().isWorker === true;
    else
      t1 = false;
    if (t1) {
      this._handle = 1;
      $._globalState().topEventLoop.enqueue$3($._globalState().currentContext, new $.TimerImpl_internalCallback(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer()) {
      t1 = $._globalState().topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(new $.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
    } else
      throw $.wrapException($.UnsupportedError$("Timer greater than 0."));
  }
},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.this_0.set$_handle(null);
    this.callback_1.call$0();
  }
},

TimerImpl_internalCallback0: {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.this_2.set$_handle(null);
    var t1 = $._globalState().topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
    this.callback_3.call$0();
  }
},

JsIsolateSink$fromPort: function(_port) {
  return new $.JsIsolateSink(false, _port);
},

_callInIsolate: function(isolate, $function) {
  var result = isolate.eval$1($function);
  $._globalState().topEventLoop.run$0();
  return result;
},

_currentIsolate: function() {
  return $._globalState().currentContext;
},

startRootIsolate: function(entry) {
  var rootContext;
  $._globalState0($._Manager$(entry));
  if ($._globalState().isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().rootContext = rootContext;
  $._globalState().currentContext = rootContext;
  rootContext.eval$1(entry);
  $._globalState().topEventLoop.run$0();
},

_globalState: function() {
  return $globalState;
},

_globalState0: function(val) {
  $globalState = val;
},

_Manager$: function(entry) {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
},

_IsolateContext$: function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
},

_EventLoop$: function() {
  return new $._EventLoop($.Queue_Queue(), 0);
},

_IsolateEvent$: function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
},

_MainManagerStub$: function() {
  return new $._MainManagerStub();
},

IsolateNatives_computeThisScript: function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.wrapException($.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives_computeGlobalThis: function() {
  return function() { return this; }();
},

IsolateNatives__getEventData: function(e) {
  return e.data;
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, replyTo, context, t2;
  msg = $._deserializeMessage($.IsolateNatives__getEventData(e));
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $._globalState().currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $._globalState().entry : $.IsolateNatives__getJSFunctionFromName(functionName);
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $._globalState().topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_closure(entryPoint, replyTo), "worker-start");
      $._globalState().currentContext = context;
      $._globalState().topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        $.send$2$x(t1.$index(msg, "port"), t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $._globalState().topEventLoop.run$0();
      break;
    case "close":
      t1 = $._globalState().managers;
      t2 = $.get$IsolateNatives_workerIds();
      t1.remove$1(t1, t2.$index(t2, sender));
      sender.terminate();
      $._globalState().topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($._globalState().isWorker === true) {
        t1 = $._globalState().mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      } else
        $.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw $.wrapException(t1.$index(msg, "msg"));
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, exception;
  if ($._globalState().isWorker === true) {
    t1 = $._globalState().mainManager;
    t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  } else
    try {
      $.IsolateNatives__consoleLog(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.wrapException($.Exception_Exception(trace));
    }

},

IsolateNatives__consoleLog: function(msg) {
  $.get$globalThis().console.log(msg);
},

IsolateNatives__getJSFunctionFromName: function(functionName) {
  return $[functionName];
},

IsolateNatives__startIsolate: function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  $.send$2$x(replyTo, "spawned", $.port().toSendPort$0());
  topLevel.call$0();
},

IsolateNatives__spawnWorker: function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { $.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $._globalState();
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $._globalState().managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
},

_NativeJsSendPort$: function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
},

_WorkerSendPort$: function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
},

ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
},

_waitForPendingPorts: function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Future_wait(finder.ports).then$1(new $._waitForPendingPorts_closure(callback));
},

_PendingSendPortFinder$: function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
},

_serializeMessage: function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
},

_deserializeMessage: function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
},

_JsSerializer$: function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
},

_JsCopier$: function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
},

_JsDeserializer$: function() {
  return new $._JsDeserializer(null);
},

_JsVisitedMap$: function() {
  return new $._JsVisitedMap(null);
},

_MessageTraverserVisitedMap$: function() {
  return new $._MessageTraverserVisitedMap();
},

_MessageTraverser_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

_Deserializer_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

TimerImpl$: function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
},

hasTimer: function() {
  return $.get$globalThis().setTimeout != null;
}}],
["_js_helper", "dart:_js_helper", , {
DartError: {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper$closure.call$0;
  }
},

_StackTrace: {"": "Object;_stack",
  toString$0: function(_) {
    var t1 = this._stack;
    return t1 != null ? t1 : "";
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
},

BoundClosure: {"": "Closure;_self,_target,_receiver",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (this === other)
      return true;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isBoundClosure)
      return false;
    return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this._self) + $.get$hashCode$(this._target) + $.get$hashCode$(this._receiver) & 0x3ffffff;
  },
  $isBoundClosure: true
},

Null: {"": "Object;"},

isJsIndexable: function(object, record) {
  var result;
  if (record != null) {
    result = $.dispatchRecordIndexability(record);
    if (result != null)
      return result;
  }
  return typeof object === "object" && object !== null && !!$.getInterceptor(object).$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = $.toString$0(value);
  if (typeof res !== "string")
    throw $.wrapException($.ArgumentError$(value));
  return res;
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives_printString: function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof console == "object" && typeof console.log == "function") {
    console.log(string);
    return;
  }
  if (typeof window == "object")
    return;
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
},

Primitives__throwFormatException: function(string) {
  throw $.wrapException($.FormatException$(string));
},

Primitives_parseInt: function(source, radix, handleError) {
  var match, t1;
  handleError = $.Primitives__throwFormatException$closure;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (match != null) {
    t1 = match.length;
    if (2 >= t1)
      throw $.ioore(2);
    if (match[2] != null)
      return parseInt(source, 16);
    if (3 >= t1)
      throw $.ioore(3);
    if (match[3] != null)
      return parseInt(source, 10);
    return handleError.call$1(source);
  }
  radix = 10;
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
},

Primitives_parseDouble: function(source, handleError) {
  var result, trimmed;
  $.checkString(source);
  handleError = $.Primitives__throwFormatException$closure;
  if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.JSNumber_methods.get$isNaN(result)) {
    trimmed = $.trim$0$s(source);
    if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
      return result;
    return handleError.call$1(source);
  }
  return result;
},

Primitives_formatType: function(className, typeArguments) {
  return $.S(className) + $.joinArguments(typeArguments, 0);
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback($.getInterceptor(object));
  if ($.$eq($name, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  if (t1.codeUnitAt$1($name, 0) === 36)
    $name = t1.substring$1($name, 1);
  return $.Primitives_formatType($name, $.getRuntimeTypeInfo(object));
},

Primitives_objectToString: function(object) {
  return "Instance of '" + $.Primitives_objectTypeName(object) + "'";
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException($.ArgumentError$(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException($.ArgumentError$(object));
  object[key] = value;
},

iae: function(argument) {
  throw $.wrapException($.ArgumentError$(argument));
},

ioore: function(index) {
  if (typeof index !== "number" || Math.floor(index) !== index)
    $.iae(index);
  throw $.wrapException($.RangeError$value(index));
},

checkNull: function(object) {
  if (object == null)
    throw $.wrapException($.ArgumentError$(null));
  return object;
},

checkNum: function(value) {
  if (typeof value !== "number")
    throw $.wrapException($.ArgumentError$(value));
  return value;
},

checkString: function(value) {
  if (typeof value !== "string")
    throw $.wrapException($.ArgumentError$(value));
  return value;
},

wrapException: function(ex) {
  var wrapper = $.DartError$(ex == null ? $.NullThrownError$() : ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.wrapException$closure);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
},

throwExpression: function(ex) {
  throw $.wrapException(ex);
},

DartError$: function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
},

DartError_toStringWrapper: function() {
  return $.toString$0(this);
},

unwrapException: function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return ex.dartException;
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (!$.contains(message, "JSNull")) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") || t1.$eq(type, "called_non_callable") || t1.$eq(type, "non_object_property_call") || t1.$eq(type, "non_object_property_load");
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$eq(type, "undefined_method"))
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number >> 16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || message === "'undefined' is not an object" || $.JSString_methods.endsWith$1(message, "is null") || $.JSString_methods.endsWith$1(message, "is undefined") || $.JSString_methods.endsWith$1(message, "is null or undefined") || $.JSString_methods.endsWith$1(message, "of undefined") || $.JSString_methods.endsWith$1(message, "of null"))
        return $.NoSuchMethodError$(null, message, [], $.makeLiteralMap([]), null);
      else {
        if (!$.contains(message, " has no method "))
          if (!$.contains(message, " is not a function"))
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", message, [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(t1 ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && $.contains(message, "call stack"))
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
},

getTraceFromException: function(exception) {
  if (exception == null)
    return;
  if (typeof exception !== "object")
    return;
  if ("stack" in exception)
    return $._StackTrace$(exception.stack);
  else
    return;
},

_StackTrace$: function(_stack) {
  return new $._StackTrace(_stack);
},

makeLiteralMap: function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.get$iterator$ax(keyValuePairs);
  result = $.LinkedHashMap$();
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_closure(closure));
  else if (t1.$eq(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_closure0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_closure1(closure, arg1, arg2));
  else
    throw $.wrapException($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($._currentIsolate(), $.invokeClosure$closure.call$5);
  closure.$identity = $function;
  return $function;
},

throwCyclicInit: function(staticName) {
  throw $.wrapException($.CyclicInitializationError$("Cyclic initialization for static " + $.S(staticName)));
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

getConstructorName: function(type) {
  return type.builtin$cls;
},

runtimeTypeToString: function(type) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array)
    return $.getConstructorName($.getIndex(type, 0)) + $.joinArguments(type, 1);
  else if (typeof type == "function")
    return type.builtin$cls;
  else
    return;
},

joinArguments: function(types, startIndex) {
  var buffer, index, firstArgument, allDynamic, argument, str;
  if ($.isNull(types))
    return "";
  buffer = $.StringBuffer$("");
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    str = $.runtimeTypeToString(argument);
    str = typeof str === "string" ? str : str;
    buffer._contents = buffer._contents + str;
  }
  return allDynamic ? "" : "<" + $.S(buffer) + ">";
},

getIndex: function(array, index) {
  return array[index];
},

isNull: function(o) {
  return o == null;
},

typeNameInChrome: function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
},

typeNameInSafari: function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
},

typeNameInWebKitCommon: function(tag) {
  return tag;
},

typeNameInOpera: function(obj) {
  return $.constructorNameFallback(obj);
},

typeNameInFirefox: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
},

typeNameInIE: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
},

constructorNameFallback: function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.builtin$cls;
    if ($name != null)
      return $name;
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
},

alternateTag: function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
},

contains: function(userAgent, $name) {
  return userAgent.indexOf($name) !== -1;
},

propertyGet: function(object, property) {
  return object[property];
},

callHasOwnProperty: function($function, object, property) {
  return $function.call(object, property);
},

getFunctionForTypeNameOf: function() {
  if (typeof navigator !== "object")
    return $.typeNameInChrome$closure;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, "Chrome") || $.contains(userAgent, "DumpRenderTree"))
    return $.typeNameInChrome$closure;
  else if ($.contains(userAgent, "Firefox"))
    return $.typeNameInFirefox$closure;
  else if ($.contains(userAgent, "MSIE"))
    return $.typeNameInIE$closure;
  else if ($.contains(userAgent, "Opera"))
    return $.typeNameInOpera$closure;
  else if ($.contains(userAgent, "AppleWebKit"))
    return $.typeNameInSafari$closure;
  else
    return $.constructorNameFallback$closure;
},

getTypeNameOf: function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
},

toStringForNativeObject: function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
},

hashCodeForNativeObject: function(object) {
  return $.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

defineNativeMethods: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, true);
},

defineNativeMethodsNonleaf: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, false);
},

defineNativeMethodsCommon: function(tags, interceptorClass, isLeaf) {
  var methods, tagsList, i, tag;
  methods = interceptorClass.prototype;
  if ($.interceptorsByTag == null)
    $.interceptorsByTag = {};
  if ($.leafTags == null)
    $.leafTags = {};
  tagsList = tags.split("|");
  for (i = 0; i < tagsList.length; ++i) {
    tag = tagsList[i];
    $.interceptorsByTag[tag] = methods;
    $.leafTags[tag] = isLeaf;
  }
},

defineNativeMethodsFinish: function() {
},

lookupInterceptor: function(hasOwnPropertyFunction, tag) {
  var map = $.interceptorsByTag;
  if (map == null)
    return;
  return $.callHasOwnProperty(hasOwnPropertyFunction, map, tag) ? $.propertyGet(map, tag) : null;
},

lookupDispatchRecord: function(obj) {
  var hasOwnPropertyFunction, tag, interceptor, secondTag, t1;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  tag = $.getTypeNameOf(obj);
  interceptor = $.lookupInterceptor(hasOwnPropertyFunction, tag);
  if (interceptor == null) {
    secondTag = $.alternateTag(obj, tag);
    if (secondTag != null)
      interceptor = $.lookupInterceptor(hasOwnPropertyFunction, secondTag);
  }
  if (interceptor == null)
    return;
  t1 = $.leafTags;
  if (t1 != null && t1[tag] === true)
    return $.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  else
    return $.makeDispatchRecord(interceptor, Object.getPrototypeOf(obj), null, null);
},

stringReplaceJS: function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace("$", "$$$$"));
},

stringReplaceAllUnchecked: function(receiver, from, to) {
  var result, $length, i, t1;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.write$1(to);
      for (i = 0; i < $length; ++i) {
        t1 = receiver[i];
        result._contents = result._contents + t1;
        result._contents = result._contents + to;
      }
      return result.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, new RegExp(from.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), to);
},

stringReplaceFirstUnchecked: function(receiver, from, to) {
  return $.stringReplaceJS(receiver, from, to);
}}],
["dart._collection.dev", "dart:_collection-dev", , {
ListIterator: {"": "Object;_iterable,_liblib$_length,_index,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = $.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    if (!$.$eq(this._liblib$_length, $length))
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    t3 = this._index;
    if (typeof $length !== "number")
      throw $.iae($length);
    if (t3 >= $length) {
      this._liblib$_current = null;
      return false;
    }
    this._liblib$_current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    return $.MappedIterator$(t1.get$iterator(t1), this._f);
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  }
},

MappedIterator: {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib$_current;
  }
},

FixedLengthListMixin: {"": "Object;"},

Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3, t4;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !$.isJsIndexable(src, src[$.dispatchPropertyName])))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof srcStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !$.isJsIndexable(dst, dst[$.dispatchPropertyName]))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dstStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof count !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i >>> 0 !== i || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j >>> 0 !== j || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i >>> 0 !== i || i >= t2)
        throw $.ioore(i);
      t4 = src[i];
      if (j >>> 0 !== j || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
},

Arrays_copy$bailout: function(state0, src, srcStart, dst, dstStart, count) {
  var t1, i, j, t2, t3;
  t1 = $.getInterceptor$n(srcStart);
  if (t1.$lt(srcStart, dstStart))
    for (i = $.$sub$n(t1.$add(srcStart, count), 1), j = $.$sub$n($.$add$ns(dstStart, count), 1), t1 = $.getInterceptor$asx(src); t2 = $.getInterceptor$n(i), t2.$ge(i, srcStart); i = t2.$sub(i, 1), j = $.$sub$n(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t2 = $.getInterceptor$asx(src), j = dstStart, i = srcStart; t3 = $.getInterceptor$n(i), t3.$lt(i, t1.$add(srcStart, count)); i = t3.$add(i, 1), j = $.$add$ns(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t2.$index(src, i));
},

ListIterator$: function(iterable) {
  return new $.ListIterator(iterable, $.get$length$asx(iterable), 0, null);
},

MappedIterable$: function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
},

MappedIterator$: function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = $.JSArray_methods.get$iterator(iterable); t1.moveNext$0();)
    f.call$1(t1._liblib$_current);
},

IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
  var result, i, t1;
  for (i = 0; i < $.get$IterableMixinWorkaround__toStringList().length; ++i) {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (i >= t1.length)
      throw $.ioore(i);
    if (t1[i] === iterable)
      return $.S(leftDelimiter) + "..." + $.S(rightDelimiter);
  }
  result = $.StringBuffer$("");
  try {
    $.get$IterableMixinWorkaround__toStringList().push(iterable);
    result.write$1(leftDelimiter);
    result.writeAll$2(iterable, ", ");
    result.write$1(rightDelimiter);
  } finally {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
  }
  return $.toString$0(result);
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  var t1 = $.getInterceptor$n(start);
  if (t1.$lt(start, 0) || t1.$gt(start, list.length))
    throw $.wrapException($.RangeError$range(start, 0, list.length));
  t1 = $.getInterceptor$n(end);
  if (t1.$lt(end, start) || t1.$gt(end, list.length))
    throw $.wrapException($.RangeError$range(end, start, list.length));
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length, otherStart, otherList, t1;
  $.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = $.$sub$n(end, start);
  if ($.$eq($length, 0))
    return;
  if (skipCount < 0)
    throw $.wrapException($.ArgumentError$(skipCount));
  otherStart = skipCount;
  otherList = from;
  if (typeof $length !== "number")
    throw $.iae($length);
  t1 = $.get$length$asx(otherList);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  if (otherStart + $length > t1)
    throw $.wrapException($.StateError$("Not enough elements"));
  $.Arrays_copy(otherList, otherStart, list, start, $length);
}}],
["dart.async", "dart:async", , {
_Completer: {"": "Object;",
  complete$1: function(_, value) {
    if (this._isComplete)
      throw $.wrapException($.StateError$("Future already completed"));
    this._isComplete = true;
    this._setFutureValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    if (this._isComplete)
      throw $.wrapException($.StateError$("Future already completed"));
    this._isComplete = true;
    this._setFutureError$1(error);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  },
  _Completer$0: function() {
    this.future._zone.expectCallback$0();
  }
},

_AsyncCompleter: {"": "_Completer;future,_isComplete",
  _setFutureValue$1: function(value) {
    var future = this.future;
    future._asyncSetValue$1(value);
    future._zone.cancelCallbackExpectation$0();
  },
  _setFutureError$1: function(error) {
    var future = this.future;
    future._asyncSetError$1(error);
    future._zone.cancelCallbackExpectation$0();
  }
},

_FutureListenerWrapper: {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._setValueUnchecked$1(value);
  },
  _sendError$1: function(error) {
    this.future._setErrorUnchecked$1(error);
  },
  _inSameErrorZone$1: function(otherZone) {
    return this.future._inSameErrorZone$1(otherZone);
  }
},

_ErrorZoneBoundaryListener: {"": "Object;_nextListener@,_listener",
  _inSameErrorZone$1: function(otherZone) {
    throw $.wrapException($.UnsupportedError$("A Zone boundary doesn't support the inSameErrorZone test."));
  },
  _sendValue$1: function(value) {
    this._listener._sendValue$1(value);
  },
  _sendError$1: function(error) {
    $._Zone_current().handleUncaughtError$1(error);
  }
},

_FutureImpl: {"": "Object;_state,_zone<,_resultOrListeners<",
  get$_isChained: function() {
    return (this._state & 2) !== 0;
  },
  get$_isComplete: function() {
    return this._state >= 8;
  },
  get$_mayComplete: function() {
    return this._state === 0;
  },
  get$_hasValue: function() {
    return this._state === 8;
  },
  get$_hasUnhandledError: function() {
    return this._state >= 16;
  },
  _clearUnhandledError$0: function() {
    this._state = (this._state & 4294967279) >>> 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (onError == null) {
      t1 = $._ThenFuture$(f);
      t1._subscribeTo$1(this);
      return t1;
    }
    t1 = $._SubscribeFuture$(f, onError);
    t1._subscribeTo$1(this);
    return t1;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1 = new $._CatchErrorFuture(test, f, null, 0, $._Zone_current().fork$0(), null);
    t1._TransformFuture$0();
    t1._subscribeTo$1(this);
    return t1;
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _inSameErrorZone$1: function(otherZone) {
    return this._zone.inSameErrorZone$1(otherZone);
  },
  _setValue$1: function(value) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._setValueUnchecked$1(value);
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1", null);
  },
  _setValueUnchecked$1: function(value) {
    var listeners, listeners0;
    listeners = this.get$_isChained() ? null : this._removeListeners$0();
    this._state = 8;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  _setError$1: function(error) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._setErrorUnchecked$1(error);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1", null);
  },
  _setErrorUnchecked$1: function(error) {
    var hasListeners, listeners, listeners0;
    if (this.get$_isChained()) {
      hasListeners = this._state === 2;
      listeners = null;
    } else {
      listeners = this._removeListeners$0();
      hasListeners = listeners != null;
    }
    this._state = 12;
    this._resultOrListeners = error;
    if (!hasListeners) {
      this._scheduleUnhandledError$0();
      return;
    }
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
    }
  },
  _asyncSetValue$1: function(value) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._state = 1;
    $.runAsync(new $._FutureImpl__asyncSetValue_closure(this, value));
  },
  _asyncSetError$1: function(error) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._state = 1;
    $.runAsync(new $._FutureImpl__asyncSetError_closure(this, error));
  },
  _scheduleUnhandledError$0: function() {
    this._state = 28;
    $.runAsync(new $._FutureImpl__scheduleUnhandledError_closure(this));
  },
  _addListener$1: function(listener) {
    var t1 = {};
    t1.listener_0 = listener;
    if (!t1.listener_0._inSameErrorZone$1(this._zone))
      t1.listener_0 = $._ErrorZoneBoundaryListener$(t1.listener_0);
    if (this.get$_isChained()) {
      this._state = 2;
      this.get$_chainSource()._addListener$1(t1.listener_0);
      return;
    }
    if (this.get$_isComplete()) {
      this._clearUnhandledError$0();
      $.runAsync(new $._FutureImpl__addListener_closure(t1, this));
    } else {
      t1.listener_0.set$_nextListener(this._resultOrListeners);
      this._resultOrListeners = t1.listener_0;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (!this.get$_isComplete())
      future._chainFromFuture$1(this);
    else if (this.get$_hasValue())
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  get$_chainSource: function() {
    var future = this._resultOrListeners;
    if (future.get$_isChained()) {
      future = future.get$_chainSource();
      this._resultOrListeners = future;
    }
    return future;
  },
  _chainFromFuture$1: function(resultSource) {
    var cursor, cursor0, cursor1;
    if (resultSource.get$_isChained())
      resultSource = resultSource.get$_chainSource();
    if (this === resultSource) {
      this._setError$1($.StateError$("Cyclic future dependency."));
      return;
    }
    cursor = this._removeListeners$0();
    for (cursor0 = cursor; cursor0 != null; cursor0 = cursor1) {
      cursor1 = cursor0.get$_nextListener();
      cursor0.set$_nextListener(null);
      resultSource._addListener$1(cursor0);
    }
    resultSource._addListener$1(this._asListener$0());
    this._resultOrListeners = resultSource;
    this._state = cursor != null ? 2 : 6;
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!$.getInterceptor(result).$isFuture)
      if (!!$.getInterceptor(result).$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 8;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
},

_FutureImpl__FutureImpl$wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
  }
},

_FutureImpl__FutureImpl$wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = value;
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0)) {
      t2 = t1.completer_0;
      t2.complete$1(t2, t1.values_1);
    }
  }
},

_FutureImpl__asyncSetValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    this.this_0._setValueUnchecked$1(this.value_1);
  }
},

_FutureImpl__asyncSetError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    this.this_0._setErrorUnchecked$1(this.error_1);
  }
},

_FutureImpl__scheduleUnhandledError_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError()) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      t1.get$_zone().handleUncaughtError$1(error);
    }
  }
},

_FutureImpl__addListener_closure: {"": "Closure;box_0,this_1",
  call$0: function() {
    var t1, t2, value;
    t1 = this.this_1;
    t2 = t1.get$_hasValue();
    value = t1.get$_resultOrListeners();
    t1 = this.box_0;
    if (t2)
      t1.listener_0._sendValue$1(value);
    else
      t1.listener_0._sendError$1(value);
  }
},

_TransformFuture: {"": "_FutureImpl;_nextListener@",
  _sendValue$1: function(value) {
    this._zone.executeCallback$1(new $._TransformFuture__sendValue_closure(this, value));
  },
  _sendError$1: function(error) {
    this._zone.executeCallback$1(new $._TransformFuture__sendError_closure(this, error));
  },
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _TransformFuture$0: function() {
    this._zone.expectCallback$0();
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

_TransformFuture__sendValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    return this.this_0._zonedSendValue$1(this.value_1);
  }
},

_TransformFuture__sendError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    return this.this_0._zonedSendError$1(this.error_1);
  }
},

_ThenFuture: {"": "_TransformFuture;_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  _zonedSendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

_CatchErrorFuture: {"": "_TransformFuture;_test,_onError,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    this._setValue$1(value);
  },
  _zonedSendError$1: function(error) {
    var matchesTest, e, s, result, e0, s0, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e0 = t1;
      s0 = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e0, s0));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
},

_SubscribeFuture: {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendError$1: function(error) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

Stream: {"": "Object;",
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_forEach_closure(t1, this, action, future), true, new $.Stream_forEach_closure0(future), future.get$_setError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $._Zone_current().fork$0(), null);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new $.Stream_length_closure(t1), true, new $.Stream_length_closure0(t1, future), future.get$_setError());
    return future;
  }
},

Stream_forEach_closure: {"": "Closure;box_0,this_1,action_2,future_3",
  call$1: function(element) {
    $._runUserCode(new $.Stream_forEach__closure(this.action_2, element), new $.Stream_forEach__closure0(), $._cancelAndError(this.box_0.subscription_0, this.future_3));
  }
},

Stream_forEach__closure: {"": "Closure;action_4,element_5",
  call$0: function() {
    return this.action_4.call$1(this.element_5);
  }
},

Stream_forEach__closure0: {"": "Closure;",
  call$1: function(_) {
  }
},

Stream_forEach_closure0: {"": "Closure;future_6",
  call$0: function() {
    this.future_6._setValue$1(null);
  }
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
},

StreamSubscription: {"": "Object;"},

EventSink: {"": "Object;"},

_cancelAndError_closure: {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
},

_ZoneBase: {"": "Object;",
  get$_errorZone: function() {
    return this._parentZone.get$_errorZone();
  },
  handleUncaughtError$1: function(error) {
    this._parentZone.handleUncaughtError$1(error);
  },
  inSameErrorZone$1: function(otherZone) {
    return $.$eq(this.get$_errorZone(), otherZone.get$_errorZone());
  },
  fork$0: function() {
    return this;
  },
  expectCallback$0: function() {
    var t1 = this._openCallbacks;
    this._openCallbacks = t1 + 1;
    return t1;
  },
  cancelCallbackExpectation$0: function() {
    this._openCallbacks = this._openCallbacks - 1;
    this._checkIfDone$0();
  },
  _dispose$0: function() {
  },
  _checkIfDone$0: function() {
    if (!this._isExecutingCallback && this._openCallbacks === 0 && $.JSArray_methods.get$isEmpty(this._children))
      this._dispose$0();
  },
  executeCallback$1: function(f) {
    this._openCallbacks = this._openCallbacks - 1;
    this._runUnguarded$1(f);
  },
  executeCallbackGuarded$1: function(f) {
    this._openCallbacks = this._openCallbacks - 1;
    this._runGuarded$1(f);
  },
  _runInZone$2: function(f, handleUncaught) {
    var oldZone, oldIsExecuting, e, s, t1, exception;
    if ($.get$_Zone__current() === this && handleUncaught !== true && this._isExecutingCallback)
      return f.call$0();
    oldZone = $.get$_Zone__current();
    $._Zone__current = this;
    oldIsExecuting = this._isExecutingCallback;
    this._isExecutingCallback = true;
    try {
      try {
        t1 = f.call$0();
        return t1;
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        if (handleUncaught === true)
          this.handleUncaughtError$1($._asyncError(e, s));
        else
          throw exception;
      }

    } finally {
      this._isExecutingCallback = oldIsExecuting;
      $._Zone__current = oldZone;
      this._checkIfDone$0();
    }
  },
  _runGuarded$1: function(f) {
    return this._runInZone$2(f, true);
  },
  _runUnguarded$1: function(f) {
    return this._runInZone$2(f, false);
  },
  runAsync$2: function(f, zone) {
    return this._parentZone.runAsync$2(f, zone);
  },
  createTimer$2: function(duration, callback) {
    return $._ZoneTimer$(this, duration, callback);
  },
  _ZoneBase$_defaultZone$0: function() {
  }
},

_DefaultZone: {"": "_ZoneBase;_parentZone,_children,_openCallbacks,_isExecutingCallback",
  get$_errorZone: function() {
    return this;
  },
  handleUncaughtError$1: function(error) {
    $._scheduleAsyncCallback(new $._DefaultZone_handleUncaughtError_closure(error));
  },
  runAsync$2: function(f, zone) {
    if (this === zone) {
      $._scheduleAsyncCallback(f);
      return;
    }
    zone.expectCallback$0();
    $._scheduleAsyncCallback(new $._DefaultZone_runAsync_closure(f, zone));
  }
},

_DefaultZone_handleUncaughtError_closure: {"": "Closure;error_0",
  call$0: function() {
    var t1, trace;
    t1 = this.error_0;
    $.print("Uncaught Error: " + $.S(t1));
    trace = $.getAttachedStackTrace(t1);
    $._attachStackTrace(t1, null);
    if (trace != null)
      $.print("Stack Trace:\n" + $.S(trace) + "\n");
    throw $.wrapException(t1);
  }
},

_DefaultZone_runAsync_closure: {"": "Closure;f_0,zone_1",
  call$0: function() {
    this.zone_1.executeCallbackGuarded$1(this.f_0);
  }
},

_ZoneTimer: {"": "Object;_zone<,_liblib3$_callback,_timer",
  _run$0: function() {
    this._zone.executeCallbackGuarded$1(this._liblib3$_callback);
  },
  get$_run: function() {
    return new $.BoundClosure$0(this, "_run$0", null);
  },
  _ZoneTimer$3: function(_zone, duration, _callback) {
    this._zone.expectCallback$0();
    this._timer = $._createTimer(duration, this.get$_run());
  }
},

_attachStackTrace: function(o, st) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  t1.$indexSet(t1, o, st);
},

getAttachedStackTrace: function(o) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  return t1.$index(t1, o);
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      $.unwrapException(exception);
      milliseconds = $.JSNumber_methods.$tdiv($.Duration_0._duration, 1000);
      $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, $._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_scheduleAsyncCallback: function(callback) {
  var t1 = $.get$_asyncCallbacks();
  t1.add$1(t1, callback);
  if (!$._callbacksAreEnqueued) {
    $._AsyncRun__enqueueImmediate($._asyncRunCallback$closure);
    $._callbacksAreEnqueued = true;
  }
},

runAsync: function(callback) {
  var currentZone = $.get$_Zone__current();
  currentZone.runAsync$2(callback, currentZone);
},

_AsyncRun__enqueueImmediate: function(callback) {
  var milliseconds = $.Duration_0.get$inMilliseconds();
  $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

Future_Future$value: function(value) {
  return $._FutureImpl$immediate(value);
},

Future_wait: function(futures) {
  return $._FutureImpl__FutureImpl$wait(futures);
},

Completer_Completer: function() {
  return $._AsyncCompleter$();
},

_AsyncCompleter$: function() {
  var t1 = new $._AsyncCompleter($._FutureImpl$(), false);
  t1._Completer$0();
  return t1;
},

_FutureListener__FutureListener$wrap: function(future) {
  return $._FutureListenerWrapper$(future);
},

_FutureListenerWrapper$: function(future) {
  return new $._FutureListenerWrapper(future, null);
},

_ErrorZoneBoundaryListener$: function(_listener) {
  return new $._ErrorZoneBoundaryListener(null, _listener);
},

_FutureImpl$: function() {
  return new $._FutureImpl(0, $._Zone_current().fork$0(), null);
},

_FutureImpl$immediate: function(value) {
  var t1 = new $._FutureImpl(0, $._Zone_current().fork$0(), null);
  t1._FutureImpl$immediate$1(value);
  return t1;
},

_FutureImpl__FutureImpl$wait: function(futures) {
  var t1, t2, t3, future, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.JSArray_methods.get$iterator(futures); t3.moveNext$0();) {
    future = t3._liblib$_current;
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    future.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_closure(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0))
    return $.Future_Future$value($.List_empty);
  t1.values_1 = $.List_List(t1.remaining_2);
  t1.completer_0 = $.Completer_Completer();
  return t1.completer_0.future;
},

_ThenFuture$: function(_onValue) {
  var t1 = new $._ThenFuture(_onValue, null, 0, $._Zone_current().fork$0(), null);
  t1._TransformFuture$0();
  return t1;
},

_SubscribeFuture$: function(onValue, _onError) {
  var t1 = new $._SubscribeFuture(_onError, onValue, null, 0, $._Zone_current().fork$0(), null);
  t1._TransformFuture$0();
  return t1;
},

_asyncError: function(error, stackTrace) {
  if (stackTrace == null)
    return error;
  if ($.getAttachedStackTrace(error) != null)
    return error;
  $._attachStackTrace(error, stackTrace);
  return error;
},

_runUserCode: function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    s = $.getTraceFromException(exception);
    onError.call$1($._asyncError(e, s));
  }

},

_cancelAndError: function(subscription, future) {
  return new $._cancelAndError_closure(subscription, future);
},

Timer_Timer: function(duration, callback) {
  return $._Zone_current().createTimer$2(duration, callback);
},

Timer_run: function(callback) {
  $.Timer_Timer($.Duration_0, callback);
},

_createTimer: function(duration, callback) {
  var milliseconds = duration.get$inMilliseconds();
  return $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

_Zone_current: function() {
  return $.get$_Zone__current();
},

_DefaultZone$: function() {
  var t1 = new $._DefaultZone(null, [], 0, false);
  t1._ZoneBase$_defaultZone$0();
  return t1;
},

_ZoneTimer$: function(_zone, duration, _callback) {
  var t1 = new $._ZoneTimer(_zone, _callback, null);
  t1._ZoneTimer$3(_zone, duration, _callback);
  return t1;
}}],
["dart.collection", "dart:collection", , {
HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._liblib1$_length;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return $.HashMapKeyIterator$(t1, t1._computeKeys$0());
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw $.wrapException(new $.ConcurrentModificationError(t1));
    }
  }
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else if (offset >= keys.length) {
      this._liblib1$_current = null;
      return false;
    } else {
      this._liblib1$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

LinkedHashMapCell: {"": "Object;_key<,_value@,_next?,_previous"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._liblib1$_length;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return $.LinkedHashMapKeyIterator$(t1, t1._modifications);
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell._key);
      if (modifications !== t1._modifications)
        throw $.wrapException(new $.ConcurrentModificationError(t1));
      cell = cell._next;
    }
  }
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._liblib1$_current = null;
        return false;
      } else {
        this._liblib1$_current = t1._key;
        this._cell = this._cell._next;
        return true;
      }
    }
  },
  LinkedHashMapKeyIterator$2: function(_map, _modifications) {
    this._cell = this._map._first;
  }
},

HashMap: {"": "Object;_liblib1$_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._liblib1$_length;
  },
  get$isEmpty: function(_) {
    return this._liblib1$_length === 0;
  },
  get$keys: function() {
    return $.HashMapKeyIterable$(this);
  },
  get$values: function(_) {
    var t1 = this.get$keys();
    return t1.map$1(t1, new $.HashMap_values_closure(this));
  },
  containsKey$1: function(key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      return nums == null ? false : nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashMap__findBucketIndex(rest[$.HashMap__computeHashCode(key)], key) >= 0;
    }
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.HashMap__computeHashCode(key)];
      index = $.HashMap__findBucketIndex(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, t1, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        $.HashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.HashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._strings = table;
        strings = table;
      }
      if (!$.HashMap__hasTableEntry(strings, key)) {
        this._liblib1$_length = this._liblib1$_length + 1;
        this._keys = null;
      }
      $.HashMap__setTableEntry(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        $.HashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.HashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._nums = table;
        nums = table;
      }
      if (!$.HashMap__hasTableEntry(nums, key)) {
        this._liblib1$_length = this._liblib1$_length + 1;
        this._keys = null;
      }
      $.HashMap__setTableEntry(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        $.HashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.HashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null) {
        t1 = [key, value];
        if (t1 == null)
          rest[hash] = rest;
        else
          rest[hash] = t1;
        this._liblib1$_length = this._liblib1$_length + 1;
        this._keys = null;
      } else {
        index = $.HashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._liblib1$_length = this._liblib1$_length + 1;
          this._keys = null;
        }
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index;
    if ($.HashMap__isStringKey(key))
      return this._removeHashTableEntry$2(this._strings, key);
    else if ($.HashMap__isNumericKey(key))
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = $.HashMap__getBucket(rest, key);
      index = $.HashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      this._liblib1$_length = this._liblib1$_length - 1;
      this._keys = null;
      return bucket.splice(index, 2)[1];
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw $.wrapException(new $.ConcurrentModificationError(this));
    }
  },
  toString$0: function(_) {
    return $.Maps_mapToString(this);
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = $.List_List(this._liblib1$_length);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _removeHashTableEntry$2: function(table, key) {
    var value;
    if (table != null && $.HashMap__hasTableEntry(table, key)) {
      value = $.HashMap__getTableEntry(table, key);
      $.HashMap__deleteTableEntry(table, key);
      this._liblib1$_length = this._liblib1$_length - 1;
      this._keys = null;
      return value;
    } else
      return;
  },
  $isMap: true
},

IterableBase: {"": "Object;",
  map$1: function(_, f) {
    return $.MappedIterable$(this, f);
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, element, t2;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      t2 = $.getInterceptor(remaining);
      if (t2.$eq(remaining, 0))
        return element;
      remaining = t2.$sub(remaining, 1);
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  }
},

LinkedHashMap: {"": "Object;_liblib1$_length,_strings,_nums,_rest,_first,_last,_modifications",
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.LinkedHashMap__computeHashCode(key)];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        $.LinkedHashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.LinkedHashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        $.LinkedHashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.LinkedHashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        $.LinkedHashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.LinkedHashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = $.LinkedHashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell._key, cell._value);
      if (modifications !== this._modifications)
        throw $.wrapException(new $.ConcurrentModificationError(this));
      cell = cell._next;
    }
  },
  get$keys: function() {
    return $.LinkedHashMapKeyIterable$(this);
  },
  get$values: function(_) {
    var t1 = this.get$keys();
    return t1.map$1(t1, new $.LinkedHashMap_values_closure(this));
  },
  get$length: function(_) {
    return this._liblib1$_length;
  },
  toString$0: function(_) {
    return $.Maps_mapToString(this);
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = $.LinkedHashMap__getTableEntry(table, key);
    if (cell == null)
      $.LinkedHashMap__setTableEntry(table, key, this._newLinkedCell$2(key, value));
    else
      cell.set$_value(value);
  },
  _modified$0: function() {
    this._modifications = this._modifications + 1 & 67108863;
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = $.LinkedHashMapCell$(key, value);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._liblib1$_length = this._liblib1$_length + 1;
    this._modified$0();
    return cell;
  },
  $isMap: true
},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.forEach$1$bailout(1, action, receiver);
    $length = receiver.length;
    for (i = 0; i < $length; ++i) {
      if (i >= receiver.length)
        throw $.ioore(i);
      action.call$1(receiver[i]);
      if ($length !== receiver.length)
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  forEach$1$bailout: function(state0, action, receiver) {
    var $length, i;
    $length = this.get$length(receiver);
    if (typeof $length !== "number")
      throw $.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  toString$0: function(receiver) {
    var result, i, t1;
    for (i = 0; i < $.get$ListMixin__toStringList().length; ++i) {
      t1 = $.get$ListMixin__toStringList();
      if (i >= t1.length)
        throw $.ioore(i);
      if (t1[i] === receiver)
        return "[...]";
    }
    result = $.StringBuffer$("");
    try {
      $.get$ListMixin__toStringList().push(receiver);
      result.write$1("[");
      result.writeAll$2(receiver, ", ");
      result.write$1("]");
    } finally {
      t1 = $.get$ListMixin__toStringList();
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
    }
    return $.toString$0(result);
  },
  $isList: true,
  $asList: null
},

Maps_mapToString_closure: {"": "Closure;box_0,result_1",
  call$2: function(k, v) {
    var t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t1.write$1(k);
    t1.write$1(": ");
    t1.write$1(v);
  }
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        $.throwExpression(new $.ConcurrentModificationError(this));
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    var t1 = this._tail;
    if (typeof t1 !== "number")
      return this.get$length$bailout1(1, t1);
    return (t1 - this._head & this._table.length - 1) >>> 0;
  },
  get$length$bailout1: function(state0, t1) {
    var t2;
    t1 = $.$sub$n(t1, this._head);
    t2 = this._table;
    if (typeof t1 !== "number")
      throw t1.$and();
    return (t1 & t2.length - 1) >>> 0;
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  toString$0: function(_) {
    return $.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  addLast$1: function(element) {
    this._add$1(element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.wrapException(new $.StateError("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  _add$1: function(element) {
    var t1, t2;
    t1 = this._table;
    t2 = this._tail;
    if (t2 >>> 0 !== t2 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = element;
    ++t2;
    t1 = this._table;
    if (t2 !== (t2 | 0))
      throw t2.$and();
    this._tail = (t2 & t1.length - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
    $.JSArray_methods.setRange$4(newTable, split, split + this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  ListQueue$1: function(initialCapacity) {
    if (true)
      initialCapacity = 8;
    else if (!$.ListQueue__isPowerOf2(initialCapacity))
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    this._table = $.List_List(initialCapacity);
  }
},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_liblib1$_position,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      $.throwExpression($.ConcurrentModificationError$(t1));
    t2 = this._liblib1$_position;
    if (t2 === this._end) {
      this._liblib1$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._liblib1$_current = t3[t2];
    this._liblib1$_position = (this._liblib1$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  }
},

HashMap__isStringKey: function(key) {
  return typeof key === "string" && key !== "__proto__";
},

HashMap__isNumericKey: function(key) {
  return typeof key === "number" && (key & 0x3ffffff) === key;
},

HashMap__computeHashCode: function(key) {
  return $.get$hashCode$(key) & 0x3ffffff;
},

HashMap__hasTableEntry: function(table, key) {
  return table[key] != null;
},

HashMap__getTableEntry: function(table, key) {
  var entry = table[key];
  return entry === table ? null : entry;
},

HashMap__setTableEntry: function(table, key, value) {
  if (value == null)
    table[key] = table;
  else
    table[key] = value;
},

HashMap__deleteTableEntry: function(table, key) {
  delete table[key];
},

HashMap__getBucket: function(table, key) {
  return table[$.HashMap__computeHashCode(key)];
},

HashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; i += 2)
    if ($.$eq(bucket[i], key))
      return i;
  return -1;
},

HashMapKeyIterable$: function(_map) {
  return new $.HashMapKeyIterable(_map);
},

HashMapKeyIterator$: function(_map, _keys) {
  return new $.HashMapKeyIterator(_map, _keys, 0, null);
},

LinkedHashMap__computeHashCode: function(key) {
  return $.get$hashCode$(key) & 0x3ffffff;
},

LinkedHashMap__getTableEntry: function(table, key) {
  return table[key];
},

LinkedHashMap__setTableEntry: function(table, key, value) {
  table[key] = value;
},

LinkedHashMap__deleteTableEntry: function(table, key) {
  delete table[key];
},

LinkedHashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i].get$_key(), key))
      return i;
  return -1;
},

LinkedHashMapCell$: function(_key, _value) {
  return new $.LinkedHashMapCell(_key, _value, null, null);
},

LinkedHashMapKeyIterable$: function(_map) {
  return new $.LinkedHashMapKeyIterable(_map);
},

LinkedHashMapKeyIterator$: function(_map, _modifications) {
  var t1 = new $.LinkedHashMapKeyIterator(_map, _modifications, null, null);
  t1.LinkedHashMapKeyIterator$2(_map, _modifications);
  return t1;
},

HashMap$: function() {
  return new $.HashMap(0, null, null, null, null);
},

LinkedHashMap$: function() {
  return new $.LinkedHashMap(0, null, null, null, null, null, 0);
},

Maps_mapToString: function(m) {
  var t1, result, i, t2;
  t1 = {};
  for (i = 0; i < $.get$Maps__toStringList().length; ++i) {
    t2 = $.get$Maps__toStringList();
    if (i >= t2.length)
      throw $.ioore(i);
    if (t2[i] === m)
      return "{...}";
  }
  result = $.StringBuffer$("");
  try {
    $.get$Maps__toStringList().push(m);
    result.write$1("{");
    t1.first_0 = true;
    $.forEach$1$ax(m, new $.Maps_mapToString_closure(t1, result));
    result.write$1("}");
  } finally {
    t1 = $.get$Maps__toStringList();
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
  }
  return $.toString$0(result);
},

Queue_Queue: function() {
  return $.ListQueue$(null);
},

ListQueue$: function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
},

ListQueue__isPowerOf2: function(number) {
  if (number == null)
    throw number.$sub();
  return (number & number - 1) >>> 0 === 0;
},

ListQueue__nextPowerOf2: function(number) {
  var nextNumber;
  if (number == null)
    throw number.$shl();
  number = (number << 2 >>> 0) - 1;
  for (; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
},

_ListQueueIterator$: function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
}}],
["dart.core", "dart:core", , {
NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0))
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(key);
    t1.sb_0.write$1(": ");
    t1.sb_0.write$1($.Error_safeToString(value));
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return $.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return $.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, $.JSNumber_methods.toInt$0($.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inHours: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 3600000000);
  },
  get$inMinutes: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 60000000);
  },
  get$inSeconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000000);
  },
  get$inMilliseconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  get$inMicroseconds: function() {
    return this._duration;
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return $.JSNumber_methods.get$hashCode(this._duration);
  },
  toString$0: function(_) {
    var t1, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_twoDigits();
    if (this.get$inMicroseconds() < 0)
      return "-" + $.S($.Duration$(0, 0, -this.get$inMicroseconds(), 0, 0, 0));
    twoDigitMinutes = t1.call$1($.JSNumber_methods.remainder$1(this.get$inMinutes(), 60));
    twoDigitSeconds = t1.call$1($.JSNumber_methods.remainder$1(this.get$inSeconds(), 60));
    sixDigitUs = new $.Duration_toString_sixDigits().call$1($.JSNumber_methods.remainder$1(this.get$inMicroseconds(), 1000000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true
},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return $.S(n);
    if (t1.$ge(n, 10000))
      return "0" + $.S(n);
    if (t1.$ge(n, 1000))
      return "00" + $.S(n);
    if (t1.$ge(n, 100))
      return "000" + $.S(n);
    if (t1.$gt(n, 10))
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

Error: {"": "Object;"},

StackTraceOnThrow: {"": "Object;"},

Error_StackTraceOnThrow: {"": "Error+StackTraceOnThrow;"},

NullThrownError: {"": "Error_StackTraceOnThrow;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Error_StackTraceOnThrow0;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
},

Error_StackTraceOnThrow0: {"": "Error+StackTraceOnThrow;"},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
},

Error_StackTraceOnThrow1: {"": "Error+StackTraceOnThrow;"},

NoSuchMethodError: {"": "Error_StackTraceOnThrow1;_liblib2$_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, t2, t3, t4;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    for (t2 = this._arguments; t3 = t1.i_1, t4 = $.getInterceptor$n(t3), t4.$lt(t3, t2.length); t1.i_1 = $.$add$ns(t1.i_1, 1)) {
      if (t4.$gt(t3, 0)) {
        t3 = t1.sb_0;
        t3._contents = t3._contents + ", ";
      }
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 >>> 0 !== t4 || t4 >= t2.length)
        throw $.ioore(t4);
      t4 = $.Error_safeToString(t2[t4]);
      t3._contents = t3._contents + t4;
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new $.NoSuchMethodError_toString_closure(t1));
    return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\nReceiver: " + $.Error_safeToString(this._liblib2$_receiver) + "\nArguments: [" + $.S(t1.sb_0) + "]";
  }
},

Error_StackTraceOnThrow2: {"": "Error+StackTraceOnThrow;"},

UnsupportedError: {"": "Error_StackTraceOnThrow2;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
},

Error_StackTraceOnThrow3: {"": "Error+StackTraceOnThrow;"},

StateError: {"": "Error_StackTraceOnThrow3;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
},

ConcurrentModificationError: {"": "Error_StackTraceOnThrow4;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.Error_safeToString(t1) + ".";
  }
},

Error_StackTraceOnThrow4: {"": "Error+StackTraceOnThrow;"},

StackOverflowError: {"": "Error;",
  toString$0: function(_) {
    return "Stack Overflow";
  }
},

CyclicInitializationError: {"": "Error_StackTraceOnThrow5;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  }
},

Error_StackTraceOnThrow5: {"": "Error+StackTraceOnThrow;"},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
},

FormatException: {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
},

Expando: {"": "Object;name",
  toString$0: function(_) {
    return "Expando:" + this.name;
  },
  $index: function(_, object) {
    var values = $.Primitives_getProperty(object, "expando$values");
    return values == null ? null : $.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = $.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new $.Object();
      $.Primitives_setProperty(object, "expando$values", values);
    }
    $.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = $.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = $.$add$ns(t1, 1);
      key = "expando$key$" + $.S(t1);
      $.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  }
},

Iterator: {"": "Object;"},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return $.Primitives_objectToString(this);
  }
},

StringBuffer: {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  write$1: function(obj) {
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    this._contents = this._contents + obj;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    iterator = $.get$iterator$ax(objects);
    if (iterator.moveNext$0() !== true)
      return;
    if ($.JSString_methods.get$isEmpty(separator))
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0() === true);
    else {
      this.write$1(iterator.get$current());
      for (; iterator.moveNext$0() === true;) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : $.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  }
},

Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
},

Error_safeToString: function(object) {
  var t1;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string") {
    t1 = $.JSString_methods.replaceAll$2(object, "\\", "\\\\");
    $.checkString("\\n");
    t1 = $.stringReplaceAllUnchecked(t1, "\n", "\\n");
    $.checkString("\\r");
    t1 = $.stringReplaceAllUnchecked(t1, "\r", "\\r");
    $.checkString("\\\"");
    return "\"" + $.stringReplaceAllUnchecked(t1, "\"", "\\\"") + "\"";
  }
  return $.Primitives_objectToString(object);
},

NullThrownError$: function() {
  return new $.NullThrownError();
},

ArgumentError$: function(message) {
  return new $.ArgumentError(message);
},

RangeError$value: function(value) {
  return new $.RangeError("value " + $.S(value));
},

RangeError$range: function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
},

NoSuchMethodError$: function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
},

UnsupportedError$: function(message) {
  return new $.UnsupportedError(message);
},

StateError$: function(message) {
  return new $.StateError(message);
},

ConcurrentModificationError$: function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
},

StackOverflowError$: function() {
  return new $.StackOverflowError();
},

CyclicInitializationError$: function(variableName) {
  return new $.CyclicInitializationError(variableName);
},

Exception_Exception: function(message) {
  return $._ExceptionImplementation$(message);
},

_ExceptionImplementation$: function(message) {
  return new $._ExceptionImplementation(message);
},

FormatException$: function(message) {
  return new $.FormatException(message);
},

Expando$: function($name) {
  return new $.Expando($name);
},

List_List: function($length) {
  var result;
  if ($length == null)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw $.wrapException(new $.ArgumentError("Length must be a positive integer: " + $.S($length) + "."));
  result = new Array($length);
  result.fixed$length = true;
  return result;
},

List_List$from: function(other, growable) {
  var list, t1, $length, fixedList, i;
  list = $.List_List(null);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  if (growable === true)
    return list;
  $length = list.length;
  fixedList = $.List_List($length);
  for (t1 = list.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    fixedList[i] = list[i];
  }
  return fixedList;
},

Map_Map: function() {
  return $.HashMap$();
},

print: function(object) {
  $.Primitives_printString($.toString$0(object));
},

StringBuffer$: function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
}}],
["dart.dom.html", "dart:html", , {
Interceptor_ListMixin: {"": "Interceptor+ListMixin;", $isList: true, $asList: function (E) { return [$.Node0]; }},

Interceptor_ListMixin_ImmutableListMixin: {"": "Interceptor_ListMixin+ImmutableListMixin;", $isList: true, $asList: function (E) { return [$.Node0]; }},

Interceptor_ListMixin0: {"": "Interceptor+ListMixin;", $isList: true, $asList: function (E) { return [$.Node0]; }},

Interceptor_ListMixin_ImmutableListMixin0: {"": "Interceptor_ListMixin0+ImmutableListMixin;", $isList: true, $asList: function (E) { return [$.Node0]; }},

_EventStream: {"": "Stream;_liblib0$_target,_eventType,_useCapture",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    return $._EventStreamSubscription$(this._liblib0$_target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  }
},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_liblib0$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled())
      return;
    this._unlisten$0();
    this._liblib0$_target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._liblib0$_target == null;
  },
  get$isPaused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (this._onData != null && !this.get$isPaused())
      $.$$dom_addEventListener$3$x(this._liblib0$_target, this._eventType, this._onData, this._useCapture);
  },
  _unlisten$0: function() {
    var t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._liblib0$_target, this._eventType, t1, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
},

EventStreamProvider: {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
},

ImmutableListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  $isList: true,
  $asList: null
},

Point: {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isPoint)
      return false;
    return $.$eq(this.x, other.x) && $.$eq(this.y, other.y);
  },
  get$hashCode: function(_) {
    return $.JenkinsSmiHash_hash2($.get$hashCode$(this.x), $.get$hashCode$(this.y));
  },
  $add: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$add$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$add$bailout(2, other, t1, t2, t3);
    t3 = t1 + t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$add$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$add$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 + t2);
  },
  $$add$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$add$ns(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$add$ns(t1, t2));
    }
  },
  $sub: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$sub$bailout(2, other, t1, t2, t3);
    t3 = t1 - t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$sub$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 - t2);
  },
  $$sub$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$sub$n(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$sub$n(t1, t2));
    }
  },
  $mul: function(_, factor) {
    var t1, t2;
    if (typeof factor !== "number")
      return this.$$mul$bailout(1, factor);
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$mul$bailout(2, factor, t1);
    t1 *= factor;
    t2 = this.y;
    if (typeof t2 !== "number")
      return this.$$mul$bailout(3, factor, t1, t2);
    return new $.Point(t1, t2 * factor);
  },
  $$mul$bailout: function(state0, factor, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.x;
      case 2:
        state0 = 0;
        t1 = $.$mul$n(t1, factor);
        t2 = this.y;
      case 3:
        state0 = 0;
        return new $.Point(t1, $.$mul$n(t2, factor));
    }
  },
  $isPoint: true
},

Rect: {"": "Object;left,top,width,height",
  toString$0: function(_) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    return $.$eq(this.left, other.left) && $.$eq(this.top, other.top) && $.$eq(this.width, other.width) && $.$eq(this.height, other.height);
  },
  get$hashCode: function(_) {
    return $.JenkinsSmiHash_hash4($.get$hashCode$(this.left), $.get$hashCode$(this.top), $.get$hashCode$(this.width), $.get$hashCode$(this.height));
  },
  $isRect: true
},

FixedSizeListIterator: {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !$.isJsIndexable(t1, t1[$.dispatchPropertyName])))
        return this.moveNext$0$bailout(2, t1, nextPosition);
      if (nextPosition >>> 0 !== nextPosition || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$add$ns(t1, 1);
        t1 = this._length;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$lt$n(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 2:
              state0 = 0;
              this._current = $.$index$asx(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
},

window: function() {
  return window;
},

document: function() {
  return document;
},

query: function(selector) {
  return $.document().querySelector(selector);
},

HttpRequest_HttpRequest: function() {
  return $.HttpRequest__create_1();
},

HttpRequest__create_1: function() {
  return new XMLHttpRequest();
},

_EventStream$: function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
},

_EventStreamSubscription$: function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
},

Point$: function(x, y) {
  return new $.Point(x, y);
},

Rect$: function(left, $top, width, height) {
  return new $.Rect(left, $top, width, height);
},

FixedSizeListIterator$: function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$asx(array), -1, null);
}}],
["dart.isolate", "dart:isolate", , {
ReceivePort: {"": "Object;"},

port: function() {
  return $._Isolate_port();
},

ReceivePort_ReceivePort: function() {
  return $.ReceivePortImpl$();
},

_Isolate_port: function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
}}],
["dart.math", "dart:math", , {
atan2: function(a, b) {
  return Math.atan2($.checkNum(a), $.checkNum(b));
},

sin: function(x) {
  return Math.sin(x);
},

cos: function(x) {
  return Math.cos(x);
},

tan: function(x) {
  return Math.tan($.checkNum(x));
},

acos: function(x) {
  return Math.acos($.checkNum(x));
},

sqrt: function(x) {
  return Math.sqrt($.checkNum(x));
}}],
["dart.typed_data", "dart:typed_data", , {
TypedData_ListMixin: {"": "TypedData+ListMixin;", $isList: true, $asList: function (E) { return [$.JSDouble]; }},

TypedData_ListMixin_FixedLengthListMixin: {"": "TypedData_ListMixin+FixedLengthListMixin;"},

TypedData_ListMixin0: {"": "TypedData+ListMixin;", $isList: true, $asList: function (E) { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin0: {"": "TypedData_ListMixin0+FixedLengthListMixin;"},

TypedData_ListMixin1: {"": "TypedData+ListMixin;", $isList: true, $asList: function (E) { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin1: {"": "TypedData_ListMixin1+FixedLengthListMixin;"},

_ensureNativeList: function(list) {
  return list;
},

Float32List_Float32List: function($length) {
  return $.Float32List__create1($length);
},

Float32List_Float32List$fromList: function(list) {
  return $.Float32List__create1($._ensureNativeList(list));
},

Float32List__create1: function(arg) {
  return new Float32Array(arg);
},

Uint16List_Uint16List$fromList: function(list) {
  return $.Uint16List__create1($._ensureNativeList(list));
},

Uint16List__create1: function(arg) {
  return new Uint16Array(arg);
}}],
["html_common", "dart:html_common", , {
JenkinsSmiHash_combine: function(hash, value) {
  if (typeof value !== "number")
    throw $.iae(value);
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ $.JSInt_methods.$shr(hash, 6)) >>> 0;
},

JenkinsSmiHash_finish: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ $.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

JenkinsSmiHash_hash2: function(a, b) {
  return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, a), b));
},

JenkinsSmiHash_hash4: function(a, b, c, d) {
  return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, a), b), c), d));
}}],
["rays_webgl", "package:RaysWebGL/rays_webgl.dart", , {
Camera: {"": "Spatial;tempMatrix,matrix,pos,back,up,right",
  getMVMatrix$2: function(mvMatrix, translate) {
    var t1, t2, t3, t4, i, t5, t6, t7;
    for (t1 = this.tempMatrix, t2 = this.matrix, t3 = t2.array, t4 = t3.length, i = 0; i < 16; ++i) {
      if (i >= t4)
        throw $.ioore(i);
      t5 = t3[i];
      t6 = i < 12 ? 1 : -1;
      t7 = t1.array;
      if (i >= t7.length)
        throw $.ioore(i);
      t7[i] = t5 * t6;
    }
    t1.toRotationMat$1(mvMatrix);
    if (translate)
      mvMatrix.translateLocal$3(t1.$index(t1, 12), t1.$index(t1, 13), t1.$index(t1, 14));
  }
},

setUpCapture_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.get$currentlyPressedKeys();
    t1.$indexSet(t1, $.get$keyCode$x(e), true);
  }
},

setUpCapture_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.get$currentlyPressedKeys();
    t1.$indexSet(t1, $.get$keyCode$x(e), null);
  }
},

setUpCapture_closure1: {"": "Closure;",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = $.getInterceptor$x(e);
    t1.preventDefault$0(e);
    t2 = t1.get$client(e);
    $.clientX = t2.get$x(t2);
    t2 = $.window().innerHeight;
    t3 = t1.get$client(e);
    t3 = t3.get$y(t3);
    if (t2 == null)
      throw t2.$sub();
    if (typeof t3 !== "number")
      throw $.iae(t3);
    $.clientY = t2 - t3;
    t3 = t1.get$client(e);
    t3 = t3.get$x(t3);
    t2 = $.window().innerWidth;
    if (t2 == null)
      throw t2.$div();
    $.mouseX = $.$sub$n(t3, $.JSInt_methods.toInt$0(t2 / 2));
    t1 = t1.get$client(e);
    t1 = t1.get$y(t1);
    t2 = $.window().innerHeight;
    if (t2 == null)
      throw t2.$div();
    t2 = $.$sub$n(t1, $.JSInt_methods.toInt$0(t2 / 2));
    if (typeof t2 !== "number")
      throw t2.$negate();
    $.mouseY = -t2;
  }
},

setUpCapture_closure2: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    t1.preventDefault$0(e);
    if (t1.get$which(e) === 3 || t1.get$button(e) === 2) {
      t1 = $.get$currentlyPressedMouseButtons();
      t1.$indexSet(t1, "right", true);
    } else {
      t1 = $.get$currentlyPressedMouseButtons();
      t1.$indexSet(t1, "left", true);
    }
  }
},

setUpCapture_closure3: {"": "Closure;",
  call$1: function(e) {
    $.preventDefault$0$x(e);
  }
},

setUpCapture_closure4: {"": "Closure;",
  call$1: function(e) {
    var t1 = $.getInterceptor$x(e);
    t1.preventDefault$0(e);
    if (t1.get$which(e) === 3 || t1.get$button(e) === 2) {
      t1 = $.get$currentlyPressedMouseButtons();
      t1.$indexSet(t1, "right", null);
    } else {
      t1 = $.get$currentlyPressedMouseButtons();
      t1.$indexSet(t1, "left", null);
    }
  }
},

loadObj_closure: {"": "Closure;c_0,hr_1",
  call$1: function(e) {
    var t1 = this.c_0;
    t1.complete$1(t1, $.doLoadObj(this.hr_1.response));
  }
},

Matrix4: {"": "Object;array,newBack,newUp,newRight",
  $index: function(_, index) {
    var t1 = this.array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    var t1 = this.array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  clear$0: function(_) {
    var t1, t2, i;
    for (t1 = this.array, t2 = t1.length, i = 0; i < 16; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = 0;
    }
  },
  identity$0: function() {
    var t1, i, t2;
    for (t1 = this.array, i = 0; i < 16; ++i) {
      t2 = $.JSInt_methods.$mod(i, 5) === 0 ? 1 : 0;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
    return this;
  },
  frustum$6: function(left, right, bottom, $top, near, far) {
    var rl, tb, fn, t1, t2, t3;
    rl = right - left;
    tb = $top - bottom;
    fn = far - near;
    this.clear$0(this);
    t1 = this.array;
    t2 = near * 2;
    t3 = t1.length;
    if (0 >= t3)
      throw $.ioore(0);
    t1[0] = t2 / rl;
    if (5 >= t3)
      throw $.ioore(5);
    t1[5] = t2 / tb;
    if (8 >= t3)
      throw $.ioore(8);
    t1[8] = (right + left) / rl;
    if (9 >= t3)
      throw $.ioore(9);
    t1[9] = ($top + bottom) / tb;
    if (10 >= t3)
      throw $.ioore(10);
    t1[10] = -(far + near) / fn;
    if (11 >= t3)
      throw $.ioore(11);
    t1[11] = -1;
    if (14 >= t3)
      throw $.ioore(14);
    t1[14] = -(far * near * 2) / fn;
  },
  setPerspective$4: function(fovy, aspect, near, far) {
    var $top, right;
    $top = near * $.tan(fovy * 3.141592653589793 / 360);
    right = $top * aspect;
    this.frustum$6(-right, right, -$top, $top, near, far);
  },
  invert$0: function() {
    var t1, t2, a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33, b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11, d, invDet, t3;
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    a00 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    a01 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    a02 = t1[2];
    if (3 >= t2)
      throw $.ioore(3);
    a03 = t1[3];
    if (4 >= t2)
      throw $.ioore(4);
    a10 = t1[4];
    if (5 >= t2)
      throw $.ioore(5);
    a11 = t1[5];
    if (6 >= t2)
      throw $.ioore(6);
    a12 = t1[6];
    if (7 >= t2)
      throw $.ioore(7);
    a13 = t1[7];
    if (8 >= t2)
      throw $.ioore(8);
    a20 = t1[8];
    if (9 >= t2)
      throw $.ioore(9);
    a21 = t1[9];
    if (10 >= t2)
      throw $.ioore(10);
    a22 = t1[10];
    if (11 >= t2)
      throw $.ioore(11);
    a23 = t1[11];
    if (12 >= t2)
      throw $.ioore(12);
    a30 = t1[12];
    if (13 >= t2)
      throw $.ioore(13);
    a31 = t1[13];
    if (14 >= t2)
      throw $.ioore(14);
    a32 = t1[14];
    if (15 >= t2)
      throw $.ioore(15);
    a33 = t1[15];
    b00 = a00 * a11 - a01 * a10;
    b01 = a00 * a12 - a02 * a10;
    b02 = a00 * a13 - a03 * a10;
    b03 = a01 * a12 - a02 * a11;
    b04 = a01 * a13 - a03 * a11;
    b05 = a02 * a13 - a03 * a12;
    b06 = a20 * a31 - a21 * a30;
    b07 = a20 * a32 - a22 * a30;
    b08 = a20 * a33 - a23 * a30;
    b09 = a21 * a32 - a22 * a31;
    b10 = a21 * a33 - a23 * a31;
    b11 = a22 * a33 - a23 * a32;
    d = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
    if (d === 0)
      return false;
    invDet = 1 / d;
    t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
    t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
    t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
    t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
    t2 = -a10;
    t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
    t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
    t3 = -a30;
    t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
    t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
    t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
    t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
    t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
    t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
    t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
    t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
    t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
    t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
    return true;
  },
  rotateX$1: function(angle) {
    var s, c, t1, t2, a10, a11, a12, a13, a20, a21, a22, a23;
    s = $.sin(angle);
    c = $.cos(angle);
    t1 = this.array;
    t2 = t1.length;
    if (4 >= t2)
      throw $.ioore(4);
    a10 = t1[4];
    if (5 >= t2)
      throw $.ioore(5);
    a11 = t1[5];
    if (6 >= t2)
      throw $.ioore(6);
    a12 = t1[6];
    if (7 >= t2)
      throw $.ioore(7);
    a13 = t1[7];
    if (8 >= t2)
      throw $.ioore(8);
    a20 = t1[8];
    if (9 >= t2)
      throw $.ioore(9);
    a21 = t1[9];
    if (10 >= t2)
      throw $.ioore(10);
    a22 = t1[10];
    if (11 >= t2)
      throw $.ioore(11);
    a23 = t1[11];
    t1[4] = a10 * c + a20 * s;
    t1[5] = a11 * c + a21 * s;
    t1[6] = a12 * c + a22 * s;
    t1[7] = a13 * c + a23 * s;
    t2 = -s;
    t1[8] = a10 * t2 + a20 * c;
    t1[9] = a11 * t2 + a21 * c;
    t1[10] = a12 * t2 + a22 * c;
    t1[11] = a13 * t2 + a23 * c;
  },
  rotateZ$1: function(angle) {
    var s, c, t1, t2, a00, a01, a02, a03, a10, a11, a12, a13;
    s = $.sin(angle);
    c = $.cos(angle);
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    a00 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    a01 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    a02 = t1[2];
    if (3 >= t2)
      throw $.ioore(3);
    a03 = t1[3];
    if (4 >= t2)
      throw $.ioore(4);
    a10 = t1[4];
    if (5 >= t2)
      throw $.ioore(5);
    a11 = t1[5];
    if (6 >= t2)
      throw $.ioore(6);
    a12 = t1[6];
    if (7 >= t2)
      throw $.ioore(7);
    a13 = t1[7];
    t1[0] = a00 * c + a10 * s;
    t1[1] = a01 * c + a11 * s;
    t1[2] = a02 * c + a12 * s;
    t1[3] = a03 * c + a13 * s;
    t2 = -s;
    t1[4] = a00 * t2 + a10 * c;
    t1[5] = a01 * t2 + a11 * c;
    t1[6] = a02 * t2 + a12 * c;
    t1[7] = a03 * t2 + a13 * c;
  },
  setElements$1: function(other) {
    var t1, t2, t3, t4, i;
    for (t1 = this.array, t2 = t1.length, t3 = other.array, t4 = t3.length, i = 0; i < t2; ++i) {
      if (i >= t4)
        throw $.ioore(i);
      t1[i] = t3[i];
    }
  },
  multiplyWith$1: function(other) {
    var t1, t2, a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33, t3, b0, b1, b2, b3;
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    a00 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    a01 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    a02 = t1[2];
    if (3 >= t2)
      throw $.ioore(3);
    a03 = t1[3];
    if (4 >= t2)
      throw $.ioore(4);
    a10 = t1[4];
    if (5 >= t2)
      throw $.ioore(5);
    a11 = t1[5];
    if (6 >= t2)
      throw $.ioore(6);
    a12 = t1[6];
    if (7 >= t2)
      throw $.ioore(7);
    a13 = t1[7];
    if (8 >= t2)
      throw $.ioore(8);
    a20 = t1[8];
    if (9 >= t2)
      throw $.ioore(9);
    a21 = t1[9];
    if (10 >= t2)
      throw $.ioore(10);
    a22 = t1[10];
    if (11 >= t2)
      throw $.ioore(11);
    a23 = t1[11];
    if (12 >= t2)
      throw $.ioore(12);
    a30 = t1[12];
    if (13 >= t2)
      throw $.ioore(13);
    a31 = t1[13];
    if (14 >= t2)
      throw $.ioore(14);
    a32 = t1[14];
    if (15 >= t2)
      throw $.ioore(15);
    a33 = t1[15];
    t2 = other.array;
    t3 = t2.length;
    if (0 >= t3)
      throw $.ioore(0);
    b0 = t2[0];
    if (1 >= t3)
      throw $.ioore(1);
    b1 = t2[1];
    if (2 >= t3)
      throw $.ioore(2);
    b2 = t2[2];
    if (3 >= t3)
      throw $.ioore(3);
    b3 = t2[3];
    t1[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    t1[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    t1[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    t1[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    if (4 >= t3)
      throw $.ioore(4);
    b0 = t2[4];
    if (5 >= t3)
      throw $.ioore(5);
    b1 = t2[5];
    if (6 >= t3)
      throw $.ioore(6);
    b2 = t2[6];
    if (7 >= t3)
      throw $.ioore(7);
    b3 = t2[7];
    t1[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    t1[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    t1[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    t1[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    if (8 >= t3)
      throw $.ioore(8);
    b0 = t2[8];
    if (9 >= t3)
      throw $.ioore(9);
    b1 = t2[9];
    if (10 >= t3)
      throw $.ioore(10);
    b2 = t2[10];
    if (11 >= t3)
      throw $.ioore(11);
    b3 = t2[11];
    t1[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    t1[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    t1[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    t1[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    if (12 >= t3)
      throw $.ioore(12);
    b0 = t2[12];
    if (13 >= t3)
      throw $.ioore(13);
    b1 = t2[13];
    if (14 >= t3)
      throw $.ioore(14);
    b2 = t2[14];
    if (15 >= t3)
      throw $.ioore(15);
    b3 = t2[15];
    t1[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    t1[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    t1[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    t1[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  },
  toRotationMat$1: function(target) {
    var t1, t2, t3, t4, t5;
    t1 = target.array;
    t2 = this.array;
    t3 = t2.length;
    if (0 >= t3)
      throw $.ioore(0);
    t4 = t2[0];
    t5 = t1.length;
    if (0 >= t5)
      throw $.ioore(0);
    t1[0] = t4;
    if (1 >= t3)
      throw $.ioore(1);
    t4 = t2[1];
    if (1 >= t5)
      throw $.ioore(1);
    t1[1] = t4;
    if (2 >= t3)
      throw $.ioore(2);
    t4 = t2[2];
    if (2 >= t5)
      throw $.ioore(2);
    t1[2] = t4;
    if (3 >= t3)
      throw $.ioore(3);
    t4 = t2[3];
    if (3 >= t5)
      throw $.ioore(3);
    t1[3] = t4;
    if (4 >= t3)
      throw $.ioore(4);
    t4 = t2[4];
    if (4 >= t5)
      throw $.ioore(4);
    t1[4] = t4;
    if (5 >= t3)
      throw $.ioore(5);
    t4 = t2[5];
    if (5 >= t5)
      throw $.ioore(5);
    t1[5] = t4;
    if (6 >= t3)
      throw $.ioore(6);
    t4 = t2[6];
    if (6 >= t5)
      throw $.ioore(6);
    t1[6] = t4;
    if (7 >= t3)
      throw $.ioore(7);
    t4 = t2[7];
    if (7 >= t5)
      throw $.ioore(7);
    t1[7] = t4;
    if (8 >= t3)
      throw $.ioore(8);
    t4 = t2[8];
    if (8 >= t5)
      throw $.ioore(8);
    t1[8] = t4;
    if (9 >= t3)
      throw $.ioore(9);
    t4 = t2[9];
    if (9 >= t5)
      throw $.ioore(9);
    t1[9] = t4;
    if (10 >= t3)
      throw $.ioore(10);
    t4 = t2[10];
    if (10 >= t5)
      throw $.ioore(10);
    t1[10] = t4;
    if (11 >= t3)
      throw $.ioore(11);
    t2 = t2[11];
    if (11 >= t5)
      throw $.ioore(11);
    t1[11] = t2;
    if (12 >= t5)
      throw $.ioore(12);
    t1[12] = 0;
    if (13 >= t5)
      throw $.ioore(13);
    t1[13] = 0;
    if (14 >= t5)
      throw $.ioore(14);
    t1[14] = 0;
    if (15 >= t5)
      throw $.ioore(15);
    t1[15] = 1;
  },
  translateLocal$3: function(x, y, z) {
    var t1, t2, t3, t4, t5;
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (4 >= t2)
      throw $.ioore(4);
    t4 = t1[4];
    if (8 >= t2)
      throw $.ioore(8);
    t5 = t1[8];
    if (12 >= t2)
      throw $.ioore(12);
    t1[12] = t3 * x + t4 * y + t5 * z + t1[12];
    t5 = t1[1];
    t4 = t1[5];
    t3 = t1[9];
    if (13 >= t2)
      throw $.ioore(13);
    t1[13] = t5 * x + t4 * y + t3 * z + t1[13];
    t3 = t1[2];
    t4 = t1[6];
    t5 = t1[10];
    if (14 >= t2)
      throw $.ioore(14);
    t1[14] = t3 * x + t4 * y + t5 * z + t1[14];
    t5 = t1[3];
    t4 = t1[7];
    t3 = t1[11];
    if (15 >= t2)
      throw $.ioore(15);
    t1[15] = t5 * x + t4 * y + t3 * z + t1[15];
  },
  copyPositionFrom$2: function(from, factor) {
    var t1, t2;
    t1 = this.array;
    t2 = from.$index(from, 12);
    if (12 >= t1.length)
      throw $.ioore(12);
    t1[12] = t2 * factor;
    t2 = from.$index(from, 13);
    if (13 >= t1.length)
      throw $.ioore(13);
    t1[13] = t2 * factor;
    t2 = from.$index(from, 14);
    if (14 >= t1.length)
      throw $.ioore(14);
    t1[14] = t2 * factor;
  },
  copyPositionFrom$1: function(from) {
    return this.copyPositionFrom$2(from, 1);
  },
  lookAt_alt$3: function(eye, target, up) {
    var t1, t2, t3, t4, t5, t6;
    if (up == null)
      up = $.Vector$(0, 1, 0);
    t1 = this.newBack;
    t1.direction$2(eye, target);
    t2 = this.newRight;
    t2.cross$2(up, t1);
    t2.normalize$0();
    t3 = this.newUp;
    t3.cross$2(t1, t2);
    t4 = this.array;
    t5 = t2.$index(t2, 0);
    if (0 >= t4.length)
      throw $.ioore(0);
    t4[0] = t5;
    t5 = t3.$index(t3, 0);
    if (1 >= t4.length)
      throw $.ioore(1);
    t4[1] = t5;
    t5 = t1.$index(t1, 0);
    t6 = t4.length;
    if (2 >= t6)
      throw $.ioore(2);
    t4[2] = t5;
    if (3 >= t6)
      throw $.ioore(3);
    t4[3] = 0;
    t6 = t2.$index(t2, 1);
    if (4 >= t4.length)
      throw $.ioore(4);
    t4[4] = t6;
    t6 = t3.$index(t3, 1);
    if (5 >= t4.length)
      throw $.ioore(5);
    t4[5] = t6;
    t6 = t1.$index(t1, 1);
    t5 = t4.length;
    if (6 >= t5)
      throw $.ioore(6);
    t4[6] = t6;
    if (7 >= t5)
      throw $.ioore(7);
    t4[7] = 0;
    t2 = t2.$index(t2, 2);
    if (8 >= t4.length)
      throw $.ioore(8);
    t4[8] = t2;
    t3 = t3.$index(t3, 2);
    if (9 >= t4.length)
      throw $.ioore(9);
    t4[9] = t3;
    t1 = t1.$index(t1, 2);
    t3 = t4.length;
    if (10 >= t3)
      throw $.ioore(10);
    t4[10] = t1;
    if (11 >= t3)
      throw $.ioore(11);
    t4[11] = 0;
    if (15 >= t3)
      throw $.ioore(15);
    t4[15] = 1;
  },
  toString$0: function(_) {
    return $.JSString_methods.$add("", $.Float32List_methods.toString$0(this.array));
  },
  scale$1: function(_, factor) {
    var t1, t2;
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = t1[0] * factor;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t1[1] * factor;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = t1[2] * factor;
    if (3 >= t2)
      throw $.ioore(3);
    t1[3] = t1[3] * factor;
    if (4 >= t2)
      throw $.ioore(4);
    t1[4] = t1[4] * factor;
    if (5 >= t2)
      throw $.ioore(5);
    t1[5] = t1[5] * factor;
    if (6 >= t2)
      throw $.ioore(6);
    t1[6] = t1[6] * factor;
    if (7 >= t2)
      throw $.ioore(7);
    t1[7] = t1[7] * factor;
    if (8 >= t2)
      throw $.ioore(8);
    t1[8] = t1[8] * factor;
    if (9 >= t2)
      throw $.ioore(9);
    t1[9] = t1[9] * factor;
    if (10 >= t2)
      throw $.ioore(10);
    t1[10] = t1[10] * factor;
    if (11 >= t2)
      throw $.ioore(11);
    t1[11] = t1[11] * factor;
  },
  Matrix4$0: function() {
    this.identity$0();
  }
},

Mesh: {"": "Node;gl,texture,verticesBuffer,textureCoordBuffer,vertexIndexBuffer,numItems,name,type,enabled,invert,children,mvMatrix,tempMatrix,matrix,pos,back,up,right",
  draw2$1: function(program) {
    $.bindBuffer$2$x(this.gl, 34962, this.verticesBuffer);
    $.vertexAttribPointer$6$x(this.gl, program.get$vertexPositionAttribute(), 3, 5126, false, 0, 0);
    if (program.get$shaderObject().textureCoordinatesAttribute != null) {
      $.bindBuffer$2$x(this.gl, 34962, this.textureCoordBuffer);
      $.vertexAttribPointer$6$x(this.gl, program.get$textureCoordAttribute(), 2, 5126, false, 0, 0);
    }
    if (program.get$shaderObject().textureSamplerUniform != null) {
      $.activeTexture$1$x(this.gl, 33984);
      $.bindTexture$2$x(this.gl, 3553, this.texture);
      $.uniform1i$2$x(this.gl, program.get$samplerUniform(), 0);
    }
    if (program.get$shaderObject().transformationMatrixUniform != null)
      $.uniformMatrix4fv$3$x(this.gl, program.get$transformationMatrixUniform(), false, this.matrix.array);
    $.bindBuffer$2$x(this.gl, 34963, this.vertexIndexBuffer);
    $.uniformMatrix4fv$3$x(this.gl, program.get$mvMatrixUniform(), false, this.mvMatrix.array);
    $.drawElements$4$x(this.gl, 4, this.numItems, 5123, 0);
  },
  Mesh$1: function(meshData) {
    this.texture = meshData.texture;
    this.gl = $.RaysWebGL_globalGL;
    this.numItems = meshData.vertexIndices.length;
    this.verticesBuffer = $.createBuffer$0$x(this.gl);
    $.bindBuffer$2$x(this.gl, 34962, this.verticesBuffer);
    $.bufferDataTyped$3$x(this.gl, 34962, meshData.vertices, 35044);
    this.textureCoordBuffer = $.createBuffer$0$x(this.gl);
    $.bindBuffer$2$x(this.gl, 34962, this.textureCoordBuffer);
    $.bufferDataTyped$3$x(this.gl, 34962, meshData.textureCoords, 35044);
    this.vertexIndexBuffer = $.createBuffer$0$x(this.gl);
    $.bindBuffer$2$x(this.gl, 34963, this.vertexIndexBuffer);
    $.bufferDataTyped$3$x(this.gl, 34963, meshData.vertexIndices, 35044);
  }
},

MeshData: {"": "Object;vertices,textureCoords,vertexIndices,texture",
  createMesh$0: function() {
    return $.Mesh$(this);
  }
},

MeshData2: {"": "Object;vertices,normals,textureCoords,vertexIndices,texture",
  createMeshData$0: function() {
    var t1, t2, t3;
    t1 = $.Float32List_Float32List$fromList(this.vertices);
    t2 = $.Float32List_Float32List$fromList(this.textureCoords);
    t3 = $.Uint16List_Uint16List$fromList(this.vertexIndices);
    return $.MeshData$(this.texture, t2, t3, t1);
  },
  createMesh$0: function() {
    return $.Mesh$(this.createMeshData$0());
  },
  MeshData2$empty$0: function() {
    this.vertices = $.List_List(null);
    this.textureCoords = $.List_List(null);
    this.normals = $.List_List(null);
    this.vertexIndices = $.List_List(null);
  }
},

Node: {"": "Spatial;name,type,enabled<,invert,children,mvMatrix,tempMatrix,matrix,pos,back,up,right",
  animate$1: function(elapsed) {
  },
  draw2$1: function(program) {
  },
  draw$2: function(program, parentMVMatrix) {
    var t1, t2, t3;
    t1 = this.mvMatrix;
    t1.setElements$1(parentMVMatrix);
    t2 = this.tempMatrix;
    t3 = this.matrix;
    t2.setElements$1(t3);
    if (this.invert) {
      t2.invert$0();
      t2.copyPositionFrom$1(t3);
    }
    t1.multiplyWith$1(t2);
    this.draw2$1(program);
    for (t2 = $.ListIterator$(this.children); t2.moveNext$0();)
	if( t2._liblib$_current != null)
      t2._liblib$_current.draw$2(program, t1);
  },
  Node$1: function(child) {
    this.children.push(child);
  }
},

PointSprites: {"": "Object;enabled<"},

ProgramNormal: {"": "Object;raysWebGL,shaderObject<,gl,program,vertexPositionAttribute<,textureCoordAttribute<,pMatrixUniform,mvMatrixUniform<,samplerUniform<,transformationMatrixUniform<,timeUniform,mvMatrix,followCameraObjects,objects,timeNow",
  getUniformLocation$1: function(_, $name) {
    return $.getUniformLocation$2$x(this.gl, this.program, $name);
  },
  getUniform$1: function(_, $name) {
    return $.Uniform$($.getUniformLocation$2$x(this.gl, this.program, $name), this.gl);
  },
  add$1: function(_, obj) {
    this.objects.push(obj);
    return obj;
  },
  animate$1: function(elapsed) {
    var t1, node;
    t1 = this.timeNow;
    if (typeof elapsed !== "number")
      throw $.iae(elapsed);
    this.timeNow = t1 + elapsed;
    for (t1 = $.ListIterator$(this.objects); t1.moveNext$0();) {
      node = t1._liblib$_current;
      if (node.get$enabled())
        node.animate$1(elapsed);
    }
  },
  hasEnabledObjects$0: function() {
    for (var t1 = $.JSArray_methods.get$iterator(this.objects); t1.moveNext$0();)
      if (t1._liblib$_current.get$enabled())
        return true;
    for (t1 = $.JSArray_methods.get$iterator(this.followCameraObjects); t1.moveNext$0();)
      if (t1._liblib$_current.get$enabled())
        return true;
    return false;
  },
  draw$1: function(pMatrix) {
    var t1, camera, t2;
    if (!this.hasEnabledObjects$0())
      return;
    $.useProgram$1$x(this.gl, this.program);
    $.enableVertexAttribArray$1$x(this.gl, this.vertexPositionAttribute);
    t1 = this.shaderObject;
    if (t1.textureCoordinatesAttribute != null)
      $.enableVertexAttribArray$1$x(this.gl, this.textureCoordAttribute);
    $.uniformMatrix4fv$3$x(this.gl, this.pMatrixUniform, false, pMatrix.array);
    if (t1.timeUniform != null)
      $.uniform1f$2$x(this.gl, this.timeUniform, this.timeNow / 1000);
    camera = this.raysWebGL._camera;
    t2 = this.mvMatrix;
    camera.getMVMatrix$2(t2, false);
    this.drawObjects$1(this.followCameraObjects);
    camera.getMVMatrix$2(t2, true);
    this.drawObjects$1(this.objects);
    $.disableVertexAttribArray$1$x(this.gl, this.vertexPositionAttribute);
    if (t1.textureCoordinatesAttribute != null)
      $.disableVertexAttribArray$1$x(this.gl, this.textureCoordAttribute);
  },
  drawObjects$1: function(objects) {
    var t1, t2, node;
    for (t1 = $.JSArray_methods.get$iterator(objects), t2 = this.mvMatrix; t1.moveNext$0();) {
      node = t1._liblib$_current;
      if (node.get$enabled())
        node.draw$2(this, t2);
    }
  },
  ProgramNormal$2: function(raysWebGL, shaderObject) {
    var t1, t2;
    this.gl = this.raysWebGL.getRenderingContext$0();
    t1 = this.shaderObject;
    this.program = $.ShaderUtils$(this.gl).getProgram$2(t1.vertexShader, t1.fragmentShader);
    this.vertexPositionAttribute = $.getAttribLocation$2$x(this.gl, this.program, t1.vertexPositionAttribute);
    t2 = t1.textureCoordinatesAttribute;
    if (t2 != null)
      this.textureCoordAttribute = $.getAttribLocation$2$x(this.gl, this.program, t2);
    this.pMatrixUniform = this.getUniformLocation$1(this, t1.perpectiveMatrixUniform);
    this.mvMatrixUniform = this.getUniformLocation$1(this, t1.modelViewMatrixUniform);
    t2 = t1.textureSamplerUniform;
    if (t2 != null)
      this.samplerUniform = this.getUniformLocation$1(this, t2);
    t2 = t1.transformationMatrixUniform;
    if (t2 != null)
      this.transformationMatrixUniform = this.getUniformLocation$1(this, t2);
    t1 = t1.timeUniform;
    if (t1 != null)
      this.timeUniform = this.getUniformLocation$1(this, t1);
  }
},

ProgramPointSprites: {"": "ShaderProgram;raysWebGL,gl,program,vertexPositionAttribute<,textureCoordAttribute<,pMatrixUniform,mvMatrixUniform<,samplerUniform<,mvMatrix,pointSpritesList",
  animate$1: function(elapsed) {
    var t1, pointSprites;
    for (t1 = $.ListIterator$(this.pointSpritesList); t1.moveNext$0();) {
      pointSprites = t1._liblib$_current;
      if (pointSprites.get$enabled())
        pointSprites.animate$1(elapsed);
    }
  },
  draw$1: function(pMatrix) {
    var t1, camera, t2, pointSprites;
    t1 = this.pointSpritesList;
    if (t1.length === 0)
      return;
    $.useProgram$1$x(this.gl, this.program);
    $.uniformMatrix4fv$3$x(this.gl, this.pMatrixUniform, false, pMatrix.array);
    camera = this.raysWebGL._camera;
    t2 = this.mvMatrix;
    camera.getMVMatrix$2(t2, false);
    camera.getMVMatrix$2(t2, true);
    for (t1 = $.ListIterator$(t1); t1.moveNext$0();) {
      pointSprites = t1._liblib$_current;
      if (pointSprites.get$enabled())
        pointSprites.draw$2(this, t2);
    }
  },
  ProgramPointSprites$1: function(raysWebGL) {
    this.gl = this.raysWebGL.getRenderingContext$0();
    this.program = $.ShaderUtils$(this.gl).getProgram$2("attribute vec3 aVertexPosition;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\n\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n  gl_PointSize = 1000.0/gl_Position.z;\n}\n", "precision mediump float;\n\nuniform sampler2D uSampler;\n\nvoid main(void) {\n  gl_FragColor = texture2D(uSampler, gl_PointCoord);\n  gl_FragColor.a = 0.4;\n}\n");
    this.vertexPositionAttribute = $.getAttribLocation$2$x(this.gl, this.program, "aVertexPosition");
    $.enableVertexAttribArray$1$x(this.gl, this.vertexPositionAttribute);
    this.pMatrixUniform = $.getUniformLocation$2$x(this.gl, this.program, "uPMatrix");
    this.mvMatrixUniform = $.getUniformLocation$2$x(this.gl, this.program, "uMVMatrix");
    this.samplerUniform = $.getUniformLocation$2$x(this.gl, this.program, "uSampler");
  }
},

PhysicsObject: {"": "Object;"},

ShaderProgram: {"": "PhysicsObject;"},

RaysWebGL: {"": "Object;gl,programs,physicsObjects,programNormal,programPointSprites,_canvas,_aspect,_textureCache,_camera,_utils,_pMatrix,_lastWidth,_lastHeight,_lastTime",
  getRenderingContext$0: function() {
    return this.gl;
  },
  getTextureCache$0: function() {
    return this._textureCache;
  },
  getCamera$0: function() {
    return this._camera;
  },
  getShaderLib$0: function() {
    return $.ShaderLib$(this);
  },
  getUtils$0: function() {
    return this._utils;
  },
  addPhysicsObject$2: function($name, po) {
    var t1 = this.physicsObjects;
    t1.$indexSet(t1, $name, po);
  },
  animate$2: function(timeNow, elapsed) {
    var t1;
    for (t1 = this.physicsObjects, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
      t1._liblib$_current.animate$1(elapsed);
    for (t1 = this.programs, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
      t1._liblib$_current.animate$1(elapsed);
  },
  draw$0: function() {
    var t1, t2, t3, t4;
    t1 = this._lastWidth;
    t2 = this._canvas;
    t3 = t2.clientWidth;
    if (t1 == null ? t3 == null : t1 === t3) {
      t1 = this._lastHeight;
      t4 = t2.clientHeight;
      t4 = t1 == null ? t4 != null : t1 !== t4;
      t1 = t4;
    } else
      t1 = true;
    if (t1) {
      $.set$width$x(t2, t3);
      t1 = this._canvas;
      $.set$height$x(t1, t1.clientHeight);
      t1 = this.gl;
      t2 = this._canvas;
      $.viewport$4$x(t1, 0, 0, t2.clientWidth, t2.clientHeight);
      t2 = this._canvas;
      t1 = t2.clientWidth;
      t2 = t2.clientHeight;
      if (t1 == null)
        throw t1.$div();
      if (t2 == null)
        throw $.iae(t2);
      this._pMatrix.setPerspective$4(50, t1 / t2, 0.1, 2020);
      this._lastWidth = this._canvas.clientWidth;
      this._lastHeight = this._canvas.clientHeight;
    }
    $.clear$1$ax(this.gl, 16640);
    for (t1 = this.programs, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1), t2 = this._pMatrix; t1.moveNext$0();)
      t1._liblib$_current.draw$1(t2);
  },
  run$1: function(timeNow) {
    var t1, elapsed;
    if (typeof timeNow !== "number")
      return this.run$1$bailout(1, timeNow);
    t1 = this._lastTime;
    if (typeof t1 !== "number")
      return this.run$1$bailout(2, timeNow, t1);
    if (t1 === 0)
      this._lastTime = timeNow;
    t1 = this._lastTime;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    elapsed = timeNow - t1;
    this._lastTime = timeNow;
    if ($.JSNumber_methods.get$isNaN(elapsed)) {
      $.print("isNaN(elapsed)");
      elapsed = 0;
    }
    this.animate$2(timeNow, elapsed);
    this.draw$0();
    $.Window_methods.requestAnimationFrame$1($.window(), this.get$run());
  },
  run$1$bailout: function(state0, timeNow, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (timeNow == null)
          timeNow = 0;
        t1 = this._lastTime;
      case 2:
        var elapsed;
        state0 = 0;
        if ($.$eq(t1, 0))
          this._lastTime = timeNow;
        t1 = this._lastTime;
        if (typeof t1 !== "number")
          throw $.iae(t1);
        elapsed = $.$sub$n(timeNow, t1);
        this._lastTime = timeNow;
        if ($.get$isNaN$n(elapsed)) {
          $.print("isNaN(elapsed)");
          elapsed = 0;
        }
        this.animate$2(timeNow, elapsed);
        this.draw$0();
        $.Window_methods.requestAnimationFrame$1($.window(), this.get$run());
    }
  },
  get$run: function() {
    return new $.Bound_run_RaysWebGL(this, "run$1", null);
  },
  RaysWebGL$2: function(canvasID, transparent) {
    var t1, t2;
    this._canvas = $.document().querySelector(canvasID);
    $.get$onDragStart$x(this._canvas).listen$1(new $.RaysWebGL_closure());
    t1 = this._canvas;
    $.set$width$x(t1, t1.clientWidth);
    t1 = this._canvas;
    $.set$height$x(t1, t1.clientHeight);
    t1 = this._canvas;
    t2 = t1.clientWidth;
    t1 = t1.clientHeight;
    if (t2 == null)
      throw t2.$div();
    if (t1 == null)
      throw $.iae(t1);
    this._aspect = t2 / t1;
    this.gl = $.getContext$1$x(this._canvas, "experimental-webgl");
    t1 = this.gl;
    $.RaysWebGL_globalGL = t1;
    $.clearColor$4$x(t1, 0, 0, 0, 1);
    t1 = this.gl;
    if (transparent) {
      $.enable$1$x(t1, 3042);
      $.blendFunc$2$x(this.gl, 770, 774);
    } else
      $.enable$1$x(t1, 2929);
    $.lineWidth$1$x(this.gl, 5);
    t1 = this.programs;
    t2 = $.ProgramNormal$(this, $.ShaderLib$(this).getNormalShader$0());
    this.programNormal = t2;
    t1.$indexSet(t1, "normal", t2);
    t2 = $.ProgramPointSprites$(this);
    this.programPointSprites = t2;
    t1.$indexSet(t1, "point_sprites", t2);
    this._textureCache = $.TextureCache$(this);
    this._camera = $.Camera$();
    this._utils = $.Utils$(this);
    $.setUpCapture();
  }
},

RaysWebGL_closure: {"": "Closure;",
  call$1: function($event) {
    $.preventDefault$0$x($event);
  }
},

ShaderObject: {"": "Object;raysWebGL,vertexShader,fragmentShader,vertexPositionAttribute,textureCoordinatesAttribute,transformationMatrixUniform,modelViewMatrixUniform,perpectiveMatrixUniform,textureSamplerUniform,timeUniform",
  createProgram$1: function(_, $name) {
    var t1, pn;
    t1 = this.raysWebGL;
    pn = $.ProgramNormal$(t1, this);
    t1 = t1.programs;
    t1.$indexSet(t1, $name, pn);
    return pn;
  }
},

ShaderLib: {"": "Object;raysWebGL",
  getNormalShader$0: function() {
    var shaderObject = $.ShaderObject$(this.raysWebGL);
    shaderObject.vertexShader = "          attribute vec3 aVertexPosition;\n          attribute vec2 aTextureCoord;\n          \n          uniform mat4 uMVMatrix;\n          uniform mat4 uPMatrix;\n          \n          varying vec2 vTextureCoord;\n          \n          void main(void) {\n          gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n          vTextureCoord = aTextureCoord;\n          }\n          ";
    shaderObject.fragmentShader = "          precision mediump float;\n          \n          varying vec2 vTextureCoord;\n          uniform sampler2D uSampler;\n          \n          void main(void) {\n          gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n          //gl_FragColor = vec4( vec3( vTextureCoord, 0. ), 1. );\n          }\n          ";
    shaderObject.vertexPositionAttribute = "aVertexPosition";
    shaderObject.textureCoordinatesAttribute = "aTextureCoord";
    shaderObject.modelViewMatrixUniform = "uMVMatrix";
    shaderObject.perpectiveMatrixUniform = "uPMatrix";
    shaderObject.textureSamplerUniform = "uSampler";
    return shaderObject;
  },
  getPerlinNoiseVertexColorShader$0: function() {
    var shaderObject = $.ShaderObject$(this.raysWebGL);
    shaderObject.vertexShader = $.JSString_methods.$add("vec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n", "          attribute vec3 aVertexPosition;\n          \n          uniform mat4 uMVMatrix;\n          uniform mat4 uPMatrix;\n          uniform float time;\n          uniform float fadeFactor;\n          \n          varying vec4 vColor;\n\n          vec4 lerp( vec4 vec, float factor) {\n            vec.x += factor * (1. - vec.x);\n            vec.y += factor * (1. - vec.y);\n            vec.z += factor * (1. - vec.z);\n            return vec;\n          }\n          \n          void main() {\n  \n            float mytime = time / 4.0;\n    \n            //float sint = (sin( mytime*10.)+1.0)/2.0;\n    \n            float r = pnoise( .75 * ( aVertexPosition*0.25 + mytime ), vec3( 2.0 ) );\n            float g = pnoise( 0.8 * ( aVertexPosition*0.25 + mytime ), vec3( 2.0 ) );\n            float b = pnoise( 0.9 * ( aVertexPosition*0.25 + mytime ), vec3( 2.0 ) );\n            float n = pnoise( 1.5 * ( aVertexPosition*0.25 + mytime ), vec3( 2.0 ) );\n            n = pow( 1., n );\n            //float n = 10.0 * pnoise( 5.0 * ( vNormal + time ), vec3( 10.0 ) ) * pnoise( .5 * ( vNormal + time ), vec3( 10.0 ) );\n            //n += .5 * pnoise( 4.0 * vNormal, vec3( 10.0 ) );\n            //vColor = vec4( 1.0-(r + n), 1.0-(g + n), 1.0-(b + n), 1.0 );\n            //n=0.0;\n            vColor = vec4( (r + n), (g + n), (b + n), 1.0 );\n            vColor = lerp( vColor, fadeFactor);\n            \n            // float f = 0.5 * pnoise( normal + time, vec3( 10.0 ) );\n            gl_Position = uPMatrix * uMVMatrix * vec4( aVertexPosition, 1.0 );\n          }\n          ");
    shaderObject.fragmentShader = "          precision mediump float;\n          \n          varying vec4 vColor;\n          \n          void main(void) {\n             gl_FragColor = vColor;\n          }\n          ";
    shaderObject.vertexPositionAttribute = "aVertexPosition";
    shaderObject.modelViewMatrixUniform = "uMVMatrix";
    shaderObject.perpectiveMatrixUniform = "uPMatrix";
    shaderObject.timeUniform = "time";
    return shaderObject;
  },
  getPerlinNoiseColorShader$1: function(blackVariant) {
    var shaderObject, t1;
    shaderObject = $.ShaderObject$(this.raysWebGL);
    shaderObject.vertexShader = $.JSString_methods.$add("vec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n", "          attribute vec3 aVertexPosition;\n  \n          uniform mat4 uMVMatrix;\n          uniform mat4 uPMatrix;\n  \n          uniform float time;\n          varying vec3 vNormal;\n  \n          void main() {\n          vec3 normal = normalize( aVertexPosition);\n          float f = 0.5 * pnoise( normal + time/3.0, vec3( 10.0 ) );\n          //vNormal = aVertexPosition + f * normal;\n          //vNormal = f*normal;\n          vNormal = normal;\n          gl_Position = uPMatrix * uMVMatrix * vec4( aVertexPosition + f * normal, 1.0 );\n        }\n        ");
    t1 = $.JSString_methods.$add("precision mediump float;\n", "vec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n");
    shaderObject.fragmentShader = $.JSString_methods.$add($.JSString_methods.$add(t1, blackVariant === true ? "#define BLACK 1\n" : ""), "  \n        varying vec3 vNormal;\n        uniform mat4 uTMatrix;\n  \n        #define VARIANT 1\n  \n        uniform float time;\n        void main() {\n          #if VARIANT == 1\n            float mytime = time/2.0;\n            #ifdef BLACK\n              mytime = time/10.0;\n            #endif\n            float period = 10.0;\n            float factor = 1.0; // sin( time)/4.0+2.0;\n            vec3 translation = uTMatrix[3].xyz;\n            float r = pnoise( .75 * ( vNormal*factor + mytime ), vec3( period ) );\n            float g = pnoise( 0.8 * ( vNormal*factor + mytime ), vec3( period ) );\n            float b = pnoise( 0.9 * ( vNormal*factor + mytime ), vec3( period ) );\n            float n = pnoise( 1.5 * ( vNormal*factor + mytime ), vec3( period ) );\n          #else\n            float mytime = 0.0 ; //time/50.0;\n            float period = 5.0;\n            float factor = 1.0; // sin( time)/4.0+2.0;\n            vec3 translation = uTMatrix[3].xyz;\n            float r = pnoise( .75 * ( translation*0.175 + vNormal*factor + mytime ), vec3( period ) );\n            float g = pnoise( 0.8 * ( translation*0.175 + vNormal*factor + mytime ), vec3( period ) );\n            float b = pnoise( 0.9 * ( translation*0.175 + vNormal*factor + mytime ), vec3( period ) );\n            float n = pnoise( 1.5 * ( translation*0.175 + vNormal*factor + mytime ), vec3( period ) );\n          #endif\n  \n          n = pow( .001, n );\n          //float n = 10.0 * pnoise( 5.0 * ( vNormal + time ), vec3( 10.0 ) ) * pnoise( .5 * ( vNormal + time ), vec3( 10.0 ) );\n          //n += .5 * pnoise( 4.0 * vNormal, vec3( 10.0 ) );\n          #ifdef BLACK\n            vec3 color = vec3( 1.0-(r + n), 1.0-(g + n), 1.0-(b + n) );\n          #else\n            vec3 color = vec3( (r + n), (g + n), (b + n) );\n          #endif\n          gl_FragColor = vec4( color, 1.0 );\n        }\n        ");
    shaderObject.vertexPositionAttribute = "aVertexPosition";
    shaderObject.modelViewMatrixUniform = "uMVMatrix";
    shaderObject.perpectiveMatrixUniform = "uPMatrix";
    shaderObject.transformationMatrixUniform = "uTMatrix";
    shaderObject.timeUniform = "time";
    return shaderObject;
  },
  getPerlinNoiseColorShader$0: function() {
    return this.getPerlinNoiseColorShader$1(null);
  }
},

Uniform: {"": "Object;uniformLocation,gl"},

ShaderUtils: {"": "Object;gl",
  getShader$2: function(type, text) {
    var shader = $.createShader$1$x(this.gl, type);
    $.shaderSource$2$x(this.gl, shader, text);
    $.compileShader$1$x(this.gl, shader);
    $.getShaderParameter$2$x(this.gl, shader, 35713);
    return shader;
  },
  getProgram$2: function(vertexShaderText, fragmentShaderText) {
    var program = $.createProgram$0$x(this.gl);
    $.attachShader$2$x(this.gl, program, this.getShader$2(35633, vertexShaderText));
    $.attachShader$2$x(this.gl, program, this.getShader$2(35632, fragmentShaderText));
    $.linkProgram$1$x(this.gl, program);
    if ($.getProgramParameter$2$x(this.gl, program, 35714) !== true)
      throw $.wrapException($.getProgramInfoLog$1$x(this.gl, program));
    return program;
  }
},

Icosahedron: {"": "MeshData2;vertices,normals,textureCoords,vertexIndices,texture",
  v$3: function(x, y, z) {
    var $length = $.sqrt(x * x + y * y + z * z);
    $.JSArray_methods.addAll$1(this.vertices, [x / $length, y / $length, z / $length]);
  },
  f3$4: function(a, b, c, scope) {
    var t1, v1, v2, v3, t2, t3, t4, t5, t6;
    if (typeof a !== "number")
      return this.f3$4$bailout(1, a, b, c, scope);
    t1 = a * 3;
    v1 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    t1 = b * 3;
    v2 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    t1 = c * 3;
    v3 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    $.JSArray_methods.addAll$1(scope.vertexIndices, [a, b, c]);
    t1 = scope.textureCoords;
    if (2 >= v1.length)
      throw $.ioore(2);
    t2 = $.atan2(v1[2], v1[0]);
    if (1 >= v1.length)
      throw $.ioore(1);
    t3 = $.acos(v1[1]);
    if (2 >= v2.length)
      throw $.ioore(2);
    t4 = $.atan2(v2[2], v2[0]);
    if (1 >= v2.length)
      throw $.ioore(1);
    t5 = $.acos(v2[1]);
    if (2 >= v3.length)
      throw $.ioore(2);
    t6 = $.atan2(v3[2], v3[0]);
    if (1 >= v3.length)
      throw $.ioore(1);
    $.JSArray_methods.addAll$1(t1, [0.5 * (1 + t2 * 0.3183098861837907), t3 * 0.3183098861837907, 0.5 * (1 + t4 * 0.3183098861837907), t5 * 0.3183098861837907, 0.5 * (1 + t6 * 0.3183098861837907), $.acos(v3[1]) * 0.3183098861837907]);
  },
  f3$4$bailout: function(state0, a, b, c, scope) {
    var t1, v1, v2, v3, t2, t3, t4, t5, t6;
    t1 = $.getInterceptor$n(a);
    v1 = $.JSArray_methods.sublist$2(this.vertices, t1.$mul(a, 3), $.$add$ns(t1.$mul(a, 3), 3));
    t1 = b * 3;
    v2 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    t1 = c * 3;
    v3 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    $.JSArray_methods.addAll$1(scope.vertexIndices, [a, b, c]);
    t1 = scope.textureCoords;
    if (2 >= v1.length)
      throw $.ioore(2);
    t2 = $.atan2(v1[2], v1[0]);
    if (1 >= v1.length)
      throw $.ioore(1);
    t3 = $.acos(v1[1]);
    if (2 >= v2.length)
      throw $.ioore(2);
    t4 = $.atan2(v2[2], v2[0]);
    if (1 >= v2.length)
      throw $.ioore(1);
    t5 = $.acos(v2[1]);
    if (2 >= v3.length)
      throw $.ioore(2);
    t6 = $.atan2(v3[2], v3[0]);
    if (1 >= v3.length)
      throw $.ioore(1);
    $.JSArray_methods.addAll$1(t1, [0.5 * (1 + t2 * 0.3183098861837907), t3 * 0.3183098861837907, 0.5 * (1 + t4 * 0.3183098861837907), t5 * 0.3183098861837907, 0.5 * (1 + t6 * 0.3183098861837907), $.acos(v3[1]) * 0.3183098861837907]);
  },
  getMiddlePoint$2: function(p1, p2) {
    var t1, pos1, pos2, t2, t3, t4, x, y;
    if (typeof p1 !== "number")
      return this.getMiddlePoint$2$bailout(1, p1, p2);
    if (typeof p2 !== "number")
      return this.getMiddlePoint$2$bailout(1, p1, p2);
    t1 = p1 * 3;
    pos1 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    t1 = p2 * 3;
    pos2 = $.JSArray_methods.sublist$2(this.vertices, t1, t1 + 3);
    t1 = pos1.length;
    if (0 >= t1)
      throw $.ioore(0);
    t2 = pos1[0];
    if (typeof t2 !== "number")
      return this.getMiddlePoint$2$bailout(2, 0, 0, t2, pos1, pos2);
    t3 = pos2.length;
    if (0 >= t3)
      throw $.ioore(0);
    t4 = pos2[0];
    if (typeof t4 !== "number")
      return this.getMiddlePoint$2$bailout(3, 0, 0, t2, pos1, pos2, t4);
    x = (t2 + t4) / 2;
    if (1 >= t1)
      throw $.ioore(1);
    t4 = pos1[1];
    if (typeof t4 !== "number")
      return this.getMiddlePoint$2$bailout(4, 0, 0, 0, pos1, pos2, t4, x);
    if (1 >= t3)
      throw $.ioore(1);
    t2 = pos2[1];
    if (typeof t2 !== "number")
      return this.getMiddlePoint$2$bailout(5, 0, 0, t2, pos1, pos2, t4, x);
    y = (t4 + t2) / 2;
    if (2 >= t1)
      throw $.ioore(2);
    t1 = pos1[2];
    if (typeof t1 !== "number")
      return this.getMiddlePoint$2$bailout(6, 0, 0, t1, 0, pos2, 0, x, y);
    if (2 >= t3)
      throw $.ioore(2);
    t3 = pos2[2];
    if (typeof t3 !== "number")
      return this.getMiddlePoint$2$bailout(7, 0, 0, t1, 0, 0, t3, x, y);
    this.v$3(x, y, (t1 + t3) / 2);
    return $.JSInt_methods.$tdiv(this.vertices.length, 3) - 1;
  },
  getMiddlePoint$2$bailout: function(state0, p1, p2, t1, pos1, pos2, t2, x, y) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$n(p1);
        pos1 = $.JSArray_methods.sublist$2(this.vertices, t1.$mul(p1, 3), $.$add$ns(t1.$mul(p1, 3), 3));
        t1 = $.getInterceptor$n(p2);
        pos2 = $.JSArray_methods.sublist$2(this.vertices, t1.$mul(p2, 3), $.$add$ns(t1.$mul(p2, 3), 3));
        if (0 >= pos1.length)
          throw $.ioore(0);
        t1 = pos1[0];
      case 2:
        state0 = 0;
        if (0 >= pos2.length)
          throw $.ioore(0);
        t2 = pos2[0];
      case 3:
        state0 = 0;
        t2 = $.$add$ns(t1, t2);
        if (typeof t2 !== "number")
          throw t2.$div();
        x = t2 / 2;
        if (1 >= pos1.length)
          throw $.ioore(1);
        t2 = pos1[1];
      case 4:
        state0 = 0;
        if (1 >= pos2.length)
          throw $.ioore(1);
        t1 = pos2[1];
      case 5:
        state0 = 0;
        t1 = $.$add$ns(t2, t1);
        if (typeof t1 !== "number")
          throw t1.$div();
        y = t1 / 2;
        if (2 >= pos1.length)
          throw $.ioore(2);
        t1 = pos1[2];
      case 6:
        state0 = 0;
        if (2 >= pos2.length)
          throw $.ioore(2);
        t2 = pos2[2];
      case 7:
        state0 = 0;
        t2 = $.$add$ns(t1, t2);
        if (typeof t2 !== "number")
          throw t2.$div();
        this.v$3(x, y, t2 / 2);
        return $.JSInt_methods.$tdiv(this.vertices.length, 3) - 1;
    }
  },
  Icosahedron$1: function(subdivisions) {
    var tempMeshData, t, t1, i, tempMeshData2, l, i0, face, t2, a, b, c, index;
    tempMeshData = $.MeshData2$empty();
    t = (1 + $.sqrt(5)) / 2;
    this.v$3(-1, t, 0);
    this.v$3(1, t, 0);
    t1 = -t;
    this.v$3(-1, t1, 0);
    this.v$3(1, t1, 0);
    this.v$3(0, -1, t);
    this.v$3(0, 1, t);
    this.v$3(0, -1, t1);
    this.v$3(0, 1, t1);
    this.v$3(t, 0, -1);
    this.v$3(t, 0, 1);
    this.v$3(t1, 0, -1);
    this.v$3(t1, 0, 1);
    this.f3$4(0, 11, 5, tempMeshData);
    this.f3$4(0, 5, 1, tempMeshData);
    this.f3$4(0, 1, 7, tempMeshData);
    this.f3$4(0, 7, 10, tempMeshData);
    this.f3$4(0, 10, 11, tempMeshData);
    this.f3$4(1, 5, 9, tempMeshData);
    this.f3$4(5, 11, 4, tempMeshData);
    this.f3$4(11, 10, 2, tempMeshData);
    this.f3$4(10, 7, 6, tempMeshData);
    this.f3$4(7, 1, 8, tempMeshData);
    this.f3$4(3, 9, 4, tempMeshData);
    this.f3$4(3, 4, 2, tempMeshData);
    this.f3$4(3, 2, 6, tempMeshData);
    this.f3$4(3, 6, 8, tempMeshData);
    this.f3$4(3, 8, 9, tempMeshData);
    this.f3$4(4, 9, 5, tempMeshData);
    this.f3$4(2, 4, 11, tempMeshData);
    this.f3$4(6, 2, 10, tempMeshData);
    this.f3$4(8, 6, 7, tempMeshData);
    this.f3$4(9, 8, 1, tempMeshData);
    for (i = 0; i < subdivisions; ++i) {
      tempMeshData2 = $.MeshData2$empty();
      for (l = $.JSInt_methods.$tdiv(tempMeshData.vertexIndices.length, 3), i0 = 0; i0 < l; ++i0) {
        t1 = i0 * 3;
        face = $.JSArray_methods.sublist$2(tempMeshData.vertexIndices, t1, t1 + 3);
        t1 = face.length;
        if (0 >= t1)
          throw $.ioore(0);
        t2 = face[0];
        if (1 >= t1)
          throw $.ioore(1);
        a = this.getMiddlePoint$2(t2, face[1]);
        t2 = face.length;
        if (1 >= t2)
          throw $.ioore(1);
        t1 = face[1];
        if (2 >= t2)
          throw $.ioore(2);
        b = this.getMiddlePoint$2(t1, face[2]);
        if (2 >= face.length)
          throw $.ioore(2);
        c = this.getMiddlePoint$2(face[2], face[0]);
        if (0 >= face.length)
          throw $.ioore(0);
        this.f3$4(face[0], a, c, tempMeshData2);
        if (1 >= face.length)
          throw $.ioore(1);
        this.f3$4(face[1], b, a, tempMeshData2);
        if (2 >= face.length)
          throw $.ioore(2);
        this.f3$4(face[2], c, b, tempMeshData2);
        this.f3$4(a, b, c, tempMeshData2);
      }
      tempMeshData.vertexIndices = tempMeshData2.vertexIndices;
      tempMeshData.textureCoords = tempMeshData2.textureCoords;
    }
    this.vertexIndices = tempMeshData.vertexIndices;
    this.textureCoords = tempMeshData.textureCoords;
    tempMeshData = $.MeshData2$empty();
    for (l = this.vertexIndices.length, i = 0; i < l; ++i) {
      t1 = this.vertexIndices;
      if (i >= t1.length)
        throw $.ioore(i);
      index = t1[i];
      t1 = $.getInterceptor$n(index);
      $.JSArray_methods.addAll$1(tempMeshData.vertices, $.JSArray_methods.sublist$2(this.vertices, t1.$mul(index, 3), $.$add$ns(t1.$mul(index, 3), 3)));
      tempMeshData.vertexIndices.push(i);
    }
    this.vertexIndices = tempMeshData.vertexIndices;
    this.vertices = tempMeshData.vertices;
  }
},

Spatial: {"": "Object;",
  getPos$0: function() {
    var t1, t2;
    t1 = this.pos;
    t2 = this.matrix;
    t1.$indexSet(t1, 0, t2.$index(t2, $.Matrix4_POSX));
    t1.$indexSet(t1, 1, t2.$index(t2, $.Matrix4_POSY));
    t1.$indexSet(t1, 2, t2.$index(t2, $.Matrix4_POSZ));
    return t1;
  },
  getUp$0: function() {
    var t1, t2;
    t1 = this.up;
    t2 = this.matrix;
    t1.$indexSet(t1, 0, t2.$index(t2, $.Matrix4_UPX));
    t1.$indexSet(t1, 1, t2.$index(t2, $.Matrix4_UPY));
    t1.$indexSet(t1, 2, t2.$index(t2, $.Matrix4_UPZ));
    return t1;
  },
  setPosFromVec$1: function(vector) {
    var t1 = this.matrix;
    t1.$indexSet(t1, $.Matrix4_POSX, vector.$index(vector, 0));
    t1.$indexSet(t1, $.Matrix4_POSY, vector.$index(vector, 1));
    t1.$indexSet(t1, $.Matrix4_POSZ, vector.$index(vector, 2));
  },
  rotX$1: function(angle) {
    this.matrix.rotateX$1(angle);
  },
  rotZ$1: function(angle) {
    this.matrix.rotateZ$1(angle);
  },
  lookAt$2: function(target, up) {
    this.matrix.lookAt_alt$3(this.getPos$0(), target, up);
  },
  lookAt$1: function(target) {
    return this.lookAt$2(target, null);
  }
},

TextureCache: {"": "Object;textureCache,raysWebGL,gl",
  TextureCache$1: function(raysWebGL) {
    this.gl = this.raysWebGL.gl;
  }
},

TextureWrapper: {"": "Object;"},

Utils: {"": "Object;raysWebGL,gl,textureCache",
  createTorusKnot$8$heightScale$p$q$radius$segmentsR$segmentsT$texture$tube: function(heightScale, p, q, radius, segmentsR, segmentsT, texture, tube) {
    return $.createTorusKnotInternal(heightScale, p, q, radius, segmentsR, segmentsT, texture, tube);
  },
  createTorusKnot$2$segmentsR$segmentsT: function(segmentsR, segmentsT) {
    return this.createTorusKnot$8$heightScale$p$q$radius$segmentsR$segmentsT$texture$tube(1, 2, 3, 20, segmentsR, segmentsT, null, 4);
  },
  Utils$1: function(raysWebGL) {
    var t1 = this.raysWebGL;
    this.gl = t1.getRenderingContext$0();
    this.textureCache = t1.getTextureCache$0();
  }
},

Vector: {"": "Object;array,m,v",
  get$x: function(_) {
    var t1 = this.array;
    if (0 >= t1.length)
      throw $.ioore(0);
    return t1[0];
  },
  get$y: function(_) {
    var t1 = this.array;
    if (1 >= t1.length)
      throw $.ioore(1);
    return t1[1];
  },
  $index: function(_, index) {
    var t1 = this.array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    var t1 = this.array;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  normalize$0: function() {
    var t1, t2, x, y, z, len;
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    x = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    y = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    z = t1[2];
    len = Math.sqrt($.checkNum(x * x + y * y + z * z));
    if (len === 0) {
      t2 = t1.length;
      if (0 >= t2)
        throw $.ioore(0);
      t1[0] = 0;
      if (1 >= t2)
        throw $.ioore(1);
      t1[1] = 0;
      if (2 >= t2)
        throw $.ioore(2);
      t1[2] = 0;
    } else {
      t2 = t1.length;
      if (len === 1) {
        if (0 >= t2)
          throw $.ioore(0);
        t1[0] = x;
        if (1 >= t2)
          throw $.ioore(1);
        t1[1] = y;
        if (2 >= t2)
          throw $.ioore(2);
        t1[2] = z;
      } else {
        len = 1 / len;
        if (0 >= t2)
          throw $.ioore(0);
        t1[0] = x * len;
        if (1 >= t2)
          throw $.ioore(1);
        t1[1] = y * len;
        if (2 >= t2)
          throw $.ioore(2);
        t1[2] = z * len;
      }
    }
  },
  direction$2: function(from, to) {
    var x, y, z, len, t1, t2;
    x = from.$index(from, 0) - to.$index(to, 0);
    y = from.$index(from, 1) - to.$index(to, 1);
    z = from.$index(from, 2) - to.$index(to, 2);
    len = $.sqrt(x * x + y * y + z * z);
    t1 = this.array;
    if (len === 0) {
      t2 = t1.length;
      if (0 >= t2)
        throw $.ioore(0);
      t1[0] = 0;
      if (1 >= t2)
        throw $.ioore(1);
      t1[1] = 0;
      if (2 >= t2)
        throw $.ioore(2);
      t1[2] = 0;
    } else {
      len = 1 / len;
      t2 = t1.length;
      if (0 >= t2)
        throw $.ioore(0);
      t1[0] = x * len;
      if (1 >= t2)
        throw $.ioore(1);
      t1[1] = y * len;
      if (2 >= t2)
        throw $.ioore(2);
      t1[2] = z * len;
    }
  },
  cross$2: function(vec1, vec2) {
    var t1, t2, x, y, z, x2, y2, z2;
    vec1.$index;
    t1 = vec1.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    x = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    y = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    z = t1[2];
    t1 = vec2.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    x2 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    y2 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    z2 = t1[2];
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = y * z2 - z * y2;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = z * x2 - x * z2;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = x * y2 - y * x2;
    return this;
  },
  lerp$2: function(v, lerp) {
    var t1, t2, t3, t4;
    t1 = this.array;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = t1[0];
    t3 = v.$index(v, 0);
    t4 = t1.length;
    if (0 >= t4)
      throw $.ioore(0);
    t1[0] = t2 + lerp * (t3 - t1[0]);
    if (1 >= t4)
      throw $.ioore(1);
    t4 = t1[1];
    t3 = v.$index(v, 1);
    t2 = t1.length;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t4 + lerp * (t3 - t1[1]);
    if (2 >= t2)
      throw $.ioore(2);
    t2 = t1[2];
    t3 = v.$index(v, 2);
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2] = t2 + lerp * (t3 - t1[2]);
  },
  toString$0: function(_) {
    return $.Float32List_methods.toString$0(this.array);
  },
  Vector$3: function(x, y, z) {
    var t1, t2;
    t1 = this.array;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = x;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = y;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = z;
  }
},

Camera$: function() {
  return new $.Camera($.Matrix4$(), $.Matrix4$(), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0));
},

setUpCapture: function() {
  $.HtmlDocument_methods.get$onKeyDown($.document()).listen$1(new $.setUpCapture_closure());
  $.HtmlDocument_methods.get$onKeyUp($.document()).listen$1(new $.setUpCapture_closure0());
  $.HtmlDocument_methods.get$onMouseMove($.document()).listen$1(new $.setUpCapture_closure1());
  $.HtmlDocument_methods.get$onMouseDown($.document()).listen$1(new $.setUpCapture_closure2());
  $.HtmlDocument_methods.get$onContextMenu($.document()).listen$1(new $.setUpCapture_closure3());
  $.HtmlDocument_methods.get$onMouseUp($.document()).listen$1(new $.setUpCapture_closure4());
},

loadObj: function(url) {
  var c, hr;
  c = $.Completer_Completer();
  hr = $.HttpRequest_HttpRequest();
  $.HttpRequest_methods.open$2(hr, "GET", url);
  $.HttpRequest_methods.get$onLoadEnd(hr).listen$1(new $.loadObj_closure(c, hr));
  hr.send("");
  return c.future;
},

doLoadObj: function(text) {
  var endResult, rawData, facemap, groups, currentGroup, t1, index, t2, line, array, i, f, vtx, tex, nor, t3, t4, x, y, z, index0;
  endResult = $.MeshData2$empty();
  rawData = $.MeshData2$empty();
  facemap = $.Map_Map();
  groups = $.Map_Map();
  currentGroup = $.List_List$from([-1, 0], true);
  groups.$indexSet(groups, "_unnamed", currentGroup);
  for (t1 = $.JSArray_methods.get$iterator($.split$1$s(text, "\n")), index = 0; t1.moveNext$0();) {
    t2 = $.replaceAll$2$s(t1._liblib$_current, "[ \t]+", " ");
    line = $.stringReplaceFirstUnchecked(t2, "ss*$", "");
    t2 = line.length;
    if (t2 !== 0) {
      if (0 >= t2)
        throw $.ioore(0);
      t2 = line[0] === "#";
    } else
      t2 = true;
    if (t2)
      continue;
    array = line.split(" ");
    if (0 >= array.length)
      throw $.ioore(0);
    if ($.$eq(array[0], "g")) {
      currentGroup = [endResult.vertexIndices.length, 0];
      if (1 >= array.length)
        throw $.ioore(1);
      groups.$indexSet(groups, array[1], currentGroup);
    } else {
      if (0 >= array.length)
        throw $.ioore(0);
      if ($.$eq(array[0], "v")) {
        t2 = rawData.vertices;
        if (1 >= array.length)
          throw $.ioore(1);
        t2.push($.Primitives_parseDouble(array[1], null));
        t2 = rawData.vertices;
        if (2 >= array.length)
          throw $.ioore(2);
        t2.push($.Primitives_parseDouble(array[2], null));
        t2 = rawData.vertices;
        if (3 >= array.length)
          throw $.ioore(3);
        t2.push($.Primitives_parseDouble(array[3], null));
      } else {
        if (0 >= array.length)
          throw $.ioore(0);
        if ($.$eq(array[0], "vt")) {
          t2 = rawData.textureCoords;
          if (1 >= array.length)
            throw $.ioore(1);
          t2.push($.Primitives_parseDouble(array[1], null));
          t2 = rawData.textureCoords;
          if (2 >= array.length)
            throw $.ioore(2);
          t2.push($.Primitives_parseDouble(array[2], null));
        } else {
          if (0 >= array.length)
            throw $.ioore(0);
          if ($.$eq(array[0], "vn")) {
            t2 = rawData.normals;
            if (1 >= array.length)
              throw $.ioore(1);
            t2.push($.Primitives_parseDouble(array[1], null));
            t2 = rawData.normals;
            if (2 >= array.length)
              throw $.ioore(2);
            t2.push($.Primitives_parseDouble(array[2], null));
            t2 = rawData.normals;
            if (3 >= array.length)
              throw $.ioore(3);
            t2.push($.Primitives_parseDouble(array[3], null));
          } else {
            if (0 >= array.length)
              throw $.ioore(0);
            if ($.$eq(array[0], "f")) {
              if (array.length !== 4) {
                $.Primitives_printString($.JSString_methods.$add($.JSString_methods.$add("*** Error: face '", line), "' not handled"));
                continue;
              }
              for (i = 1; i < 4; ++i) {
                if (i >= array.length)
                  throw $.ioore(i);
                if (!facemap.containsKey$1(array[i])) {
                  if (i >= array.length)
                    throw $.ioore(i);
                  f = $.split$1$s(array[i], "/");
                  t2 = f.length;
                  if (t2 === 1) {
                    if (0 >= t2)
                      throw $.ioore(0);
                    vtx = $.$sub$n($.Primitives_parseInt(f[0], null, null), 1);
                    tex = vtx;
                    nor = tex;
                  } else if (t2 === 3) {
                    if (0 >= t2)
                      throw $.ioore(0);
                    vtx = $.$sub$n($.Primitives_parseInt(f[0], null, null), 1);
                    if (1 >= f.length)
                      throw $.ioore(1);
                    tex = $.$sub$n($.Primitives_parseInt(f[1], null, null), 1);
                    if (2 >= f.length)
                      throw $.ioore(2);
                    nor = $.$sub$n($.Primitives_parseInt(f[2], null, null), 1);
                  } else {
                    if (i >= array.length)
                      throw $.ioore(i);
                    $.Primitives_printString($.JSString_methods.$add($.JSString_methods.$add("*** Error: did not understand face '", array[i]), "'"));
                    return;
                  }
                  t2 = $.getInterceptor$n(vtx);
                  t3 = $.$add$ns(t2.$mul(vtx, 3), 2);
                  t4 = rawData.vertices;
                  if ($.$lt$n(t3, t4.length)) {
                    t3 = t2.$mul(vtx, 3);
                    if (t3 >>> 0 !== t3 || t3 >= t4.length)
                      throw $.ioore(t3);
                    x = t4[t3];
                    t3 = rawData.vertices;
                    t4 = $.$add$ns(t2.$mul(vtx, 3), 1);
                    if (t4 >>> 0 !== t4 || t4 >= t3.length)
                      throw $.ioore(t4);
                    y = t3[t4];
                    t4 = rawData.vertices;
                    t2 = $.$add$ns(t2.$mul(vtx, 3), 2);
                    if (t2 >>> 0 !== t2 || t2 >= t4.length)
                      throw $.ioore(t2);
                    z = t4[t2];
                  } else {
                    x = 0;
                    y = 0;
                    z = 0;
                  }
                  endResult.vertices.push(x);
                  endResult.vertices.push(y);
                  endResult.vertices.push(z);
                  t2 = $.getInterceptor$n(tex);
                  t3 = $.$add$ns(t2.$mul(tex, 2), 1);
                  t4 = rawData.textureCoords;
                  if ($.$lt$n(t3, t4.length)) {
                    t3 = t2.$mul(tex, 2);
                    if (t3 >>> 0 !== t3 || t3 >= t4.length)
                      throw $.ioore(t3);
                    x = t4[t3];
                    t3 = rawData.textureCoords;
                    t2 = $.$add$ns(t2.$mul(tex, 2), 1);
                    if (t2 >>> 0 !== t2 || t2 >= t3.length)
                      throw $.ioore(t2);
                    y = t3[t2];
                  } else {
                    x = 0;
                    y = 0;
                  }
                  endResult.textureCoords.push(x);
                  endResult.textureCoords.push(y);
                  t2 = $.getInterceptor$n(nor);
                  t3 = $.$add$ns(t2.$mul(nor, 3), 2);
                  t4 = rawData.normals;
                  if ($.$lt$n(t3, t4.length)) {
                    t3 = t2.$mul(nor, 3);
                    if (t3 >>> 0 !== t3 || t3 >= t4.length)
                      throw $.ioore(t3);
                    x = t4[t3];
                    t3 = rawData.normals;
                    t4 = $.$add$ns(t2.$mul(nor, 3), 1);
                    if (t4 >>> 0 !== t4 || t4 >= t3.length)
                      throw $.ioore(t4);
                    y = t3[t4];
                    t4 = rawData.normals;
                    t2 = $.$add$ns(t2.$mul(nor, 3), 2);
                    if (t2 >>> 0 !== t2 || t2 >= t4.length)
                      throw $.ioore(t2);
                    z = t4[t2];
                  } else {
                    x = 0;
                    y = 0;
                    z = 1;
                  }
                  endResult.normals.push(x);
                  endResult.normals.push(y);
                  endResult.normals.push(z);
                  if (i >= array.length)
                    throw $.ioore(i);
                  index0 = index + 1;
                  facemap.$indexSet(facemap, array[i], index);
                  index = index0;
                }
                t2 = endResult.vertexIndices;
                if (i >= array.length)
                  throw $.ioore(i);
                t2.push(facemap.$index(facemap, array[i]));
                if (1 >= currentGroup.length)
                  throw $.ioore(1);
                t2 = $.$add$ns(currentGroup[1], 1);
                if (1 >= currentGroup.length)
                  throw $.ioore(1);
                currentGroup[1] = t2;
              }
            }
          }
        }
      }
    }
  }
  return endResult;
},

Matrix4$: function() {
  var t1 = new $.Matrix4($.Float32List_Float32List(16), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0));
  t1.Matrix4$0();
  return t1;
},

Mesh$: function(meshData) {
  var t1 = new $.Mesh(null, null, null, null, null, null, "", "", true, false, $.List_List(null), $.Matrix4$(), $.Matrix4$(), $.Matrix4$(), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0));
  t1.Node$1(null);
  t1.Mesh$1(meshData);
  return t1;
},

MeshData$: function(texture, textureCoords, vertexIndices, vertices) {
  return new $.MeshData(vertices, textureCoords, vertexIndices, texture);
},

MeshData2$empty: function() {
  var t1 = new $.MeshData2(null, null, null, null, null);
  t1.MeshData2$empty$0();
  return t1;
},

Node$: function(child) {
  var t1 = new $.Node("", "", true, false, $.List_List(null), $.Matrix4$(), $.Matrix4$(), $.Matrix4$(), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0));
  t1.Node$1(child);
  return t1;
},

ProgramNormal$: function(raysWebGL, shaderObject) {
  var t1 = new $.ProgramNormal(raysWebGL, shaderObject, null, null, null, null, null, null, null, null, null, $.Matrix4$(), $.List_List(null), $.List_List(null), 0);
  t1.ProgramNormal$2(raysWebGL, shaderObject);
  return t1;
},

ProgramPointSprites$: function(raysWebGL) {
  var t1 = new $.ProgramPointSprites(raysWebGL, null, null, null, null, null, null, null, $.Matrix4$(), $.List_List(null));
  t1.ProgramPointSprites$1(raysWebGL);
  return t1;
},

RaysWebGL$: function(canvasID, transparent) {
  var t1 = new $.RaysWebGL(null, $.Map_Map(), $.Map_Map(), null, null, null, null, null, null, null, $.Matrix4$(), 0, 0, 0);
  t1.RaysWebGL$2(canvasID, transparent);
  return t1;
},

ShaderObject$: function(raysWebGL) {
  return new $.ShaderObject(raysWebGL, null, null, null, null, null, null, null, null, null);
},

ShaderLib$: function(raysWebGL) {
  return new $.ShaderLib(raysWebGL);
},

Uniform$: function(uniformLocation, gl) {
  return new $.Uniform(uniformLocation, gl);
},

ShaderUtils$: function(gl) {
  return new $.ShaderUtils(gl);
},

Icosahedron$: function(subdivisions) {
  var t1 = new $.Icosahedron(null, null, null, null, null);
  t1.MeshData2$empty$0();
  t1.Icosahedron$1(subdivisions);
  return t1;
},

createTorusKnotInternal: function(heightScale, p, q, radius, segmentsR, segmentsT, texture, tube) {
  var vertices, uvs, indices, tang, n, bitan, grid, t1, t2, t3, i, u, t4, t5, j, v, cx, cy, t6, t7, t8, t9, t10, t11, i0, ip, j0, jp, a, b, c, d, uva, uvb, uvc, uvd;
  vertices = $.List_List(null);
  uvs = $.List_List(null);
  $.List_List(null);
  indices = $.List_List(null);
  tang = $.Vector$(0, 0, 0);
  n = $.Vector$(0, 0, 0);
  bitan = $.Vector$(0, 0, 0);
  grid = $.List_List(segmentsR);
  for (t1 = n.array, t2 = bitan.array, t3 = tang.array, i = 0; i < segmentsR; ++i) {
    grid[i] = $.List_List(segmentsT);
    u = i / segmentsR * 2 * p * 3.141592653589793;
    $.getTorusKnotPos(u, q, p, radius, heightScale, $.get$p1());
    $.getTorusKnotPos(u + 0.02, q, p, radius, heightScale, $.get$p2());
    t4 = $.get$p2().array;
    if (0 >= t4.length)
      throw $.ioore(0);
    t4 = t4[0];
    t5 = $.get$p1().array;
    if (0 >= t5.length)
      throw $.ioore(0);
    t5 = t5[0];
    if (0 >= t3.length)
      throw $.ioore(0);
    t3[0] = t4 - t5;
    t5 = $.get$p2().array;
    if (1 >= t5.length)
      throw $.ioore(1);
    t5 = t5[1];
    t4 = $.get$p1().array;
    if (1 >= t4.length)
      throw $.ioore(1);
    t4 = t4[1];
    if (1 >= t3.length)
      throw $.ioore(1);
    t3[1] = t5 - t4;
    t4 = $.get$p2().array;
    if (2 >= t4.length)
      throw $.ioore(2);
    t4 = t4[2];
    t5 = $.get$p1().array;
    if (2 >= t5.length)
      throw $.ioore(2);
    t5 = t5[2];
    if (2 >= t3.length)
      throw $.ioore(2);
    t3[2] = t4 - t5;
    t5 = $.get$p2().array;
    if (0 >= t5.length)
      throw $.ioore(0);
    t5 = t5[0];
    t4 = $.get$p1().array;
    if (0 >= t4.length)
      throw $.ioore(0);
    t4 = t4[0];
    if (0 >= t1.length)
      throw $.ioore(0);
    t1[0] = t5 + t4;
    t4 = $.get$p2().array;
    if (1 >= t4.length)
      throw $.ioore(1);
    t4 = t4[1];
    t5 = $.get$p1().array;
    if (1 >= t5.length)
      throw $.ioore(1);
    t5 = t5[1];
    if (1 >= t1.length)
      throw $.ioore(1);
    t1[1] = t4 + t5;
    t5 = $.get$p2().array;
    if (2 >= t5.length)
      throw $.ioore(2);
    t5 = t5[2];
    t4 = $.get$p1().array;
    if (2 >= t4.length)
      throw $.ioore(2);
    t4 = t4[2];
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2] = t5 + t4;
    bitan.cross$2(tang, n).normalize$0();
    n.cross$2(bitan, tang).normalize$0();
    for (j = 0; j < segmentsT; ++j) {
      v = j / segmentsT * 2 * 3.141592653589793;
      cx = tube * Math.cos(v);
      cy = tube * Math.sin(v);
      t4 = $.get$p1().array;
      if (0 >= t4.length)
        throw $.ioore(0);
      t4 = t4[0];
      if (0 >= t1.length)
        throw $.ioore(0);
      t5 = t1[0];
      if (0 >= t2.length)
        throw $.ioore(0);
      t6 = t2[0];
      t7 = $.get$p1().array;
      if (1 >= t7.length)
        throw $.ioore(1);
      t7 = t7[1];
      if (1 >= t1.length)
        throw $.ioore(1);
      t8 = t1[1];
      if (1 >= t2.length)
        throw $.ioore(1);
      t9 = t2[1];
      t10 = $.get$p1().array;
      if (2 >= t10.length)
        throw $.ioore(2);
      t10 = t10[2];
      if (2 >= t1.length)
        throw $.ioore(2);
      t11 = t1[2];
      if (2 >= t2.length)
        throw $.ioore(2);
      $.JSArray_methods.addAll$1(vertices, [t4 + cx * t5 + cy * t6, t7 + cx * t8 + cy * t9, t10 + cx * t11 + cy * t2[2]]);
      t11 = grid[i];
      t10 = $.JSInt_methods.$tdiv(vertices.length, 3);
      if (j >= t11.length)
        throw $.ioore(j);
      t11[j] = t10 - 1;
    }
  }
  for (i = 0; i < segmentsR; i = i0)
    for (i0 = i + 1, t1 = i / segmentsR, t2 = i0 / segmentsR, j = 0; j < segmentsT; j = j0) {
      ip = $.JSInt_methods.$mod(i0, segmentsR);
      j0 = j + 1;
      jp = $.JSInt_methods.$mod(j0, segmentsT);
      t3 = grid[i];
      t4 = t3.length;
      if (j >= t4)
        throw $.ioore(j);
      a = t3[j];
      if (ip < 0 || ip >= segmentsR)
        throw $.ioore(ip);
      t5 = grid[ip];
      t6 = t5.length;
      if (j >= t6)
        throw $.ioore(j);
      b = t5[j];
      if (jp < 0 || jp >= t6)
        throw $.ioore(jp);
      c = t5[jp];
      if (jp >= t4)
        throw $.ioore(jp);
      d = t3[jp];
      t3 = j / segmentsT;
      uva = [t1, t3];
      uvb = [t2, t3];
      t3 = j0 / segmentsT;
      uvc = [t2, t3];
      uvd = [t1, t3];
      if (0 >= uva.length)
        throw $.ioore(0);
      uva[0] = 0;
      if (0 >= uvb.length)
        throw $.ioore(0);
      uvb[0] = 1;
      if (0 >= uvc.length)
        throw $.ioore(0);
      uvc[0] = 1;
      if (0 >= uvd.length)
        throw $.ioore(0);
      uvd[0] = 0;
      $.JSArray_methods.addAll$1(indices, [a, b, c]);
      $.JSArray_methods.addAll$1(indices, [a, c, d]);
      $.JSArray_methods.addAll$1(uvs, uva);
      $.JSArray_methods.addAll$1(uvs, uvb);
      $.JSArray_methods.addAll$1(uvs, uvc);
      $.JSArray_methods.addAll$1(uvs, uvd);
      $.JSArray_methods.addAll$1(uvs, uvc);
      $.JSArray_methods.addAll$1(uvs, uvb);
    }
  t1 = $.Float32List_Float32List$fromList(vertices);
  return $.MeshData$(texture, $.Float32List_Float32List$fromList(uvs), $.Uint16List_Uint16List$fromList(indices), t1);
},

getTorusKnotPos: function(u, in_q, in_p, radius, heightScale, vec) {
  var cu, su, quOverP, t1, t2, t3;
  cu = Math.cos($.checkNum(u));
  su = Math.sin($.checkNum(u));
  quOverP = in_q / in_p * u;
  t1 = radius * (2 + Math.cos($.checkNum(quOverP)));
  t2 = vec.array;
  t3 = t2.length;
  if (0 >= t3)
    throw $.ioore(0);
  t2[0] = t1 * 0.5 * cu;
  if (1 >= t3)
    throw $.ioore(1);
  t2[1] = t1 * su * 0.5;
  t1 = Math.sin($.checkNum(quOverP));
  if (2 >= t2.length)
    throw $.ioore(2);
  t2[2] = heightScale * radius * t1 * 0.5;
  return vec;
},

TextureCache$: function(raysWebGL) {
  var t1 = new $.TextureCache($.Map_Map(), raysWebGL, null);
  t1.TextureCache$1(raysWebGL);
  return t1;
},

Utils$: function(raysWebGL) {
  var t1 = new $.Utils(raysWebGL, null, null);
  t1.Utils$1(raysWebGL);
  return t1;
},

Vector$: function(x, y, z) {
  var t1 = new $.Vector($.Float32List_Float32List(3), null, $.List_List(4));
  t1.Vector$3(x, y, z);
  return t1;
}}],
["testgl", "heise.dart", , {
TorusKnotCamera: {"": "PhysicsObject;camera,pnvc,activeNode,fadeFactor,p1,p2,cameraPos,time,tween,switched,switchCount",
  animate$1: function(elapsed) {
    var t1, t2, t3, t4, amp;
    t1 = $.music;
    t2 = $.getInterceptor$x(t1);
    if (t2.get$ended(t1) !== true)
      this.time = t2.get$currentTime(t1);
    else {
      t3 = this.time;
      if (typeof elapsed !== "number")
        throw elapsed.$div();
      if (t3 == null)
        throw t3.$add();
      this.time = t3 + elapsed / 1000;
    }
    t3 = this.time;
    if (t3 == null)
      throw t3.$lt();
    if (t3 < 28.32) {
      if (t3 > 2) {
        $.torus.enabled = true;
        $.bigBall.enabled = true;
      }
      t1 = this.cameraPos;
      t2 = $.get$cameraIntroStartPoint();
      t3 = t1.array;
      t4 = t2.$index(t2, 0);
      if (0 >= t3.length)
        throw $.ioore(0);
      t3[0] = t4;
      t4 = t2.$index(t2, 1);
      if (1 >= t3.length)
        throw $.ioore(1);
      t3[1] = t4;
      t2 = t2.$index(t2, 2);
      if (2 >= t3.length)
        throw $.ioore(2);
      t3[2] = t2;
      t2 = $.get$cameraIntroEndPoint();
      t3 = this.time;
      if (t3 == null)
        throw t3.$div();
      t1.lerp$2(t2, t3 / 30);
      t3 = this.camera;
      t3.setPosFromVec$1(t1);
      t1 = $.get$cameraIntroEndPoint();
      t3.lookAt$2;
      t3.matrix.lookAt_alt$3(t3.getPos$0(), t1, null);
    } else if (t2.get$ended(t1) === true)
      $.document().querySelector("#topLeftDiv").textContent = "Music: Life's things by Mindthings. Browser demo for c't competition 2013 by ray@systaro.de. Inspiration from clicktorelease.com.";
    else {
      t1 = $.musicSlowBegin;
      if (t3 > t1 && t3 < $.musicSlowEnd)
        this.tween = 3.4399999999999995 + Math.sin($.checkNum((t3 - t1) / ($.musicSlowEnd - t1) * 3.141592653589793 / 2)) * 3;
      else {
        t1 = $.musicMuteBegin;
        if (t3 > t1 && t3 < $.musicMuteEnd)
          this.tween = 3.4399999999999995 + Math.sin($.checkNum((t3 - t1) / ($.musicMuteEnd - t1) * 3.141592653589793 / 2)) * 3;
      }
      t1 = this.time;
      if (t1 == null)
        throw t1.$gt();
      if (t1 > 180) {
        t2 = this.fadeFactor;
        $.uniform1f$2$x(t2.gl, t2.uniformLocation, (t1 - 180) / 12);
      }
      this.setObjectPosAlongTorus$2(t3 / 3 - this.tween, this.camera);
      $.bigBall.enabled = false;
    }
    t1 = this.time;
    if (t1 == null)
      throw t1.$div();
    amp = Math.sin($.checkNum(t1 / 6 - 1.5));
    if (amp > 0.9 && $.get$ended$x($.music) !== true) {
      if (!this.switched) {
        t1 = this.activeNode;
        t2 = $.littleBall;
        t3 = $.ctLogo;
        if (t1 == null ? t2 == null : t1 === t2) {
          this.activeNode = t3;
          t2.enabled = false;
        } else {
          this.activeNode = t2;
          t3.enabled = false;
        }
        this.activeNode.enabled = true;
        this.switched = true;
        this.switchCount = this.switchCount + 1;
      }
    } else
      this.switched = false;
    if (this.switchCount >= 5) {
      $.littleBall.enabled = false;
      $.ctLogo.enabled = false;
    }
    t1 = this.time;
    if (t1 == null)
      throw t1.$div();
    this.setObjectPosAlongTorus$2(t1 / 3 + amp + 1.1 - this.tween, this.activeNode);
    t1 = this.activeNode.children;
    if (t1.length !== 0) {
      t1 = $.JSArray_methods.get$first(t1);
      if (typeof elapsed !== "number")
        throw elapsed.$div();
	  if( t1 != null)
        t1.rotZ$1(elapsed / 1000);
    }
  },
  setObjectPosAlongTorus$2: function(pos, node) {
    var t1, t2;
    t1 = this.p1;
    $.getTorusKnotPos(pos, $.q, $.p, $.radius, 1, t1);
    t2 = this.p2;
    $.getTorusKnotPos(pos + 0.3, $.q, $.p, $.radius, 1, t2);
    node.setPosFromVec$1(t1);
    t1 = this.camera;
    if (node == null ? t1 == null : node === t1)
      node.lookAt$1(t2);
    else
      node.lookAt$2(t2, t1.getUp$0());
  },
  TorusKnotCamera$2: function(camera, pnvc) {
    var t1;
    this.activeNode = $.ctLogo;
    this.tween = 3.4399999999999995;
    t1 = this.pnvc;
    this.fadeFactor = t1.getUniform$1(t1, "fadeFactor");
  }
},

main_closure: {"": "Closure;pnvc_0",
  call$1: function(md) {
    var ctLogoMesh, t1, so, pnc_novertexmovement, tkc;
    ctLogoMesh = md.createMesh$0();
    ctLogoMesh.rotX$1(1.5707963267948966);
    ctLogoMesh.rotZ$1(3.141592653589793);
    t1 = ctLogoMesh.matrix;
    t1.scale$1(t1, 0.25);
    $.ctLogo = $.Node$(ctLogoMesh);
    t1 = $.ctLogo;
    t1.enabled = false;
    t1.invert = true;
    so = $.raysWebGL.getShaderLib$0().getPerlinNoiseColorShader$0();
    so.vertexShader = $.replaceAll$2$s(so.vertexShader, "+ f * normal", "");
    pnc_novertexmovement = so.createProgram$1(so, "pnc_novertexmovement");
    pnc_novertexmovement.add$1(pnc_novertexmovement, $.ctLogo);
    tkc = $.TorusKnotCamera$($.camera, this.pnvc_0);
    $.raysWebGL.addPhysicsObject$2("tkc", tkc);
    $.get$onDoubleClick$x($.query("#webgl-canvas")).listen$1(new $.main__closure());
    $.play$0$x($.music);
    $.query("#topLeftDiv").textContent = "";
    $.raysWebGL.run$1(0);
  }
},

main__closure: {"": "Closure;",
  call$1: function(e) {
    $.query("#webgl-canvas").webkitRequestFullscreen();
  }
},

TorusKnotCamera$: function(camera, pnvc) {
  var t1 = new $.TorusKnotCamera(camera, pnvc, null, null, $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), $.Vector$(0, 0, 0), 0, null, false, 0);
  t1.TorusKnotCamera$2(camera, pnvc);
  return t1;
},

main: function() {
  var t1, pnvc, ico, pnc, pncBlack;
  $.raysWebGL = $.RaysWebGL$("#webgl-canvas", false);
  $.camera = $.raysWebGL.getCamera$0();
  $.music = $.query("#music");
  $.camera.setPosFromVec$1($.get$cameraIntroStartPoint());
  $.getTorusKnotPos(6, $.q, $.p, $.radius, 1, $.get$cameraIntroEndPoint());
  t1 = $.raysWebGL.getShaderLib$0().getPerlinNoiseVertexColorShader$0();
  pnvc = t1.createProgram$1(t1, "perlinNoiseVertexColors");
  $.torus = $.raysWebGL.getUtils$0().createTorusKnot$2$segmentsR$segmentsT(512, 64).createMesh$0();
  t1 = $.torus;
  t1.enabled = false;
  pnvc.add$1(pnvc, t1);
  ico = $.Icosahedron$(4);
  t1 = $.raysWebGL.getShaderLib$0().getPerlinNoiseColorShader$0();
  pnc = t1.createProgram$1(t1, "perlin_noise");
  $.littleBall = ico.createMesh$0();
  t1 = $.littleBall;
  t1.enabled = false;
  pnc.add$1(pnc, t1);
  t1 = $.raysWebGL.getShaderLib$0().getPerlinNoiseColorShader$1(true);
  pncBlack = t1.createProgram$1(t1, "perlin_noise_black");
  $.bigBall = ico.createMesh$0();
  t1 = $.bigBall.matrix;
  t1.scale$1(t1, 500);
  t1 = $.bigBall;
  t1.enabled = false;
  pncBlack.add$1(pncBlack, t1);
  $.loadObj("ct_logo.obj").then$1(new $.main_closure(pnvc));
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

$.IsolateNatives__processWorkerMessage$closure = new $.Closure$_processWorkerMessage($.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
$.Primitives__throwFormatException$closure = new $.Closure$_throwFormatException($.Primitives__throwFormatException, "Primitives__throwFormatException$closure");
$.wrapException$closure = new $.Closure$wrapException($.wrapException, "wrapException$closure");
$.DartError_toStringWrapper$closure = new $.Closure$toStringWrapper($.DartError_toStringWrapper, "DartError_toStringWrapper$closure");
$.invokeClosure$closure = new $.Closure$invokeClosure($.invokeClosure, "invokeClosure$closure");
$.typeNameInChrome$closure = new $.Closure$typeNameInChrome($.typeNameInChrome, "typeNameInChrome$closure");
$.typeNameInSafari$closure = new $.Closure$typeNameInSafari($.typeNameInSafari, "typeNameInSafari$closure");
$.typeNameInOpera$closure = new $.Closure$typeNameInOpera($.typeNameInOpera, "typeNameInOpera$closure");
$.typeNameInFirefox$closure = new $.Closure$typeNameInFirefox($.typeNameInFirefox, "typeNameInFirefox$closure");
$.typeNameInIE$closure = new $.Closure$typeNameInIE($.typeNameInIE, "typeNameInIE$closure");
$.constructorNameFallback$closure = new $.Closure$constructorNameFallback($.constructorNameFallback, "constructorNameFallback$closure");
$._asyncRunCallback$closure = new $.Closure$_asyncRunCallback($._asyncRunCallback, "_asyncRunCallback$closure");
$.main$closure = new $.Closure$main($.main, "main$closure");
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.C_CloseToken = new $.CloseToken();
$.C_JSUnknown = new $.JSUnknown();
$.Duration_0 = new $.Duration(0);
$.EventStreamProvider_contextmenu = new $.EventStreamProvider("contextmenu");
$.EventStreamProvider_dblclick = new $.EventStreamProvider("dblclick");
$.EventStreamProvider_dragstart = new $.EventStreamProvider("dragstart");
$.EventStreamProvider_keydown = new $.EventStreamProvider("keydown");
$.EventStreamProvider_keyup = new $.EventStreamProvider("keyup");
$.EventStreamProvider_loadend = new $.EventStreamProvider("loadend");
$.EventStreamProvider_mousedown = new $.EventStreamProvider("mousedown");
$.EventStreamProvider_mousemove = new $.EventStreamProvider("mousemove");
$.EventStreamProvider_mouseup = new $.EventStreamProvider("mouseup");
$.Float32List_methods = $.Float32List.prototype;
$.HtmlDocument_methods = $.HtmlDocument.prototype;
$.HttpRequest_methods = $.HttpRequest.prototype;
$.JSArray_methods = $.JSArray.prototype;
$.JSInt_methods = $.JSInt.prototype;
$.JSNumber_methods = $.JSNumber.prototype;
$.JSString_methods = $.JSString.prototype;
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.List_empty = Isolate.makeConstantList([]);
$.Window_methods = $.Window.prototype;
$.dispatchPropertyName = null;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$._getTypeNameOf = null;
$.interceptorsByTag = null;
$.leafTags = null;
$._callbacksAreEnqueued = false;
$.Expando__keyCount = 0;
$.clientX = 0;
$.clientY = 0;
$.mouseX = 0;
$.mouseY = 0;
$.Matrix4_UPX = 1;
$.Matrix4_UPY = 5;
$.Matrix4_UPZ = 9;
$.Matrix4_POSX = 12;
$.Matrix4_POSY = 13;
$.Matrix4_POSZ = 14;
$.RaysWebGL_globalGL = null;
$.musicSlowBegin = 95;
$.musicSlowEnd = 123;
$.musicMuteBegin = 159.2;
$.musicMuteEnd = 161.72;
$.raysWebGL = null;
$.camera = null;
$.music = null;
$.torus = null;
$.littleBall = null;
$.bigBall = null;
$.ctLogo = null;
$.p = 2;
$.q = 3;
$.radius = 20;
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.activeTexture$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).activeTexture$1(receiver, a0);
};
$.attachShader$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).attachShader$2(receiver, a0, a1);
};
$.bindBuffer$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).bindBuffer$2(receiver, a0, a1);
};
$.bindTexture$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).bindTexture$2(receiver, a0, a1);
};
$.blendFunc$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).blendFunc$2(receiver, a0, a1);
};
$.bufferDataTyped$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).bufferDataTyped$3(receiver, a0, a1, a2);
};
$.clear$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).clear$1(receiver, a0);
};
$.clearColor$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).clearColor$4(receiver, a0, a1, a2, a3);
};
$.compileShader$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).compileShader$1(receiver, a0);
};
$.createBuffer$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createBuffer$0(receiver);
};
$.createProgram$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createProgram$0(receiver);
};
$.createShader$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).createShader$1(receiver, a0);
};
$.disableVertexAttribArray$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).disableVertexAttribArray$1(receiver, a0);
};
$.drawElements$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).drawElements$4(receiver, a0, a1, a2, a3);
};
$.enable$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).enable$1(receiver, a0);
};
$.enableVertexAttribArray$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).enableVertexAttribArray$1(receiver, a0);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.get$ended$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$ended(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$isNaN$n = function(receiver) {
  return $.getInterceptor$n(receiver).get$isNaN(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$keyCode$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$keyCode(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$onDoubleClick$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDoubleClick(receiver);
};
$.get$onDragStart$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onDragStart(receiver);
};
$.getAttribLocation$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getAttribLocation$2(receiver, a0, a1);
};
$.getContext$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getContext$1(receiver, a0);
};
$.getProgramInfoLog$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getProgramInfoLog$1(receiver, a0);
};
$.getProgramParameter$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getProgramParameter$2(receiver, a0, a1);
};
$.getShaderParameter$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getShaderParameter$2(receiver, a0, a1);
};
$.getUniformLocation$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getUniformLocation$2(receiver, a0, a1);
};
$.lineWidth$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).lineWidth$1(receiver, a0);
};
$.linkProgram$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).linkProgram$1(receiver, a0);
};
$.play$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).play$0(receiver);
};
$.preventDefault$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).preventDefault$0(receiver);
};
$.replaceAll$2$s = function(receiver, a0, a1) {
  return $.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
$.send$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).send$2(receiver, a0, a1);
};
$.set$height$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$height(receiver, value);
};
$.set$width$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$width(receiver, value);
};
$.shaderSource$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).shaderSource$2(receiver, a0, a1);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.trim$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).trim$0(receiver);
};
$.uniform1f$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).uniform1f$2(receiver, a0, a1);
};
$.uniform1i$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).uniform1i$2(receiver, a0, a1);
};
$.uniformMatrix4fv$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).uniformMatrix4fv$3(receiver, a0, a1, a2);
};
$.useProgram$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).useProgram$1(receiver, a0);
};
$.vertexAttribPointer$6$x = function(receiver, a0, a1, a2, a3, a4, a5) {
  return $.getInterceptor$x(receiver).vertexAttribPointer$6(receiver, a0, a1, a2, a3, a4, a5);
};
$.viewport$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).viewport$4(receiver, a0, a1, a2, a3);
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return $.Expando$(null);
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return $.List_List(null);
});
Isolate.$lazy($, "_stackTraceExpando", "_stackTraceExpando", "get$_stackTraceExpando", function() {
  return $.Expando$("asynchronous error");
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return $.Queue_Queue();
});
Isolate.$lazy($, "_current", "_Zone__current", "get$_Zone__current", function() {
  return $._DefaultZone$();
});
Isolate.$lazy($, "_toStringList", "ListMixin__toStringList", "get$ListMixin__toStringList", function() {
  return $.List_List(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return $.List_List(null);
});
Isolate.$lazy($, "currentlyPressedKeys", "currentlyPressedKeys", "get$currentlyPressedKeys", function() {
  return $.Map_Map();
});
Isolate.$lazy($, "currentlyPressedMouseButtons", "currentlyPressedMouseButtons", "get$currentlyPressedMouseButtons", function() {
  return $.Map_Map();
});
Isolate.$lazy($, "p1", "p1", "get$p1", function() {
  return $.Vector$(0, 0, 0);
});
Isolate.$lazy($, "p2", "p2", "get$p2", function() {
  return $.Vector$(0, 0, 0);
});
Isolate.$lazy($, "cameraIntroStartPoint", "cameraIntroStartPoint", "get$cameraIntroStartPoint", function() {
  return $.Vector$(60, -70, 150);
});
Isolate.$lazy($, "cameraIntroEndPoint", "cameraIntroEndPoint", "get$cameraIntroEndPoint", function() {
  return $.Vector$(0, 0, 0);
});
// Native classes
$.defineNativeMethodsNonleaf("HTMLElement", $._HTMLElement);

$.defineNativeMethods("HTMLAnchorElement", $.AnchorElement);

$.defineNativeMethods("WebKitAnimationEvent", $.AnimationEvent);

$.defineNativeMethods("HTMLAreaElement", $.AreaElement);

$.defineNativeMethods("HTMLAudioElement", $.AudioElement);

$.defineNativeMethods("AutocompleteErrorEvent", $.AutocompleteErrorEvent);

$.defineNativeMethods("HTMLBRElement", $.BRElement);

$.defineNativeMethods("HTMLBaseElement", $.BaseElement);

$.defineNativeMethods("BeforeLoadEvent", $.BeforeLoadEvent);

$.defineNativeMethodsNonleaf("Blob", $.Blob);

$.defineNativeMethods("HTMLBodyElement", $.BodyElement);

$.defineNativeMethods("HTMLButtonElement", $.ButtonElement);

$.defineNativeMethods("CDATASection", $.CDataSection);

$.defineNativeMethods("HTMLCanvasElement", $.CanvasElement);

$.defineNativeMethodsNonleaf("CanvasRenderingContext", $.CanvasRenderingContext);

$.defineNativeMethods("CanvasRenderingContext2D", $.CanvasRenderingContext2D);

$.defineNativeMethodsNonleaf("CharacterData", $.CharacterData);

$.defineNativeMethods("CloseEvent", $.CloseEvent);

$.defineNativeMethods("Comment", $.Comment);

$.defineNativeMethods("CompositionEvent", $.CompositionEvent);

$.defineNativeMethods("HTMLContentElement", $.ContentElement);

$.defineNativeMethods("CSSFontFaceLoadEvent", $.CssFontFaceLoadEvent);

$.defineNativeMethods("CustomElementConstructor", $.CustomElementConstructor);

$.defineNativeMethods("CustomEvent", $.CustomEvent);

$.defineNativeMethods("HTMLDListElement", $.DListElement);

$.defineNativeMethods("HTMLDataListElement", $.DataListElement);

$.defineNativeMethods("HTMLDetailsElement", $.DetailsElement);

$.defineNativeMethods("DeviceMotionEvent", $.DeviceMotionEvent);

$.defineNativeMethods("DeviceOrientationEvent", $.DeviceOrientationEvent);

$.defineNativeMethods("HTMLDialogElement", $.DialogElement);

$.defineNativeMethods("HTMLDivElement", $.DivElement);

$.defineNativeMethodsNonleaf("Document", $.Document);

$.defineNativeMethodsNonleaf("DocumentFragment", $.DocumentFragment);

$.defineNativeMethods("DocumentType", $.DocumentType);

$.defineNativeMethods("DOMError", $.DomError);

$.defineNativeMethods("DOMException", $.DomException);

$.defineNativeMethodsNonleaf("Element", $.Element);

$.defineNativeMethods("HTMLEmbedElement", $.EmbedElement);

$.defineNativeMethods("ErrorEvent", $.ErrorEvent);

$.defineNativeMethodsNonleaf("Event", $.Event);

$.defineNativeMethods("EventException", $.EventException);

$.defineNativeMethodsNonleaf("EventTarget", $.EventTarget);

$.defineNativeMethods("HTMLFieldSetElement", $.FieldSetElement);

$.defineNativeMethods("File", $.File);

$.defineNativeMethods("FileError", $.FileError);

$.defineNativeMethods("FileException", $.FileException);

$.defineNativeMethods("FocusEvent", $.FocusEvent);

$.defineNativeMethods("HTMLFormElement", $.FormElement);

$.defineNativeMethods("HTMLHRElement", $.HRElement);

$.defineNativeMethods("HashChangeEvent", $.HashChangeEvent);

$.defineNativeMethods("HTMLHeadElement", $.HeadElement);

$.defineNativeMethods("HTMLHeadingElement", $.HeadingElement);

$.defineNativeMethodsNonleaf("HTMLCollection", $.HtmlCollection);

$.defineNativeMethods("HTMLDocument", $.HtmlDocument);

$.defineNativeMethods("HTMLHtmlElement", $.HtmlElement);

$.defineNativeMethods("HTMLFormControlsCollection", $.HtmlFormControlsCollection);

$.defineNativeMethods("HTMLOptionsCollection", $.HtmlOptionsCollection);

$.defineNativeMethods("XMLHttpRequest", $.HttpRequest);

$.defineNativeMethods("XMLHttpRequestProgressEvent", $.HttpRequestProgressEvent);

$.defineNativeMethods("HTMLIFrameElement", $.IFrameElement);

$.defineNativeMethods("HTMLImageElement", $.ImageElement);

$.defineNativeMethods("HTMLInputElement", $.InputElement);

$.defineNativeMethods("KeyboardEvent", $.KeyboardEvent);

$.defineNativeMethods("HTMLKeygenElement", $.KeygenElement);

$.defineNativeMethods("HTMLLIElement", $.LIElement);

$.defineNativeMethods("HTMLLabelElement", $.LabelElement);

$.defineNativeMethods("HTMLLegendElement", $.LegendElement);

$.defineNativeMethods("HTMLLinkElement", $.LinkElement);

$.defineNativeMethods("HTMLMapElement", $.MapElement);

$.defineNativeMethodsNonleaf("HTMLMediaElement", $.MediaElement);

$.defineNativeMethods("MediaError", $.MediaError);

$.defineNativeMethods("MediaKeyError", $.MediaKeyError);

$.defineNativeMethods("MediaKeyEvent", $.MediaKeyEvent);

$.defineNativeMethods("MediaKeyMessageEvent", $.MediaKeyMessageEvent);

$.defineNativeMethods("MediaKeyNeededEvent", $.MediaKeyNeededEvent);

$.defineNativeMethods("MediaStreamEvent", $.MediaStreamEvent);

$.defineNativeMethods("MediaStreamTrackEvent", $.MediaStreamTrackEvent);

$.defineNativeMethods("HTMLMenuElement", $.MenuElement);

$.defineNativeMethods("MessageEvent", $.MessageEvent);

$.defineNativeMethods("HTMLMetaElement", $.MetaElement);

$.defineNativeMethods("HTMLMeterElement", $.MeterElement);

$.defineNativeMethods("MIDIConnectionEvent", $.MidiConnectionEvent);

$.defineNativeMethods("MIDIMessageEvent", $.MidiMessageEvent);

$.defineNativeMethods("HTMLModElement", $.ModElement);

$.defineNativeMethodsNonleaf("DragEvent|MouseEvent", $.MouseEvent);

$.defineNativeMethods("MutationEvent", $.MutationEvent);

$.defineNativeMethods("Navigator", $.Navigator);

$.defineNativeMethods("NavigatorUserMediaError", $.NavigatorUserMediaError);

$.defineNativeMethodsNonleaf("Node", $.Node0);

$.defineNativeMethods("NodeList|RadioNodeList", $.NodeList);

$.defineNativeMethods("Notation", $.Notation);

$.defineNativeMethods("HTMLOListElement", $.OListElement);

$.defineNativeMethods("HTMLObjectElement", $.ObjectElement);

$.defineNativeMethods("HTMLOptGroupElement", $.OptGroupElement);

$.defineNativeMethods("HTMLOptionElement", $.OptionElement);

$.defineNativeMethods("HTMLOutputElement", $.OutputElement);

$.defineNativeMethods("OverflowEvent", $.OverflowEvent);

$.defineNativeMethods("PageTransitionEvent", $.PageTransitionEvent);

$.defineNativeMethods("HTMLParagraphElement", $.ParagraphElement);

$.defineNativeMethods("HTMLParamElement", $.ParamElement);

$.defineNativeMethods("PopStateEvent", $.PopStateEvent);

$.defineNativeMethods("PositionError", $.PositionError);

$.defineNativeMethods("HTMLPreElement", $.PreElement);

$.defineNativeMethods("ProcessingInstruction", $.ProcessingInstruction);

$.defineNativeMethods("HTMLProgressElement", $.ProgressElement);

$.defineNativeMethodsNonleaf("ProgressEvent", $.ProgressEvent);

$.defineNativeMethods("HTMLQuoteElement", $.QuoteElement);

$.defineNativeMethods("ResourceProgressEvent", $.ResourceProgressEvent);

$.defineNativeMethods("RTCDataChannelEvent", $.RtcDataChannelEvent);

$.defineNativeMethods("RTCDTMFToneChangeEvent", $.RtcDtmfToneChangeEvent);

$.defineNativeMethods("RTCIceCandidateEvent", $.RtcIceCandidateEvent);

$.defineNativeMethods("HTMLScriptElement", $.ScriptElement);

$.defineNativeMethods("SecurityPolicyViolationEvent", $.SecurityPolicyViolationEvent);

$.defineNativeMethods("HTMLSelectElement", $.SelectElement);

$.defineNativeMethods("HTMLShadowElement", $.ShadowElement);

$.defineNativeMethods("ShadowRoot", $.ShadowRoot);

$.defineNativeMethods("HTMLSourceElement", $.SourceElement);

$.defineNativeMethods("HTMLSpanElement", $.SpanElement);

$.defineNativeMethods("SpeechInputEvent", $.SpeechInputEvent);

$.defineNativeMethods("SpeechRecognitionError", $.SpeechRecognitionError);

$.defineNativeMethods("SpeechRecognitionEvent", $.SpeechRecognitionEvent);

$.defineNativeMethods("SpeechSynthesisEvent", $.SpeechSynthesisEvent);

$.defineNativeMethods("StorageEvent", $.StorageEvent);

$.defineNativeMethods("HTMLStyleElement", $.StyleElement);

$.defineNativeMethods("HTMLTableCaptionElement", $.TableCaptionElement);

$.defineNativeMethods("HTMLTableCellElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement", $.TableCellElement);

$.defineNativeMethods("HTMLTableColElement", $.TableColElement);

$.defineNativeMethods("HTMLTableElement", $.TableElement);

$.defineNativeMethods("HTMLTableRowElement", $.TableRowElement);

$.defineNativeMethods("HTMLTableSectionElement", $.TableSectionElement);

$.defineNativeMethods("HTMLTemplateElement", $.TemplateElement);

$.defineNativeMethodsNonleaf("Text", $.Text);

$.defineNativeMethods("HTMLTextAreaElement", $.TextAreaElement);

$.defineNativeMethods("TextEvent", $.TextEvent);

$.defineNativeMethods("HTMLTitleElement", $.TitleElement);

$.defineNativeMethods("TouchEvent", $.TouchEvent);

$.defineNativeMethods("HTMLTrackElement", $.TrackElement);

$.defineNativeMethods("TrackEvent", $.TrackEvent);

$.defineNativeMethods("TransitionEvent|WebKitTransitionEvent", $.TransitionEvent);

$.defineNativeMethodsNonleaf("UIEvent", $.UIEvent);

$.defineNativeMethods("HTMLUListElement", $.UListElement);

$.defineNativeMethods("HTMLUnknownElement", $.UnknownElement);

$.defineNativeMethods("HTMLVideoElement", $.VideoElement);

$.defineNativeMethods("MouseScrollEvent|MouseWheelEvent|WheelEvent", $.WheelEvent);

$.defineNativeMethods("DOMWindow|Window", $.Window);

$.defineNativeMethods("XPathException", $.XPathException);

$.defineNativeMethods("Attr", $._Attr);

$.defineNativeMethods("Entity", $._Entity);

$.defineNativeMethods("IDBVersionChangeEvent", $.VersionChangeEvent);

$.defineNativeMethods("SVGAElement", $.AElement);

$.defineNativeMethods("SVGAltGlyphElement", $.AltGlyphElement);

$.defineNativeMethods("SVGAnimateElement", $.AnimateElement);

$.defineNativeMethods("SVGAnimateMotionElement", $.AnimateMotionElement);

$.defineNativeMethods("SVGAnimateTransformElement", $.AnimateTransformElement);

$.defineNativeMethods("SVGAnimatedLength", $.AnimatedLength);

$.defineNativeMethods("SVGAnimatedLengthList", $.AnimatedLengthList);

$.defineNativeMethods("SVGAnimatedNumber", $.AnimatedNumber);

$.defineNativeMethods("SVGAnimatedNumberList", $.AnimatedNumberList);

$.defineNativeMethodsNonleaf("SVGAnimationElement", $.AnimationElement);

$.defineNativeMethods("SVGCircleElement", $.CircleElement);

$.defineNativeMethods("SVGClipPathElement", $.ClipPathElement);

$.defineNativeMethods("SVGDefsElement", $.DefsElement);

$.defineNativeMethods("SVGDescElement", $.DescElement);

$.defineNativeMethods("SVGEllipseElement", $.EllipseElement);

$.defineNativeMethods("SVGFEBlendElement", $.FEBlendElement);

$.defineNativeMethods("SVGFEColorMatrixElement", $.FEColorMatrixElement);

$.defineNativeMethods("SVGFEComponentTransferElement", $.FEComponentTransferElement);

$.defineNativeMethods("SVGFECompositeElement", $.FECompositeElement);

$.defineNativeMethods("SVGFEConvolveMatrixElement", $.FEConvolveMatrixElement);

$.defineNativeMethods("SVGFEDiffuseLightingElement", $.FEDiffuseLightingElement);

$.defineNativeMethods("SVGFEDisplacementMapElement", $.FEDisplacementMapElement);

$.defineNativeMethods("SVGFEDistantLightElement", $.FEDistantLightElement);

$.defineNativeMethods("SVGFEFloodElement", $.FEFloodElement);

$.defineNativeMethods("SVGFEFuncAElement", $.FEFuncAElement);

$.defineNativeMethods("SVGFEFuncBElement", $.FEFuncBElement);

$.defineNativeMethods("SVGFEFuncGElement", $.FEFuncGElement);

$.defineNativeMethods("SVGFEFuncRElement", $.FEFuncRElement);

$.defineNativeMethods("SVGFEGaussianBlurElement", $.FEGaussianBlurElement);

$.defineNativeMethods("SVGFEImageElement", $.FEImageElement);

$.defineNativeMethods("SVGFEMergeElement", $.FEMergeElement);

$.defineNativeMethods("SVGFEMergeNodeElement", $.FEMergeNodeElement);

$.defineNativeMethods("SVGFEMorphologyElement", $.FEMorphologyElement);

$.defineNativeMethods("SVGFEOffsetElement", $.FEOffsetElement);

$.defineNativeMethods("SVGFEPointLightElement", $.FEPointLightElement);

$.defineNativeMethods("SVGFESpecularLightingElement", $.FESpecularLightingElement);

$.defineNativeMethods("SVGFESpotLightElement", $.FESpotLightElement);

$.defineNativeMethods("SVGFETileElement", $.FETileElement);

$.defineNativeMethods("SVGFETurbulenceElement", $.FETurbulenceElement);

$.defineNativeMethods("SVGFilterElement", $.FilterElement);

$.defineNativeMethods("SVGForeignObjectElement", $.ForeignObjectElement);

$.defineNativeMethods("SVGGElement", $.GElement);

$.defineNativeMethods("SVGImageElement", $.ImageElement0);

$.defineNativeMethods("SVGLineElement", $.LineElement);

$.defineNativeMethods("SVGLinearGradientElement", $.LinearGradientElement);

$.defineNativeMethods("SVGMarkerElement", $.MarkerElement);

$.defineNativeMethods("SVGMaskElement", $.MaskElement);

$.defineNativeMethods("SVGMetadataElement", $.MetadataElement);

$.defineNativeMethods("SVGPathElement", $.PathElement);

$.defineNativeMethods("SVGPatternElement", $.PatternElement);

$.defineNativeMethods("SVGPolygonElement", $.PolygonElement);

$.defineNativeMethods("SVGPolylineElement", $.PolylineElement);

$.defineNativeMethods("SVGRadialGradientElement", $.RadialGradientElement);

$.defineNativeMethods("SVGRect", $.Rect0);

$.defineNativeMethods("SVGRectElement", $.RectElement);

$.defineNativeMethods("SVGScriptElement", $.ScriptElement0);

$.defineNativeMethods("SVGSetElement", $.SetElement);

$.defineNativeMethods("SVGStopElement", $.StopElement);

$.defineNativeMethods("SVGStyleElement", $.StyleElement0);

$.defineNativeMethodsNonleaf("SVGStyledElement", $.StyledElement);

$.defineNativeMethods("SVGDocument", $.SvgDocument);

$.defineNativeMethodsNonleaf("SVGElement", $.SvgElement);

$.defineNativeMethods("SVGException", $.SvgException);

$.defineNativeMethods("SVGSVGElement", $.SvgSvgElement);

$.defineNativeMethods("SVGSwitchElement", $.SwitchElement);

$.defineNativeMethods("SVGSymbolElement", $.SymbolElement);

$.defineNativeMethods("SVGTSpanElement", $.TSpanElement);

$.defineNativeMethodsNonleaf("SVGTextContentElement", $.TextContentElement);

$.defineNativeMethods("SVGTextElement", $.TextElement);

$.defineNativeMethods("SVGTextPathElement", $.TextPathElement);

$.defineNativeMethodsNonleaf("SVGTextPositioningElement", $.TextPositioningElement);

$.defineNativeMethods("SVGTitleElement", $.TitleElement0);

$.defineNativeMethods("SVGUseElement", $.UseElement);

$.defineNativeMethods("SVGViewElement", $.ViewElement);

$.defineNativeMethods("SVGZoomEvent", $.ZoomEvent);

$.defineNativeMethodsNonleaf("SVGGradientElement", $._GradientElement);

$.defineNativeMethodsNonleaf("SVGComponentTransferFunctionElement", $._SVGComponentTransferFunctionElement);

$.defineNativeMethods("AudioProcessingEvent", $.AudioProcessingEvent);

$.defineNativeMethods("OfflineAudioCompletionEvent", $.OfflineAudioCompletionEvent);

$.defineNativeMethods("WebGLBuffer", $.Buffer);

$.defineNativeMethods("WebGLContextEvent", $.ContextEvent);

$.defineNativeMethods("WebGLProgram", $.Program);

$.defineNativeMethods("WebGLRenderingContext", $.RenderingContext);

$.defineNativeMethods("WebGLShader", $.Shader);

$.defineNativeMethods("WebGLTexture", $.Texture);

$.defineNativeMethods("WebGLUniformLocation", $.UniformLocation);

$.defineNativeMethods("SQLError", $.SqlError);

$.defineNativeMethods("SQLException", $.SqlException);

$.defineNativeMethods("ArrayBuffer", $.ByteBuffer);

$.defineNativeMethodsNonleaf("ArrayBufferView", $.TypedData);

$.defineNativeMethods("Float32Array", $.Float32List);

$.defineNativeMethods("Uint16Array", $.Uint16List);

$.defineNativeMethods("CanvasPixelArray|Uint8ClampedArray", $.Uint8ClampedList);

$.defineNativeMethodsNonleaf("Uint8Array", $.Uint8List);


init.metadata = [];
var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.initializeDispatchProperty(function(a) {
  $.getDispatchProperty = a;
}, "___dart_dispatch_record_ZxYxX_0_", $.Interceptor.prototype);
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.startRootIsolate($.main$closure); });
      } else {
        $.startRootIsolate($.main$closure);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main$closure); });
  } else {
    $.startRootIsolate($.main$closure);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = generateAccessor(fields[i], prototype);
        var parameter = "parameter_" + field;
        str += parameter;
        body += "this." + field + " = " + parameter + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = name;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", "c", ["f<"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        if (typeof fields == "string") {
          var s = fields.split(";");
          fields = s[1] == "" ? [] : s[1].split(",");
          supr = s[0];
        } else {
          supr = desc.super;
          if (!!desc.$name)
            name = desc.$name;
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        var constructor = defineClass(name, cls, fields, desc);
        isolateProperties[cls] = constructor;
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.makeConstantList = oldIsolate.makeConstantList;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=heise.dart.js.map
